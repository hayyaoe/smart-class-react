{
  "version": 3,
  "sources": ["../../@iconify/utils/lib/icon/defaults.mjs", "../../@iconify/utils/lib/customisations/defaults.mjs", "../../@iconify/utils/lib/icon/name.mjs", "../../@iconify/utils/lib/icon/transformations.mjs", "../../@iconify/utils/lib/icon/merge.mjs", "../../@iconify/utils/lib/icon-set/tree.mjs", "../../@iconify/utils/lib/icon-set/get-icon.mjs", "../../@iconify/utils/lib/icon-set/validate-basic.mjs", "../../@iconify/utils/lib/icon-set/get-icons.mjs", "../../@iconify/utils/lib/svg/size.mjs", "../../@iconify/utils/lib/svg/defs.mjs", "../../@iconify/utils/lib/svg/build.mjs", "../../@iconify/utils/lib/svg/id.mjs", "../../@iconify/utils/lib/svg/html.mjs", "../../@iconify/utils/lib/colors/keywords.mjs", "../../@iconify/utils/lib/css/icons.mjs", "../../@iconify/utils/lib/loader/custom.mjs", "../../@iconify/utils/lib/loader/modern.mjs", "../../@iconify/utils/lib/loader/loader.mjs", "../../@iconify/utils/lib/emoji/format.mjs", "../../@iconify/utils/lib/index.mjs", "../../mermaid/dist/chunks/mermaid.core/chunk-CTJGIJSU.mjs"],
  "sourcesContent": ["const defaultIconDimensions = Object.freeze(\r\n  {\r\n    left: 0,\r\n    top: 0,\r\n    width: 16,\r\n    height: 16\r\n  }\r\n);\r\nconst defaultIconTransformations = Object.freeze({\r\n  rotate: 0,\r\n  vFlip: false,\r\n  hFlip: false\r\n});\r\nconst defaultIconProps = Object.freeze({\r\n  ...defaultIconDimensions,\r\n  ...defaultIconTransformations\r\n});\r\nconst defaultExtendedIconProps = Object.freeze({\r\n  ...defaultIconProps,\r\n  body: \"\",\r\n  hidden: false\r\n});\r\n\r\nexport { defaultExtendedIconProps, defaultIconDimensions, defaultIconProps, defaultIconTransformations };\r\n", "import { defaultIconTransformations } from '../icon/defaults.mjs';\r\n\r\nconst defaultIconSizeCustomisations = Object.freeze({\r\n  width: null,\r\n  height: null\r\n});\r\nconst defaultIconCustomisations = Object.freeze({\r\n  // Dimensions\r\n  ...defaultIconSizeCustomisations,\r\n  // Transformations\r\n  ...defaultIconTransformations\r\n});\r\n\r\nexport { defaultIconCustomisations, defaultIconSizeCustomisations };\r\n", "const matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\r\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\r\n  const colonSeparated = value.split(\":\");\r\n  if (value.slice(0, 1) === \"@\") {\r\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\r\n      return null;\r\n    }\r\n    provider = colonSeparated.shift().slice(1);\r\n  }\r\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\r\n    return null;\r\n  }\r\n  if (colonSeparated.length > 1) {\r\n    const name2 = colonSeparated.pop();\r\n    const prefix = colonSeparated.pop();\r\n    const result = {\r\n      // Allow provider without '@': \"provider:prefix:name\"\r\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\r\n      prefix,\r\n      name: name2\r\n    };\r\n    return validate && !validateIconName(result) ? null : result;\r\n  }\r\n  const name = colonSeparated[0];\r\n  const dashSeparated = name.split(\"-\");\r\n  if (dashSeparated.length > 1) {\r\n    const result = {\r\n      provider,\r\n      prefix: dashSeparated.shift(),\r\n      name: dashSeparated.join(\"-\")\r\n    };\r\n    return validate && !validateIconName(result) ? null : result;\r\n  }\r\n  if (allowSimpleName && provider === \"\") {\r\n    const result = {\r\n      provider,\r\n      prefix: \"\",\r\n      name\r\n    };\r\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\r\n  }\r\n  return null;\r\n};\r\nconst validateIconName = (icon, allowSimpleName) => {\r\n  if (!icon) {\r\n    return false;\r\n  }\r\n  return !!((icon.provider === \"\" || icon.provider.match(matchIconName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchIconName)) && icon.name.match(matchIconName));\r\n};\r\n\r\nexport { matchIconName, stringToIcon, validateIconName };\r\n", "function mergeIconTransformations(obj1, obj2) {\r\n  const result = {};\r\n  if (!obj1.hFlip !== !obj2.hFlip) {\r\n    result.hFlip = true;\r\n  }\r\n  if (!obj1.vFlip !== !obj2.vFlip) {\r\n    result.vFlip = true;\r\n  }\r\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\r\n  if (rotate) {\r\n    result.rotate = rotate;\r\n  }\r\n  return result;\r\n}\r\n\r\nexport { mergeIconTransformations };\r\n", "import { defaultExtendedIconProps, defaultIconTransformations } from './defaults.mjs';\r\nimport { mergeIconTransformations } from './transformations.mjs';\r\n\r\nfunction mergeIconData(parent, child) {\r\n  const result = mergeIconTransformations(parent, child);\r\n  for (const key in defaultExtendedIconProps) {\r\n    if (key in defaultIconTransformations) {\r\n      if (key in parent && !(key in result)) {\r\n        result[key] = defaultIconTransformations[key];\r\n      }\r\n    } else if (key in child) {\r\n      result[key] = child[key];\r\n    } else if (key in parent) {\r\n      result[key] = parent[key];\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport { mergeIconData };\r\n", "function getIconsTree(data, names) {\r\n  const icons = data.icons;\r\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\r\n  const resolved = /* @__PURE__ */ Object.create(null);\r\n  function resolve(name) {\r\n    if (icons[name]) {\r\n      return resolved[name] = [];\r\n    }\r\n    if (!(name in resolved)) {\r\n      resolved[name] = null;\r\n      const parent = aliases[name] && aliases[name].parent;\r\n      const value = parent && resolve(parent);\r\n      if (value) {\r\n        resolved[name] = [parent].concat(value);\r\n      }\r\n    }\r\n    return resolved[name];\r\n  }\r\n  (names || Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\r\n  return resolved;\r\n}\r\n\r\nexport { getIconsTree };\r\n", "import { mergeIconData } from '../icon/merge.mjs';\r\nimport { getIconsTree } from './tree.mjs';\r\nimport '../icon/defaults.mjs';\r\nimport '../icon/transformations.mjs';\r\n\r\nfunction internalGetIconData(data, name, tree) {\r\n  const icons = data.icons;\r\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\r\n  let currentProps = {};\r\n  function parse(name2) {\r\n    currentProps = mergeIconData(\r\n      icons[name2] || aliases[name2],\r\n      currentProps\r\n    );\r\n  }\r\n  parse(name);\r\n  tree.forEach(parse);\r\n  return mergeIconData(data, currentProps);\r\n}\r\nfunction getIconData(data, name) {\r\n  if (data.icons[name]) {\r\n    return internalGetIconData(data, name, []);\r\n  }\r\n  const tree = getIconsTree(data, [name])[name];\r\n  return tree ? internalGetIconData(data, name, tree) : null;\r\n}\r\n\r\nexport { getIconData, internalGetIconData };\r\n", "import { matchIconName } from '../icon/name.mjs';\r\nimport { defaultIconDimensions, defaultExtendedIconProps } from '../icon/defaults.mjs';\r\n\r\nconst optionalPropertyDefaults = {\r\n  provider: \"\",\r\n  aliases: {},\r\n  not_found: {},\r\n  ...defaultIconDimensions\r\n};\r\nfunction checkOptionalProps(item, defaults) {\r\n  for (const prop in defaults) {\r\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\nfunction quicklyValidateIconSet(obj) {\r\n  if (typeof obj !== \"object\" || obj === null) {\r\n    return null;\r\n  }\r\n  const data = obj;\r\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\r\n    return null;\r\n  }\r\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\r\n    return null;\r\n  }\r\n  const icons = data.icons;\r\n  for (const name in icons) {\r\n    const icon = icons[name];\r\n    if (!name.match(matchIconName) || typeof icon.body !== \"string\" || !checkOptionalProps(\r\n      icon,\r\n      defaultExtendedIconProps\r\n    )) {\r\n      return null;\r\n    }\r\n  }\r\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\r\n  for (const name in aliases) {\r\n    const icon = aliases[name];\r\n    const parent = icon.parent;\r\n    if (!name.match(matchIconName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(\r\n      icon,\r\n      defaultExtendedIconProps\r\n    )) {\r\n      return null;\r\n    }\r\n  }\r\n  return data;\r\n}\r\n\r\nexport { quicklyValidateIconSet };\r\n", "import { defaultIconDimensions } from '../icon/defaults.mjs';\r\nimport { getIconsTree } from './tree.mjs';\r\n\r\nconst propsToCopy = Object.keys(defaultIconDimensions).concat([\r\n  \"provider\"\r\n]);\r\nfunction getIcons(data, names, not_found) {\r\n  const icons = /* @__PURE__ */ Object.create(null);\r\n  const aliases = /* @__PURE__ */ Object.create(null);\r\n  const result = {\r\n    prefix: data.prefix,\r\n    icons\r\n  };\r\n  const sourceIcons = data.icons;\r\n  const sourceAliases = data.aliases || /* @__PURE__ */ Object.create(null);\r\n  if (data.lastModified) {\r\n    result.lastModified = data.lastModified;\r\n  }\r\n  const tree = getIconsTree(data, names);\r\n  let empty = true;\r\n  for (const name in tree) {\r\n    if (!tree[name]) {\r\n      if (not_found && names.indexOf(name) !== -1) {\r\n        (result.not_found || (result.not_found = [])).push(name);\r\n      }\r\n    } else if (sourceIcons[name]) {\r\n      icons[name] = {\r\n        ...sourceIcons[name]\r\n      };\r\n      empty = false;\r\n    } else {\r\n      aliases[name] = {\r\n        ...sourceAliases[name]\r\n      };\r\n      result.aliases = aliases;\r\n    }\r\n  }\r\n  propsToCopy.forEach((attr) => {\r\n    if (attr in data) {\r\n      result[attr] = data[attr];\r\n    }\r\n  });\r\n  return empty && not_found !== true ? null : result;\r\n}\r\n\r\nexport { getIcons, propsToCopy };\r\n", "const unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\r\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\r\nfunction calculateSize(size, ratio, precision) {\r\n  if (ratio === 1) {\r\n    return size;\r\n  }\r\n  precision = precision || 100;\r\n  if (typeof size === \"number\") {\r\n    return Math.ceil(size * ratio * precision) / precision;\r\n  }\r\n  if (typeof size !== \"string\") {\r\n    return size;\r\n  }\r\n  const oldParts = size.split(unitsSplit);\r\n  if (oldParts === null || !oldParts.length) {\r\n    return size;\r\n  }\r\n  const newParts = [];\r\n  let code = oldParts.shift();\r\n  let isNumber = unitsTest.test(code);\r\n  while (true) {\r\n    if (isNumber) {\r\n      const num = parseFloat(code);\r\n      if (isNaN(num)) {\r\n        newParts.push(code);\r\n      } else {\r\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\r\n      }\r\n    } else {\r\n      newParts.push(code);\r\n    }\r\n    code = oldParts.shift();\r\n    if (code === void 0) {\r\n      return newParts.join(\"\");\r\n    }\r\n    isNumber = !isNumber;\r\n  }\r\n}\r\n\r\nexport { calculateSize };\r\n", "function splitSVGDefs(content, tag = \"defs\") {\r\n  let defs = \"\";\r\n  const index = content.indexOf(\"<\" + tag);\r\n  while (index >= 0) {\r\n    const start = content.indexOf(\">\", index);\r\n    const end = content.indexOf(\"</\" + tag);\r\n    if (start === -1 || end === -1) {\r\n      break;\r\n    }\r\n    const endEnd = content.indexOf(\">\", end);\r\n    if (endEnd === -1) {\r\n      break;\r\n    }\r\n    defs += content.slice(start + 1, end).trim();\r\n    content = content.slice(0, index).trim() + content.slice(endEnd + 1);\r\n  }\r\n  return {\r\n    defs,\r\n    content\r\n  };\r\n}\r\nfunction mergeDefsAndContent(defs, content) {\r\n  return defs ? \"<defs>\" + defs + \"</defs>\" + content : content;\r\n}\r\nfunction wrapSVGContent(body, start, end) {\r\n  const split = splitSVGDefs(body);\r\n  return mergeDefsAndContent(split.defs, start + split.content + end);\r\n}\r\n\r\nexport { mergeDefsAndContent, splitSVGDefs, wrapSVGContent };\r\n", "import { defaultIconProps } from '../icon/defaults.mjs';\r\nimport { defaultIconCustomisations } from '../customisations/defaults.mjs';\r\nimport { calculateSize } from './size.mjs';\r\nimport { wrapSVGContent } from './defs.mjs';\r\n\r\nconst isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\r\nfunction iconToSVG(icon, customisations) {\r\n  const fullIcon = {\r\n    ...defaultIconProps,\r\n    ...icon\r\n  };\r\n  const fullCustomisations = {\r\n    ...defaultIconCustomisations,\r\n    ...customisations\r\n  };\r\n  const box = {\r\n    left: fullIcon.left,\r\n    top: fullIcon.top,\r\n    width: fullIcon.width,\r\n    height: fullIcon.height\r\n  };\r\n  let body = fullIcon.body;\r\n  [fullIcon, fullCustomisations].forEach((props) => {\r\n    const transformations = [];\r\n    const hFlip = props.hFlip;\r\n    const vFlip = props.vFlip;\r\n    let rotation = props.rotate;\r\n    if (hFlip) {\r\n      if (vFlip) {\r\n        rotation += 2;\r\n      } else {\r\n        transformations.push(\r\n          \"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\"\r\n        );\r\n        transformations.push(\"scale(-1 1)\");\r\n        box.top = box.left = 0;\r\n      }\r\n    } else if (vFlip) {\r\n      transformations.push(\r\n        \"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\"\r\n      );\r\n      transformations.push(\"scale(1 -1)\");\r\n      box.top = box.left = 0;\r\n    }\r\n    let tempValue;\r\n    if (rotation < 0) {\r\n      rotation -= Math.floor(rotation / 4) * 4;\r\n    }\r\n    rotation = rotation % 4;\r\n    switch (rotation) {\r\n      case 1:\r\n        tempValue = box.height / 2 + box.top;\r\n        transformations.unshift(\r\n          \"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\r\n        );\r\n        break;\r\n      case 2:\r\n        transformations.unshift(\r\n          \"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\"\r\n        );\r\n        break;\r\n      case 3:\r\n        tempValue = box.width / 2 + box.left;\r\n        transformations.unshift(\r\n          \"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\r\n        );\r\n        break;\r\n    }\r\n    if (rotation % 2 === 1) {\r\n      if (box.left !== box.top) {\r\n        tempValue = box.left;\r\n        box.left = box.top;\r\n        box.top = tempValue;\r\n      }\r\n      if (box.width !== box.height) {\r\n        tempValue = box.width;\r\n        box.width = box.height;\r\n        box.height = tempValue;\r\n      }\r\n    }\r\n    if (transformations.length) {\r\n      body = wrapSVGContent(\r\n        body,\r\n        '<g transform=\"' + transformations.join(\" \") + '\">',\r\n        \"</g>\"\r\n      );\r\n    }\r\n  });\r\n  const customisationsWidth = fullCustomisations.width;\r\n  const customisationsHeight = fullCustomisations.height;\r\n  const boxWidth = box.width;\r\n  const boxHeight = box.height;\r\n  let width;\r\n  let height;\r\n  if (customisationsWidth === null) {\r\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\r\n    width = calculateSize(height, boxWidth / boxHeight);\r\n  } else {\r\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\r\n    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\r\n  }\r\n  const attributes = {};\r\n  const setAttr = (prop, value) => {\r\n    if (!isUnsetKeyword(value)) {\r\n      attributes[prop] = value.toString();\r\n    }\r\n  };\r\n  setAttr(\"width\", width);\r\n  setAttr(\"height\", height);\r\n  const viewBox = [box.left, box.top, boxWidth, boxHeight];\r\n  attributes.viewBox = viewBox.join(\" \");\r\n  return {\r\n    attributes,\r\n    viewBox,\r\n    body\r\n  };\r\n}\r\n\r\nexport { iconToSVG, isUnsetKeyword };\r\n", "const regex = /\\sid=\"(\\S+)\"/g;\r\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\r\nlet counter = 0;\r\nfunction replaceIDs(body, prefix = randomPrefix) {\r\n  const ids = [];\r\n  let match;\r\n  while (match = regex.exec(body)) {\r\n    ids.push(match[1]);\r\n  }\r\n  if (!ids.length) {\r\n    return body;\r\n  }\r\n  const suffix = \"suffix\" + (Math.random() * 16777216 | Date.now()).toString(16);\r\n  ids.forEach((id) => {\r\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\r\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    body = body.replace(\r\n      // Allowed characters before id: [#;\"]\r\n      // Allowed characters after id: [)\"], .[a-z]\r\n      new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"),\r\n      \"$1\" + newID + suffix + \"$3\"\r\n    );\r\n  });\r\n  body = body.replace(new RegExp(suffix, \"g\"), \"\");\r\n  return body;\r\n}\r\n\r\nexport { replaceIDs };\r\n", "function iconToHTML(body, attributes) {\r\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\r\n  for (const attr in attributes) {\r\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\r\n  }\r\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\r\n}\r\n\r\nexport { iconToHTML };\r\n", "const colorKeywords = {\r\n  transparent: {\r\n    type: \"transparent\"\r\n  },\r\n  none: {\r\n    type: \"none\"\r\n  },\r\n  currentcolor: {\r\n    type: \"current\"\r\n  }\r\n};\r\nfunction add(keyword, colors) {\r\n  const type = \"rgb\";\r\n  const r = colors[0];\r\n  const length = colors.length;\r\n  colorKeywords[keyword] = {\r\n    type,\r\n    r,\r\n    g: length > 1 ? colors[1] : r,\r\n    b: length > 2 ? colors[2] : r,\r\n    alpha: length > 3 ? colors[3] : 1\r\n  };\r\n}\r\nadd(\"silver\", [192]);\r\nadd(\"gray\", [128]);\r\nadd(\"white\", [255]);\r\nadd(\"maroon\", [128, 0, 0]);\r\nadd(\"red\", [255, 0, 0]);\r\nadd(\"purple\", [128, 0]);\r\nadd(\"fuchsia\", [255, 0]);\r\nadd(\"green\", [0, 128]);\r\nadd(\"lime\", [0, 255]);\r\nadd(\"olive\", [128, 128, 0]);\r\nadd(\"yellow\", [255, 255, 0]);\r\nadd(\"navy\", [0, 0, 128]);\r\nadd(\"blue\", [0, 0, 255]);\r\nadd(\"teal\", [0, 128, 128]);\r\nadd(\"aqua\", [0, 255, 255]);\r\nadd(\"aliceblue\", [240, 248, 255]);\r\nadd(\"antiquewhite\", [250, 235, 215]);\r\nadd(\"aqua\", [0, 255, 255]);\r\nadd(\"aquamarine\", [127, 255, 212]);\r\nadd(\"azure\", [240, 255, 255]);\r\nadd(\"beige\", [245, 245, 220]);\r\nadd(\"bisque\", [255, 228, 196]);\r\nadd(\"black\", [0]);\r\nadd(\"blanchedalmond\", [255, 235, 205]);\r\nadd(\"blue\", [0, 0, 255]);\r\nadd(\"blueviolet\", [138, 43, 226]);\r\nadd(\"brown\", [165, 42, 42]);\r\nadd(\"burlywood\", [222, 184, 135]);\r\nadd(\"cadetblue\", [95, 158, 160]);\r\nadd(\"chartreuse\", [127, 255, 0]);\r\nadd(\"chocolate\", [210, 105, 30]);\r\nadd(\"coral\", [255, 127, 80]);\r\nadd(\"cornflowerblue\", [100, 149, 237]);\r\nadd(\"cornsilk\", [255, 248, 220]);\r\nadd(\"crimson\", [220, 20, 60]);\r\nadd(\"cyan\", [0, 255, 255]);\r\nadd(\"darkblue\", [0, 0, 139]);\r\nadd(\"darkcyan\", [0, 139, 139]);\r\nadd(\"darkgoldenrod\", [184, 134, 11]);\r\nadd(\"darkgray\", [169]);\r\nadd(\"darkgreen\", [0, 100]);\r\nadd(\"darkgrey\", [169]);\r\nadd(\"darkkhaki\", [189, 183, 107]);\r\nadd(\"darkmagenta\", [139, 0]);\r\nadd(\"darkolivegreen\", [85, 107, 47]);\r\nadd(\"darkorange\", [255, 140, 0]);\r\nadd(\"darkorchid\", [153, 50, 204]);\r\nadd(\"darkred\", [139, 0, 0]);\r\nadd(\"darksalmon\", [233, 150, 122]);\r\nadd(\"darkseagreen\", [143, 188]);\r\nadd(\"darkslateblue\", [72, 61, 139]);\r\nadd(\"darkslategray\", [47, 79, 79]);\r\nadd(\"darkslategrey\", [47, 79, 79]);\r\nadd(\"darkturquoise\", [0, 206, 209]);\r\nadd(\"darkviolet\", [148, 0, 211]);\r\nadd(\"deeppink\", [255, 20, 147]);\r\nadd(\"deepskyblue\", [0, 191, 255]);\r\nadd(\"dimgray\", [105]);\r\nadd(\"dimgrey\", [105]);\r\nadd(\"dodgerblue\", [30, 144, 255]);\r\nadd(\"firebrick\", [178, 34, 34]);\r\nadd(\"floralwhite\", [255, 250, 240]);\r\nadd(\"forestgreen\", [34, 139]);\r\nadd(\"fuchsia\", [255, 0]);\r\nadd(\"gainsboro\", [220]);\r\nadd(\"ghostwhite\", [248, 248, 255]);\r\nadd(\"gold\", [255, 215, 0]);\r\nadd(\"goldenrod\", [218, 165, 32]);\r\nadd(\"gray\", [128]);\r\nadd(\"green\", [0, 128]);\r\nadd(\"greenyellow\", [173, 255, 47]);\r\nadd(\"grey\", [128]);\r\nadd(\"honeydew\", [240, 255]);\r\nadd(\"hotpink\", [255, 105, 180]);\r\nadd(\"indianred\", [205, 92, 92]);\r\nadd(\"indigo\", [75, 0, 130]);\r\nadd(\"ivory\", [255, 255, 240]);\r\nadd(\"khaki\", [240, 230, 140]);\r\nadd(\"lavender\", [230, 230, 250]);\r\nadd(\"lavenderblush\", [255, 240, 245]);\r\nadd(\"lawngreen\", [124, 252, 0]);\r\nadd(\"lemonchiffon\", [255, 250, 205]);\r\nadd(\"lightblue\", [173, 216, 230]);\r\nadd(\"lightcoral\", [240, 128, 128]);\r\nadd(\"lightcyan\", [224, 255, 255]);\r\nadd(\"lightgoldenrodyellow\", [250, 250, 210]);\r\nadd(\"lightgray\", [211]);\r\nadd(\"lightgreen\", [144, 238]);\r\nadd(\"lightgrey\", [211]);\r\nadd(\"lightpink\", [255, 182, 193]);\r\nadd(\"lightsalmon\", [255, 160, 122]);\r\nadd(\"lightseagreen\", [32, 178, 170]);\r\nadd(\"lightskyblue\", [135, 206, 250]);\r\nadd(\"lightslategray\", [119, 136, 153]);\r\nadd(\"lightslategrey\", [119, 136, 153]);\r\nadd(\"lightsteelblue\", [176, 196, 222]);\r\nadd(\"lightyellow\", [255, 255, 224]);\r\nadd(\"lime\", [0, 255]);\r\nadd(\"limegreen\", [50, 205]);\r\nadd(\"linen\", [250, 240, 230]);\r\nadd(\"magenta\", [255, 0]);\r\nadd(\"maroon\", [128, 0, 0]);\r\nadd(\"mediumaquamarine\", [102, 205, 170]);\r\nadd(\"mediumblue\", [0, 0, 205]);\r\nadd(\"mediumorchid\", [186, 85, 211]);\r\nadd(\"mediumpurple\", [147, 112, 219]);\r\nadd(\"mediumseagreen\", [60, 179, 113]);\r\nadd(\"mediumslateblue\", [123, 104, 238]);\r\nadd(\"mediumspringgreen\", [0, 250, 154]);\r\nadd(\"mediumturquoise\", [72, 209, 204]);\r\nadd(\"mediumvioletred\", [199, 21, 133]);\r\nadd(\"midnightblue\", [25, 25, 112]);\r\nadd(\"mintcream\", [245, 255, 250]);\r\nadd(\"mistyrose\", [255, 228, 225]);\r\nadd(\"moccasin\", [255, 228, 181]);\r\nadd(\"navajowhite\", [255, 222, 173]);\r\nadd(\"navy\", [0, 0, 128]);\r\nadd(\"oldlace\", [253, 245, 230]);\r\nadd(\"olive\", [128, 128, 0]);\r\nadd(\"olivedrab\", [107, 142, 35]);\r\nadd(\"orange\", [255, 165, 0]);\r\nadd(\"orangered\", [255, 69, 0]);\r\nadd(\"orchid\", [218, 112, 214]);\r\nadd(\"palegoldenrod\", [238, 232, 170]);\r\nadd(\"palegreen\", [152, 251]);\r\nadd(\"paleturquoise\", [175, 238, 238]);\r\nadd(\"palevioletred\", [219, 112, 147]);\r\nadd(\"papayawhip\", [255, 239, 213]);\r\nadd(\"peachpuff\", [255, 218, 185]);\r\nadd(\"peru\", [205, 133, 63]);\r\nadd(\"pink\", [255, 192, 203]);\r\nadd(\"plum\", [221, 160]);\r\nadd(\"powderblue\", [176, 224, 230]);\r\nadd(\"purple\", [128, 0]);\r\nadd(\"rebeccapurple\", [102, 51, 153]);\r\nadd(\"red\", [255, 0, 0]);\r\nadd(\"rosybrown\", [188, 143, 143]);\r\nadd(\"royalblue\", [65, 105, 225]);\r\nadd(\"saddlebrown\", [139, 69, 19]);\r\nadd(\"salmon\", [250, 128, 114]);\r\nadd(\"sandybrown\", [244, 164, 96]);\r\nadd(\"seagreen\", [46, 139, 87]);\r\nadd(\"seashell\", [255, 245, 238]);\r\nadd(\"sienna\", [160, 82, 45]);\r\nadd(\"silver\", [192]);\r\nadd(\"skyblue\", [135, 206, 235]);\r\nadd(\"slateblue\", [106, 90, 205]);\r\nadd(\"slategray\", [112, 128, 144]);\r\nadd(\"slategrey\", [112, 128, 144]);\r\nadd(\"snow\", [255, 250, 250]);\r\nadd(\"springgreen\", [0, 255, 127]);\r\nadd(\"steelblue\", [70, 130, 180]);\r\nadd(\"tan\", [210, 180, 140]);\r\nadd(\"teal\", [0, 128, 128]);\r\nadd(\"thistle\", [216, 191]);\r\nadd(\"tomato\", [255, 99, 71]);\r\nadd(\"turquoise\", [64, 224, 208]);\r\nadd(\"violet\", [238, 130]);\r\nadd(\"wheat\", [245, 222, 179]);\r\nadd(\"white\", [255]);\r\nadd(\"whitesmoke\", [245]);\r\nadd(\"yellow\", [255, 255, 0]);\r\nadd(\"yellowgreen\", [154, 205, 50]);\r\n\r\nexport { colorKeywords };\r\n", "import { getIconData } from '../icon-set/get-icon.mjs';\r\nimport { defaultIconProps } from '../icon/defaults.mjs';\r\nimport { getCommonCSSRules, generateItemCSSRules, generateItemContent } from './common.mjs';\r\nimport { formatCSS } from './format.mjs';\r\nimport '../icon/merge.mjs';\r\nimport '../icon/transformations.mjs';\r\nimport '../icon-set/tree.mjs';\r\nimport '../svg/html.mjs';\r\nimport '../svg/size.mjs';\r\nimport '../svg/url.mjs';\r\nimport '../icon/square.mjs';\r\nimport '../svg/build.mjs';\r\nimport '../customisations/defaults.mjs';\r\nimport '../svg/defs.mjs';\r\n\r\nconst commonSelector = \".icon--{prefix}\";\r\nconst iconSelector = \".icon--{prefix}--{name}\";\r\nconst contentSelector = \".icon--{prefix}--{name}::after\";\r\nconst defaultSelectors = {\r\n  commonSelector,\r\n  iconSelector,\r\n  overrideSelector: commonSelector + iconSelector\r\n};\r\nfunction getIconsCSSData(iconSet, names, options = {}) {\r\n  const css = [];\r\n  const errors = [];\r\n  const palette = options.color ? true : void 0;\r\n  let mode = options.mode || typeof palette === \"boolean\" && (palette ? \"background\" : \"mask\");\r\n  if (!mode) {\r\n    for (let i = 0; i < names.length; i++) {\r\n      const name = names[i];\r\n      const icon = getIconData(iconSet, name);\r\n      if (icon) {\r\n        const body = options.customise ? options.customise(icon.body, name) : icon.body;\r\n        mode = body.includes(\"currentColor\") ? \"mask\" : \"background\";\r\n        break;\r\n      }\r\n    }\r\n    if (!mode) {\r\n      mode = \"mask\";\r\n      errors.push(\r\n        \"/* cannot detect icon mode: not set in options and icon set is missing info, rendering as \" + mode + \" */\"\r\n      );\r\n    }\r\n  }\r\n  let varName = options.varName;\r\n  if (varName === void 0 && mode === \"mask\") {\r\n    varName = \"svg\";\r\n  }\r\n  const newOptions = {\r\n    ...options,\r\n    // Override mode and varName\r\n    mode,\r\n    varName\r\n  };\r\n  const { commonSelector: commonSelector2, iconSelector: iconSelector2, overrideSelector } = newOptions.iconSelector ? newOptions : defaultSelectors;\r\n  const iconSelectorWithPrefix = iconSelector2.replace(\r\n    /{prefix}/g,\r\n    iconSet.prefix\r\n  );\r\n  const commonRules = {\r\n    ...options.rules,\r\n    ...getCommonCSSRules(newOptions)\r\n  };\r\n  const hasCommonRules = commonSelector2 && commonSelector2 !== iconSelector2;\r\n  const commonSelectors = /* @__PURE__ */ new Set();\r\n  if (hasCommonRules) {\r\n    css.push({\r\n      selector: commonSelector2.replace(/{prefix}/g, iconSet.prefix),\r\n      rules: commonRules\r\n    });\r\n  }\r\n  for (let i = 0; i < names.length; i++) {\r\n    const name = names[i];\r\n    const iconData = getIconData(iconSet, name);\r\n    if (!iconData) {\r\n      errors.push(\"/* Could not find icon: \" + name + \" */\");\r\n      continue;\r\n    }\r\n    const body = options.customise ? options.customise(iconData.body, name) : iconData.body;\r\n    const rules = generateItemCSSRules(\r\n      {\r\n        ...defaultIconProps,\r\n        ...iconData,\r\n        body\r\n      },\r\n      newOptions\r\n    );\r\n    let requiresOverride = false;\r\n    if (hasCommonRules && overrideSelector) {\r\n      for (const key in rules) {\r\n        if (key in commonRules) {\r\n          requiresOverride = true;\r\n        }\r\n      }\r\n    }\r\n    const selector = (requiresOverride && overrideSelector ? overrideSelector.replace(/{prefix}/g, iconSet.prefix) : iconSelectorWithPrefix).replace(/{name}/g, name);\r\n    css.push({\r\n      selector,\r\n      rules\r\n    });\r\n    if (!hasCommonRules) {\r\n      commonSelectors.add(selector);\r\n    }\r\n  }\r\n  const result = {\r\n    css,\r\n    errors\r\n  };\r\n  if (!hasCommonRules && commonSelectors.size) {\r\n    const selector = Array.from(commonSelectors).join(\r\n      newOptions.format === \"compressed\" ? \",\" : \", \"\r\n    );\r\n    result.common = {\r\n      selector,\r\n      rules: commonRules\r\n    };\r\n  }\r\n  return result;\r\n}\r\nfunction getIconsCSS(iconSet, names, options = {}) {\r\n  const { css, errors, common } = getIconsCSSData(iconSet, names, options);\r\n  if (common) {\r\n    if (css.length === 1 && css[0].selector === common.selector) {\r\n      css[0].rules = {\r\n        // Common first, override later\r\n        ...common.rules,\r\n        ...css[0].rules\r\n      };\r\n    } else {\r\n      css.unshift(common);\r\n    }\r\n  }\r\n  return formatCSS(css, options.format) + (errors.length ? \"\\n\" + errors.join(\"\\n\") + \"\\n\" : \"\");\r\n}\r\nfunction getIconsContentCSS(iconSet, names, options) {\r\n  const errors = [];\r\n  const css = [];\r\n  const iconSelectorWithPrefix = (options.iconSelector ?? contentSelector).replace(/{prefix}/g, iconSet.prefix);\r\n  for (let i = 0; i < names.length; i++) {\r\n    const name = names[i];\r\n    const iconData = getIconData(iconSet, name);\r\n    if (!iconData) {\r\n      errors.push(\"/* Could not find icon: \" + name + \" */\");\r\n      continue;\r\n    }\r\n    const body = options.customise ? options.customise(iconData.body, name) : iconData.body;\r\n    const content = generateItemContent(\r\n      {\r\n        ...defaultIconProps,\r\n        ...iconData,\r\n        body\r\n      },\r\n      options\r\n    );\r\n    const selector = iconSelectorWithPrefix.replace(/{name}/g, name);\r\n    css.push({\r\n      selector,\r\n      rules: {\r\n        ...options.rules,\r\n        content\r\n      }\r\n    });\r\n  }\r\n  return formatCSS(css, options.format) + (errors.length ? \"\\n\" + errors.join(\"\\n\") + \"\\n\" : \"\");\r\n}\r\n\r\nexport { getIconsCSS, getIconsCSSData, getIconsContentCSS };\r\n", "import createDebugger from 'debug';\r\nimport { mergeIconProps } from './utils.mjs';\r\nimport { trimSVG } from '../svg/trim.mjs';\r\nimport '../svg/build.mjs';\r\nimport '../icon/defaults.mjs';\r\nimport '../customisations/defaults.mjs';\r\nimport '../svg/size.mjs';\r\nimport '../svg/defs.mjs';\r\n\r\nconst debug = createDebugger(\"@iconify-loader:custom\");\r\nasync function getCustomIcon(custom, collection, icon, options) {\r\n  let result;\r\n  debug(`${collection}:${icon}`);\r\n  try {\r\n    if (typeof custom === \"function\") {\r\n      result = await custom(icon);\r\n    } else {\r\n      const inline = custom[icon];\r\n      result = typeof inline === \"function\" ? await inline() : inline;\r\n    }\r\n  } catch (err) {\r\n    console.warn(\r\n      `Failed to load custom icon \"${icon}\" in \"${collection}\":`,\r\n      err\r\n    );\r\n    return;\r\n  }\r\n  if (result) {\r\n    const cleanupIdx = result.indexOf(\"<svg\");\r\n    if (cleanupIdx > 0)\r\n      result = result.slice(cleanupIdx);\r\n    const { transform } = options?.customizations ?? {};\r\n    result = typeof transform === \"function\" ? await transform(result, collection, icon) : result;\r\n    if (!result.startsWith(\"<svg\")) {\r\n      console.warn(\r\n        `Custom icon \"${icon}\" in \"${collection}\" is not a valid SVG`\r\n      );\r\n      return result;\r\n    }\r\n    return await mergeIconProps(\r\n      options?.customizations?.trimCustomSvg === true ? trimSVG(result) : result,\r\n      collection,\r\n      icon,\r\n      options,\r\n      void 0\r\n    );\r\n  }\r\n}\r\n\r\nexport { getCustomIcon };\r\n", "import { iconToSVG, isUnsetKeyword } from '../svg/build.mjs';\r\nimport { getIconData } from '../icon-set/get-icon.mjs';\r\nimport { calculateSize } from '../svg/size.mjs';\r\nimport { mergeIconProps } from './utils.mjs';\r\nimport createDebugger from 'debug';\r\nimport { defaultIconCustomisations } from '../customisations/defaults.mjs';\r\nimport '../icon/defaults.mjs';\r\nimport '../svg/defs.mjs';\r\nimport '../icon/merge.mjs';\r\nimport '../icon/transformations.mjs';\r\nimport '../icon-set/tree.mjs';\r\n\r\nconst debug = createDebugger(\"@iconify-loader:icon\");\r\nasync function searchForIcon(iconSet, collection, ids, options) {\r\n  let iconData;\r\n  const { customize } = options?.customizations ?? {};\r\n  for (const id of ids) {\r\n    iconData = getIconData(iconSet, id);\r\n    if (iconData) {\r\n      debug(`${collection}:${id}`);\r\n      let defaultCustomizations = {\r\n        ...defaultIconCustomisations\r\n      };\r\n      if (typeof customize === \"function\") {\r\n        iconData = Object.assign({}, iconData);\r\n        defaultCustomizations = customize(\r\n          defaultCustomizations,\r\n          iconData,\r\n          `${collection}:${id}`\r\n        ) ?? defaultCustomizations;\r\n      }\r\n      const {\r\n        attributes: { width, height, ...restAttributes },\r\n        body\r\n      } = iconToSVG(iconData, defaultCustomizations);\r\n      const scale = options?.scale;\r\n      return await mergeIconProps(\r\n        // DON'T remove space on <svg >\r\n        `<svg >${body}</svg>`,\r\n        collection,\r\n        id,\r\n        options,\r\n        () => {\r\n          return { ...restAttributes };\r\n        },\r\n        (props) => {\r\n          const check = (prop, defaultValue) => {\r\n            const propValue = props[prop];\r\n            let value;\r\n            if (!isUnsetKeyword(propValue)) {\r\n              if (propValue) {\r\n                return;\r\n              }\r\n              if (typeof scale === \"number\") {\r\n                if (scale) {\r\n                  value = calculateSize(\r\n                    // Base on result from iconToSVG() or 1em\r\n                    defaultValue ?? \"1em\",\r\n                    scale\r\n                  );\r\n                }\r\n              } else {\r\n                value = defaultValue;\r\n              }\r\n            }\r\n            if (!value) {\r\n              delete props[prop];\r\n            } else {\r\n              props[prop] = value;\r\n            }\r\n          };\r\n          check(\"width\", width);\r\n          check(\"height\", height);\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport { searchForIcon };\r\n", "import { getCustomIcon } from './custom.mjs';\r\nimport { searchForIcon } from './modern.mjs';\r\nimport 'debug';\r\nimport './utils.mjs';\r\nimport '../svg/build.mjs';\r\nimport '../icon/defaults.mjs';\r\nimport '../customisations/defaults.mjs';\r\nimport '../svg/size.mjs';\r\nimport '../svg/defs.mjs';\r\nimport '../svg/trim.mjs';\r\nimport '../icon-set/get-icon.mjs';\r\nimport '../icon/merge.mjs';\r\nimport '../icon/transformations.mjs';\r\nimport '../icon-set/tree.mjs';\r\n\r\nconst loadIcon = async (collection, icon, options) => {\r\n  const custom = options?.customCollections?.[collection];\r\n  if (custom) {\r\n    if (typeof custom === \"function\") {\r\n      let result;\r\n      try {\r\n        result = await custom(icon);\r\n      } catch (err) {\r\n        console.warn(\r\n          `Failed to load custom icon \"${icon}\" in \"${collection}\":`,\r\n          err\r\n        );\r\n        return;\r\n      }\r\n      if (result) {\r\n        if (typeof result === \"string\") {\r\n          return await getCustomIcon(\r\n            () => result,\r\n            collection,\r\n            icon,\r\n            options\r\n          );\r\n        }\r\n        if (\"icons\" in result) {\r\n          const ids = [\r\n            icon,\r\n            icon.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase(),\r\n            icon.replace(/([a-z])(\\d+)/g, \"$1-$2\")\r\n          ];\r\n          return await searchForIcon(\r\n            result,\r\n            collection,\r\n            ids,\r\n            options\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      return await getCustomIcon(custom, collection, icon, options);\r\n    }\r\n  }\r\n};\r\n\r\nexport { loadIcon };\r\n", "import { convertEmojiSequenceToUTF16, convertEmojiSequenceToUTF32 } from './convert.mjs';\r\nimport './data.mjs';\r\n\r\nconst defaultUnicodeOptions = {\r\n  prefix: \"\",\r\n  separator: \"\",\r\n  case: \"lower\",\r\n  format: \"utf-32\",\r\n  add0: false,\r\n  throwOnError: true\r\n};\r\nfunction convert(sequence, options) {\r\n  const prefix = options.prefix;\r\n  const func = options.case === \"upper\" ? \"toUpperCase\" : \"toLowerCase\";\r\n  const cleanSequence = options.format === \"utf-16\" ? convertEmojiSequenceToUTF16(sequence) : convertEmojiSequenceToUTF32(sequence, options.throwOnError);\r\n  return cleanSequence.map((code) => {\r\n    let str = code.toString(16);\r\n    if (options.add0 && str.length < 4) {\r\n      str = \"0\".repeat(4 - str.length) + str;\r\n    }\r\n    return prefix + str[func]();\r\n  }).join(options.separator);\r\n}\r\nfunction getEmojiUnicodeString(code, options = {}) {\r\n  return convert([code], {\r\n    ...defaultUnicodeOptions,\r\n    ...options\r\n  });\r\n}\r\nconst defaultSequenceOptions = {\r\n  ...defaultUnicodeOptions,\r\n  separator: \"-\"\r\n};\r\nfunction getEmojiSequenceString(sequence, options = {}) {\r\n  return convert(sequence, {\r\n    ...defaultSequenceOptions,\r\n    ...options\r\n  });\r\n}\r\nfunction getEmojiSequenceKeyword(sequence) {\r\n  return sequence.map((code) => code.toString(16)).join(\"-\");\r\n}\r\n\r\nexport { getEmojiSequenceKeyword, getEmojiSequenceString, getEmojiUnicodeString };\r\n", "export { defaultIconCustomisations, defaultIconSizeCustomisations } from './customisations/defaults.mjs';\r\nexport { mergeCustomisations } from './customisations/merge.mjs';\r\nexport { toBoolean } from './customisations/bool.mjs';\r\nexport { flipFromString } from './customisations/flip.mjs';\r\nexport { rotateFromString } from './customisations/rotate.mjs';\r\nexport { matchIconName, stringToIcon, validateIconName } from './icon/name.mjs';\r\nexport { mergeIconData } from './icon/merge.mjs';\r\nexport { mergeIconTransformations } from './icon/transformations.mjs';\r\nexport { defaultExtendedIconProps, defaultIconDimensions, defaultIconProps, defaultIconTransformations } from './icon/defaults.mjs';\r\nexport { makeIconSquare } from './icon/square.mjs';\r\nexport { getIconsTree } from './icon-set/tree.mjs';\r\nexport { parseIconSet, parseIconSetAsync } from './icon-set/parse.mjs';\r\nexport { validateIconSet } from './icon-set/validate.mjs';\r\nexport { quicklyValidateIconSet } from './icon-set/validate-basic.mjs';\r\nexport { expandIconSet } from './icon-set/expand.mjs';\r\nexport { minifyIconSet } from './icon-set/minify.mjs';\r\nexport { getIcons } from './icon-set/get-icons.mjs';\r\nexport { getIconData } from './icon-set/get-icon.mjs';\r\nexport { convertIconSetInfo } from './icon-set/convert-info.mjs';\r\nexport { iconToSVG } from './svg/build.mjs';\r\nexport { mergeDefsAndContent, splitSVGDefs, wrapSVGContent } from './svg/defs.mjs';\r\nexport { replaceIDs } from './svg/id.mjs';\r\nexport { calculateSize } from './svg/size.mjs';\r\nexport { encodeSvgForCss } from './svg/encode-svg-for-css.mjs';\r\nexport { trimSVG } from './svg/trim.mjs';\r\nexport { prettifySVG } from './svg/pretty.mjs';\r\nexport { iconToHTML } from './svg/html.mjs';\r\nexport { svgToData, svgToURL } from './svg/url.mjs';\r\nexport { cleanUpInnerHTML } from './svg/inner-html.mjs';\r\nexport { getSVGViewBox } from './svg/viewbox.mjs';\r\nexport { buildParsedSVG, convertParsedSVG, parseSVGContent } from './svg/parse.mjs';\r\nexport { colorKeywords } from './colors/keywords.mjs';\r\nexport { colorToString, compareColors, stringToColor } from './colors/index.mjs';\r\nexport { getIconCSS, getIconContentCSS } from './css/icon.mjs';\r\nexport { getIconsCSS, getIconsContentCSS } from './css/icons.mjs';\r\nexport { mergeIconProps } from './loader/utils.mjs';\r\nexport { getCustomIcon } from './loader/custom.mjs';\r\nexport { searchForIcon } from './loader/modern.mjs';\r\nexport { loadIcon } from './loader/loader.mjs';\r\nexport { getEmojiSequenceFromString, getUnqualifiedEmojiSequence } from './emoji/cleanup.mjs';\r\nexport { convertEmojiSequenceToUTF16, convertEmojiSequenceToUTF32, getEmojiCodePoint, getEmojiUnicode, isUTF32SplitNumber, mergeUTF32Numbers, splitUTF32Number } from './emoji/convert.mjs';\r\nexport { getEmojiSequenceKeyword, getEmojiSequenceString, getEmojiUnicodeString } from './emoji/format.mjs';\r\nexport { parseEmojiTestFile } from './emoji/test/parse.mjs';\r\nexport { getQualifiedEmojiVariations } from './emoji/test/variations.mjs';\r\nexport { findMissingEmojis } from './emoji/test/missing.mjs';\r\nexport { createOptimisedRegex, createOptimisedRegexForEmojiSequences } from './emoji/regex/create.mjs';\r\nexport { prepareEmojiForIconSet, prepareEmojiForIconsList } from './emoji/parse.mjs';\r\nexport { findAndReplaceEmojisInText } from './emoji/replace/replace.mjs';\r\nexport { camelToKebab, camelize, pascalize, snakelize } from './misc/strings.mjs';\r\nexport { commonObjectProps, compareObjects, unmergeObjects } from './misc/objects.mjs';\r\nexport { sanitiseTitleAttribute } from './misc/title.mjs';\r\nimport './css/common.mjs';\r\nimport './css/format.mjs';\r\nimport 'debug';\r\nimport './emoji/data.mjs';\r\nimport './emoji/test/components.mjs';\r\nimport './emoji/regex/tree.mjs';\r\nimport './emoji/regex/base.mjs';\r\nimport './emoji/regex/numbers.mjs';\r\nimport './emoji/regex/similar.mjs';\r\nimport './emoji/test/similar.mjs';\r\nimport './emoji/test/name.mjs';\r\nimport './emoji/test/tree.mjs';\r\nimport './emoji/replace/find.mjs';\r\n", "import {\r\n  __name,\r\n  log\r\n} from \"./chunk-S24QXQKS.mjs\";\r\n\r\n// src/rendering-util/icons.ts\r\nimport { getIconData, iconToHTML, iconToSVG, replaceIDs, stringToIcon } from \"@iconify/utils\";\r\nvar unknownIcon = {\r\n  body: '<g><rect width=\"80\" height=\"80\" style=\"fill: #087ebf; stroke-width: 0px;\"/><text transform=\"translate(21.16 64.67)\" style=\"fill: #fff; font-family: ArialMT, Arial; font-size: 67.75px;\"><tspan x=\"0\" y=\"0\">?</tspan></text></g>',\r\n  height: 80,\r\n  width: 80\r\n};\r\nvar iconsStore = /* @__PURE__ */ new Map();\r\nvar loaderStore = /* @__PURE__ */ new Map();\r\nvar registerIconPacks = /* @__PURE__ */ __name((iconLoaders) => {\r\n  for (const iconLoader of iconLoaders) {\r\n    if (!iconLoader.name) {\r\n      throw new Error(\r\n        'Invalid icon loader. Must have a \"name\" property with non-empty string value.'\r\n      );\r\n    }\r\n    log.debug(\"Registering icon pack:\", iconLoader.name);\r\n    if (\"loader\" in iconLoader) {\r\n      loaderStore.set(iconLoader.name, iconLoader.loader);\r\n    } else if (\"icons\" in iconLoader) {\r\n      iconsStore.set(iconLoader.name, iconLoader.icons);\r\n    } else {\r\n      log.error(\"Invalid icon loader:\", iconLoader);\r\n      throw new Error('Invalid icon loader. Must have either \"icons\" or \"loader\" property.');\r\n    }\r\n  }\r\n}, \"registerIconPacks\");\r\nvar getRegisteredIconData = /* @__PURE__ */ __name(async (iconName, fallbackPrefix) => {\r\n  const data = stringToIcon(iconName, true, fallbackPrefix !== void 0);\r\n  if (!data) {\r\n    throw new Error(`Invalid icon name: ${iconName}`);\r\n  }\r\n  const prefix = data.prefix || fallbackPrefix;\r\n  if (!prefix) {\r\n    throw new Error(`Icon name must contain a prefix: ${iconName}`);\r\n  }\r\n  let icons = iconsStore.get(prefix);\r\n  if (!icons) {\r\n    const loader = loaderStore.get(prefix);\r\n    if (!loader) {\r\n      throw new Error(`Icon set not found: ${data.prefix}`);\r\n    }\r\n    try {\r\n      const loaded = await loader();\r\n      icons = { ...loaded, prefix };\r\n      iconsStore.set(prefix, icons);\r\n    } catch (e) {\r\n      log.error(e);\r\n      throw new Error(`Failed to load icon set: ${data.prefix}`);\r\n    }\r\n  }\r\n  const iconData = getIconData(icons, data.name);\r\n  if (!iconData) {\r\n    throw new Error(`Icon not found: ${iconName}`);\r\n  }\r\n  return iconData;\r\n}, \"getRegisteredIconData\");\r\nvar getIconSVG = /* @__PURE__ */ __name(async (iconName, customisations) => {\r\n  let iconData;\r\n  try {\r\n    iconData = await getRegisteredIconData(iconName, customisations?.fallbackPrefix);\r\n  } catch (e) {\r\n    log.error(e);\r\n    iconData = unknownIcon;\r\n  }\r\n  const renderData = iconToSVG(iconData, customisations);\r\n  const svg = iconToHTML(replaceIDs(renderData.body), renderData.attributes);\r\n  return svg;\r\n}, \"getIconSVG\");\r\n\r\nexport {\r\n  unknownIcon,\r\n  registerIconPacks,\r\n  getIconSVG\r\n};\r\n"],
  "mappings": "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",
  "names": ["createDebugger", "import_debug", "debug", "createDebugger", "import_debug", "import_debug"]
}
