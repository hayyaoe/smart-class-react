{
  "version": 3,
  "sources": ["../../mermaid/dist/chunks/mermaid.core/gitGraphDiagram-JPZ3KUXI.mjs"],
  "sourcesContent": ["import {\r\n  populateCommonDb\r\n} from \"./chunk-RYO7GUH3.mjs\";\r\nimport {\r\n  ImperativeState\r\n} from \"./chunk-6JKP7OK7.mjs\";\r\nimport {\r\n  cleanAndMerge,\r\n  random,\r\n  utils_default\r\n} from \"./chunk-TLUHKHBO.mjs\";\r\nimport {\r\n  __name,\r\n  clear,\r\n  common_default,\r\n  defaultConfig_default,\r\n  getAccDescription,\r\n  getAccTitle,\r\n  getConfig,\r\n  getConfig2,\r\n  getDiagramTitle,\r\n  log,\r\n  setAccDescription,\r\n  setAccTitle,\r\n  setDiagramTitle,\r\n  setupGraphViewbox2 as setupGraphViewbox\r\n} from \"./chunk-S24QXQKS.mjs\";\r\n\r\n// src/diagrams/git/gitGraphParser.ts\r\nimport { parse } from \"@mermaid-js/parser\";\r\n\r\n// src/diagrams/git/gitGraphTypes.ts\r\nvar commitType = {\r\n  NORMAL: 0,\r\n  REVERSE: 1,\r\n  HIGHLIGHT: 2,\r\n  MERGE: 3,\r\n  CHERRY_PICK: 4\r\n};\r\n\r\n// src/diagrams/git/gitGraphAst.ts\r\nvar DEFAULT_GITGRAPH_CONFIG = defaultConfig_default.gitGraph;\r\nvar getConfig3 = /* @__PURE__ */ __name(() => {\r\n  const config = cleanAndMerge({\r\n    ...DEFAULT_GITGRAPH_CONFIG,\r\n    ...getConfig().gitGraph\r\n  });\r\n  return config;\r\n}, \"getConfig\");\r\nvar state = new ImperativeState(() => {\r\n  const config = getConfig3();\r\n  const mainBranchName = config.mainBranchName;\r\n  const mainBranchOrder = config.mainBranchOrder;\r\n  return {\r\n    mainBranchName,\r\n    commits: /* @__PURE__ */ new Map(),\r\n    head: null,\r\n    branchConfig: /* @__PURE__ */ new Map([[mainBranchName, { name: mainBranchName, order: mainBranchOrder }]]),\r\n    branches: /* @__PURE__ */ new Map([[mainBranchName, null]]),\r\n    currBranch: mainBranchName,\r\n    direction: \"LR\",\r\n    seq: 0,\r\n    options: {}\r\n  };\r\n});\r\nfunction getID() {\r\n  return random({ length: 7 });\r\n}\r\n__name(getID, \"getID\");\r\nfunction uniqBy(list, fn) {\r\n  const recordMap = /* @__PURE__ */ Object.create(null);\r\n  return list.reduce((out, item) => {\r\n    const key = fn(item);\r\n    if (!recordMap[key]) {\r\n      recordMap[key] = true;\r\n      out.push(item);\r\n    }\r\n    return out;\r\n  }, []);\r\n}\r\n__name(uniqBy, \"uniqBy\");\r\nvar setDirection = /* @__PURE__ */ __name(function(dir2) {\r\n  state.records.direction = dir2;\r\n}, \"setDirection\");\r\nvar setOptions = /* @__PURE__ */ __name(function(rawOptString) {\r\n  log.debug(\"options str\", rawOptString);\r\n  rawOptString = rawOptString?.trim();\r\n  rawOptString = rawOptString || \"{}\";\r\n  try {\r\n    state.records.options = JSON.parse(rawOptString);\r\n  } catch (e) {\r\n    log.error(\"error while parsing gitGraph options\", e.message);\r\n  }\r\n}, \"setOptions\");\r\nvar getOptions = /* @__PURE__ */ __name(function() {\r\n  return state.records.options;\r\n}, \"getOptions\");\r\nvar commit = /* @__PURE__ */ __name(function(commitDB) {\r\n  let msg = commitDB.msg;\r\n  let id = commitDB.id;\r\n  const type = commitDB.type;\r\n  let tags = commitDB.tags;\r\n  log.info(\"commit\", msg, id, type, tags);\r\n  log.debug(\"Entering commit:\", msg, id, type, tags);\r\n  const config = getConfig3();\r\n  id = common_default.sanitizeText(id, config);\r\n  msg = common_default.sanitizeText(msg, config);\r\n  tags = tags?.map((tag) => common_default.sanitizeText(tag, config));\r\n  const newCommit = {\r\n    id: id ? id : state.records.seq + \"-\" + getID(),\r\n    message: msg,\r\n    seq: state.records.seq++,\r\n    type: type ?? commitType.NORMAL,\r\n    tags: tags ?? [],\r\n    parents: state.records.head == null ? [] : [state.records.head.id],\r\n    branch: state.records.currBranch\r\n  };\r\n  state.records.head = newCommit;\r\n  log.info(\"main branch\", config.mainBranchName);\r\n  state.records.commits.set(newCommit.id, newCommit);\r\n  state.records.branches.set(state.records.currBranch, newCommit.id);\r\n  log.debug(\"in pushCommit \" + newCommit.id);\r\n}, \"commit\");\r\nvar branch = /* @__PURE__ */ __name(function(branchDB) {\r\n  let name = branchDB.name;\r\n  const order = branchDB.order;\r\n  name = common_default.sanitizeText(name, getConfig3());\r\n  if (state.records.branches.has(name)) {\r\n    throw new Error(\r\n      `Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using \"checkout ${name}\")`\r\n    );\r\n  }\r\n  state.records.branches.set(name, state.records.head != null ? state.records.head.id : null);\r\n  state.records.branchConfig.set(name, { name, order });\r\n  checkout(name);\r\n  log.debug(\"in createBranch\");\r\n}, \"branch\");\r\nvar merge = /* @__PURE__ */ __name((mergeDB) => {\r\n  let otherBranch = mergeDB.branch;\r\n  let customId = mergeDB.id;\r\n  const overrideType = mergeDB.type;\r\n  const customTags = mergeDB.tags;\r\n  const config = getConfig3();\r\n  otherBranch = common_default.sanitizeText(otherBranch, config);\r\n  if (customId) {\r\n    customId = common_default.sanitizeText(customId, config);\r\n  }\r\n  const currentBranchCheck = state.records.branches.get(state.records.currBranch);\r\n  const otherBranchCheck = state.records.branches.get(otherBranch);\r\n  const currentCommit = currentBranchCheck ? state.records.commits.get(currentBranchCheck) : void 0;\r\n  const otherCommit = otherBranchCheck ? state.records.commits.get(otherBranchCheck) : void 0;\r\n  if (currentCommit && otherCommit && currentCommit.branch === otherBranch) {\r\n    throw new Error(`Cannot merge branch '${otherBranch}' into itself.`);\r\n  }\r\n  if (state.records.currBranch === otherBranch) {\r\n    const error = new Error('Incorrect usage of \"merge\". Cannot merge a branch to itself');\r\n    error.hash = {\r\n      text: `merge ${otherBranch}`,\r\n      token: `merge ${otherBranch}`,\r\n      expected: [\"branch abc\"]\r\n    };\r\n    throw error;\r\n  }\r\n  if (currentCommit === void 0 || !currentCommit) {\r\n    const error = new Error(\r\n      `Incorrect usage of \"merge\". Current branch (${state.records.currBranch})has no commits`\r\n    );\r\n    error.hash = {\r\n      text: `merge ${otherBranch}`,\r\n      token: `merge ${otherBranch}`,\r\n      expected: [\"commit\"]\r\n    };\r\n    throw error;\r\n  }\r\n  if (!state.records.branches.has(otherBranch)) {\r\n    const error = new Error(\r\n      'Incorrect usage of \"merge\". Branch to be merged (' + otherBranch + \") does not exist\"\r\n    );\r\n    error.hash = {\r\n      text: `merge ${otherBranch}`,\r\n      token: `merge ${otherBranch}`,\r\n      expected: [`branch ${otherBranch}`]\r\n    };\r\n    throw error;\r\n  }\r\n  if (otherCommit === void 0 || !otherCommit) {\r\n    const error = new Error(\r\n      'Incorrect usage of \"merge\". Branch to be merged (' + otherBranch + \") has no commits\"\r\n    );\r\n    error.hash = {\r\n      text: `merge ${otherBranch}`,\r\n      token: `merge ${otherBranch}`,\r\n      expected: ['\"commit\"']\r\n    };\r\n    throw error;\r\n  }\r\n  if (currentCommit === otherCommit) {\r\n    const error = new Error('Incorrect usage of \"merge\". Both branches have same head');\r\n    error.hash = {\r\n      text: `merge ${otherBranch}`,\r\n      token: `merge ${otherBranch}`,\r\n      expected: [\"branch abc\"]\r\n    };\r\n    throw error;\r\n  }\r\n  if (customId && state.records.commits.has(customId)) {\r\n    const error = new Error(\r\n      'Incorrect usage of \"merge\". Commit with id:' + customId + \" already exists, use different custom Id\"\r\n    );\r\n    error.hash = {\r\n      text: `merge ${otherBranch} ${customId} ${overrideType} ${customTags?.join(\" \")}`,\r\n      token: `merge ${otherBranch} ${customId} ${overrideType} ${customTags?.join(\" \")}`,\r\n      expected: [\r\n        `merge ${otherBranch} ${customId}_UNIQUE ${overrideType} ${customTags?.join(\" \")}`\r\n      ]\r\n    };\r\n    throw error;\r\n  }\r\n  const verifiedBranch = otherBranchCheck ? otherBranchCheck : \"\";\r\n  const commit2 = {\r\n    id: customId || `${state.records.seq}-${getID()}`,\r\n    message: `merged branch ${otherBranch} into ${state.records.currBranch}`,\r\n    seq: state.records.seq++,\r\n    parents: state.records.head == null ? [] : [state.records.head.id, verifiedBranch],\r\n    branch: state.records.currBranch,\r\n    type: commitType.MERGE,\r\n    customType: overrideType,\r\n    customId: customId ? true : false,\r\n    tags: customTags ?? []\r\n  };\r\n  state.records.head = commit2;\r\n  state.records.commits.set(commit2.id, commit2);\r\n  state.records.branches.set(state.records.currBranch, commit2.id);\r\n  log.debug(state.records.branches);\r\n  log.debug(\"in mergeBranch\");\r\n}, \"merge\");\r\nvar cherryPick = /* @__PURE__ */ __name(function(cherryPickDB) {\r\n  let sourceId = cherryPickDB.id;\r\n  let targetId = cherryPickDB.targetId;\r\n  let tags = cherryPickDB.tags;\r\n  let parentCommitId = cherryPickDB.parent;\r\n  log.debug(\"Entering cherryPick:\", sourceId, targetId, tags);\r\n  const config = getConfig3();\r\n  sourceId = common_default.sanitizeText(sourceId, config);\r\n  targetId = common_default.sanitizeText(targetId, config);\r\n  tags = tags?.map((tag) => common_default.sanitizeText(tag, config));\r\n  parentCommitId = common_default.sanitizeText(parentCommitId, config);\r\n  if (!sourceId || !state.records.commits.has(sourceId)) {\r\n    const error = new Error(\r\n      'Incorrect usage of \"cherryPick\". Source commit id should exist and provided'\r\n    );\r\n    error.hash = {\r\n      text: `cherryPick ${sourceId} ${targetId}`,\r\n      token: `cherryPick ${sourceId} ${targetId}`,\r\n      expected: [\"cherry-pick abc\"]\r\n    };\r\n    throw error;\r\n  }\r\n  const sourceCommit = state.records.commits.get(sourceId);\r\n  if (sourceCommit === void 0 || !sourceCommit) {\r\n    throw new Error('Incorrect usage of \"cherryPick\". Source commit id should exist and provided');\r\n  }\r\n  if (parentCommitId && !(Array.isArray(sourceCommit.parents) && sourceCommit.parents.includes(parentCommitId))) {\r\n    const error = new Error(\r\n      \"Invalid operation: The specified parent commit is not an immediate parent of the cherry-picked commit.\"\r\n    );\r\n    throw error;\r\n  }\r\n  const sourceCommitBranch = sourceCommit.branch;\r\n  if (sourceCommit.type === commitType.MERGE && !parentCommitId) {\r\n    const error = new Error(\r\n      \"Incorrect usage of cherry-pick: If the source commit is a merge commit, an immediate parent commit must be specified.\"\r\n    );\r\n    throw error;\r\n  }\r\n  if (!targetId || !state.records.commits.has(targetId)) {\r\n    if (sourceCommitBranch === state.records.currBranch) {\r\n      const error = new Error(\r\n        'Incorrect usage of \"cherryPick\". Source commit is already on current branch'\r\n      );\r\n      error.hash = {\r\n        text: `cherryPick ${sourceId} ${targetId}`,\r\n        token: `cherryPick ${sourceId} ${targetId}`,\r\n        expected: [\"cherry-pick abc\"]\r\n      };\r\n      throw error;\r\n    }\r\n    const currentCommitId = state.records.branches.get(state.records.currBranch);\r\n    if (currentCommitId === void 0 || !currentCommitId) {\r\n      const error = new Error(\r\n        `Incorrect usage of \"cherry-pick\". Current branch (${state.records.currBranch})has no commits`\r\n      );\r\n      error.hash = {\r\n        text: `cherryPick ${sourceId} ${targetId}`,\r\n        token: `cherryPick ${sourceId} ${targetId}`,\r\n        expected: [\"cherry-pick abc\"]\r\n      };\r\n      throw error;\r\n    }\r\n    const currentCommit = state.records.commits.get(currentCommitId);\r\n    if (currentCommit === void 0 || !currentCommit) {\r\n      const error = new Error(\r\n        `Incorrect usage of \"cherry-pick\". Current branch (${state.records.currBranch})has no commits`\r\n      );\r\n      error.hash = {\r\n        text: `cherryPick ${sourceId} ${targetId}`,\r\n        token: `cherryPick ${sourceId} ${targetId}`,\r\n        expected: [\"cherry-pick abc\"]\r\n      };\r\n      throw error;\r\n    }\r\n    const commit2 = {\r\n      id: state.records.seq + \"-\" + getID(),\r\n      message: `cherry-picked ${sourceCommit?.message} into ${state.records.currBranch}`,\r\n      seq: state.records.seq++,\r\n      parents: state.records.head == null ? [] : [state.records.head.id, sourceCommit.id],\r\n      branch: state.records.currBranch,\r\n      type: commitType.CHERRY_PICK,\r\n      tags: tags ? tags.filter(Boolean) : [\r\n        `cherry-pick:${sourceCommit.id}${sourceCommit.type === commitType.MERGE ? `|parent:${parentCommitId}` : \"\"}`\r\n      ]\r\n    };\r\n    state.records.head = commit2;\r\n    state.records.commits.set(commit2.id, commit2);\r\n    state.records.branches.set(state.records.currBranch, commit2.id);\r\n    log.debug(state.records.branches);\r\n    log.debug(\"in cherryPick\");\r\n  }\r\n}, \"cherryPick\");\r\nvar checkout = /* @__PURE__ */ __name(function(branch2) {\r\n  branch2 = common_default.sanitizeText(branch2, getConfig3());\r\n  if (!state.records.branches.has(branch2)) {\r\n    const error = new Error(\r\n      `Trying to checkout branch which is not yet created. (Help try using \"branch ${branch2}\")`\r\n    );\r\n    error.hash = {\r\n      text: `checkout ${branch2}`,\r\n      token: `checkout ${branch2}`,\r\n      expected: [`branch ${branch2}`]\r\n    };\r\n    throw error;\r\n  } else {\r\n    state.records.currBranch = branch2;\r\n    const id = state.records.branches.get(state.records.currBranch);\r\n    if (id === void 0 || !id) {\r\n      state.records.head = null;\r\n    } else {\r\n      state.records.head = state.records.commits.get(id) ?? null;\r\n    }\r\n  }\r\n}, \"checkout\");\r\nfunction upsert(arr, key, newVal) {\r\n  const index = arr.indexOf(key);\r\n  if (index === -1) {\r\n    arr.push(newVal);\r\n  } else {\r\n    arr.splice(index, 1, newVal);\r\n  }\r\n}\r\n__name(upsert, \"upsert\");\r\nfunction prettyPrintCommitHistory(commitArr) {\r\n  const commit2 = commitArr.reduce((out, commit3) => {\r\n    if (out.seq > commit3.seq) {\r\n      return out;\r\n    }\r\n    return commit3;\r\n  }, commitArr[0]);\r\n  let line = \"\";\r\n  commitArr.forEach(function(c) {\r\n    if (c === commit2) {\r\n      line += \"\t*\";\r\n    } else {\r\n      line += \"\t|\";\r\n    }\r\n  });\r\n  const label = [line, commit2.id, commit2.seq];\r\n  for (const branch2 in state.records.branches) {\r\n    if (state.records.branches.get(branch2) === commit2.id) {\r\n      label.push(branch2);\r\n    }\r\n  }\r\n  log.debug(label.join(\" \"));\r\n  if (commit2.parents && commit2.parents.length == 2 && commit2.parents[0] && commit2.parents[1]) {\r\n    const newCommit = state.records.commits.get(commit2.parents[0]);\r\n    upsert(commitArr, commit2, newCommit);\r\n    if (commit2.parents[1]) {\r\n      commitArr.push(state.records.commits.get(commit2.parents[1]));\r\n    }\r\n  } else if (commit2.parents.length == 0) {\r\n    return;\r\n  } else {\r\n    if (commit2.parents[0]) {\r\n      const newCommit = state.records.commits.get(commit2.parents[0]);\r\n      upsert(commitArr, commit2, newCommit);\r\n    }\r\n  }\r\n  commitArr = uniqBy(commitArr, (c) => c.id);\r\n  prettyPrintCommitHistory(commitArr);\r\n}\r\n__name(prettyPrintCommitHistory, \"prettyPrintCommitHistory\");\r\nvar prettyPrint = /* @__PURE__ */ __name(function() {\r\n  log.debug(state.records.commits);\r\n  const node = getCommitsArray()[0];\r\n  prettyPrintCommitHistory([node]);\r\n}, \"prettyPrint\");\r\nvar clear2 = /* @__PURE__ */ __name(function() {\r\n  state.reset();\r\n  clear();\r\n}, \"clear\");\r\nvar getBranchesAsObjArray = /* @__PURE__ */ __name(function() {\r\n  const branchesArray = [...state.records.branchConfig.values()].map((branchConfig, i) => {\r\n    if (branchConfig.order !== null && branchConfig.order !== void 0) {\r\n      return branchConfig;\r\n    }\r\n    return {\r\n      ...branchConfig,\r\n      order: parseFloat(`0.${i}`)\r\n    };\r\n  }).sort((a, b) => (a.order ?? 0) - (b.order ?? 0)).map(({ name }) => ({ name }));\r\n  return branchesArray;\r\n}, \"getBranchesAsObjArray\");\r\nvar getBranches = /* @__PURE__ */ __name(function() {\r\n  return state.records.branches;\r\n}, \"getBranches\");\r\nvar getCommits = /* @__PURE__ */ __name(function() {\r\n  return state.records.commits;\r\n}, \"getCommits\");\r\nvar getCommitsArray = /* @__PURE__ */ __name(function() {\r\n  const commitArr = [...state.records.commits.values()];\r\n  commitArr.forEach(function(o) {\r\n    log.debug(o.id);\r\n  });\r\n  commitArr.sort((a, b) => a.seq - b.seq);\r\n  return commitArr;\r\n}, \"getCommitsArray\");\r\nvar getCurrentBranch = /* @__PURE__ */ __name(function() {\r\n  return state.records.currBranch;\r\n}, \"getCurrentBranch\");\r\nvar getDirection = /* @__PURE__ */ __name(function() {\r\n  return state.records.direction;\r\n}, \"getDirection\");\r\nvar getHead = /* @__PURE__ */ __name(function() {\r\n  return state.records.head;\r\n}, \"getHead\");\r\nvar db = {\r\n  commitType,\r\n  getConfig: getConfig3,\r\n  setDirection,\r\n  setOptions,\r\n  getOptions,\r\n  commit,\r\n  branch,\r\n  merge,\r\n  cherryPick,\r\n  checkout,\r\n  //reset,\r\n  prettyPrint,\r\n  clear: clear2,\r\n  getBranchesAsObjArray,\r\n  getBranches,\r\n  getCommits,\r\n  getCommitsArray,\r\n  getCurrentBranch,\r\n  getDirection,\r\n  getHead,\r\n  setAccTitle,\r\n  getAccTitle,\r\n  getAccDescription,\r\n  setAccDescription,\r\n  setDiagramTitle,\r\n  getDiagramTitle\r\n};\r\n\r\n// src/diagrams/git/gitGraphParser.ts\r\nvar populate = /* @__PURE__ */ __name((ast, db2) => {\r\n  populateCommonDb(ast, db2);\r\n  if (ast.dir) {\r\n    db2.setDirection(ast.dir);\r\n  }\r\n  for (const statement of ast.statements) {\r\n    parseStatement(statement, db2);\r\n  }\r\n}, \"populate\");\r\nvar parseStatement = /* @__PURE__ */ __name((statement, db2) => {\r\n  const parsers = {\r\n    Commit: /* @__PURE__ */ __name((stmt) => db2.commit(parseCommit(stmt)), \"Commit\"),\r\n    Branch: /* @__PURE__ */ __name((stmt) => db2.branch(parseBranch(stmt)), \"Branch\"),\r\n    Merge: /* @__PURE__ */ __name((stmt) => db2.merge(parseMerge(stmt)), \"Merge\"),\r\n    Checkout: /* @__PURE__ */ __name((stmt) => db2.checkout(parseCheckout(stmt)), \"Checkout\"),\r\n    CherryPicking: /* @__PURE__ */ __name((stmt) => db2.cherryPick(parseCherryPicking(stmt)), \"CherryPicking\")\r\n  };\r\n  const parser2 = parsers[statement.$type];\r\n  if (parser2) {\r\n    parser2(statement);\r\n  } else {\r\n    log.error(`Unknown statement type: ${statement.$type}`);\r\n  }\r\n}, \"parseStatement\");\r\nvar parseCommit = /* @__PURE__ */ __name((commit2) => {\r\n  const commitDB = {\r\n    id: commit2.id,\r\n    msg: commit2.message ?? \"\",\r\n    type: commit2.type !== void 0 ? commitType[commit2.type] : commitType.NORMAL,\r\n    tags: commit2.tags ?? void 0\r\n  };\r\n  return commitDB;\r\n}, \"parseCommit\");\r\nvar parseBranch = /* @__PURE__ */ __name((branch2) => {\r\n  const branchDB = {\r\n    name: branch2.name,\r\n    order: branch2.order ?? 0\r\n  };\r\n  return branchDB;\r\n}, \"parseBranch\");\r\nvar parseMerge = /* @__PURE__ */ __name((merge2) => {\r\n  const mergeDB = {\r\n    branch: merge2.branch,\r\n    id: merge2.id ?? \"\",\r\n    type: merge2.type !== void 0 ? commitType[merge2.type] : void 0,\r\n    tags: merge2.tags ?? void 0\r\n  };\r\n  return mergeDB;\r\n}, \"parseMerge\");\r\nvar parseCheckout = /* @__PURE__ */ __name((checkout2) => {\r\n  const branch2 = checkout2.branch;\r\n  return branch2;\r\n}, \"parseCheckout\");\r\nvar parseCherryPicking = /* @__PURE__ */ __name((cherryPicking) => {\r\n  const cherryPickDB = {\r\n    id: cherryPicking.id,\r\n    targetId: \"\",\r\n    tags: cherryPicking.tags?.length === 0 ? void 0 : cherryPicking.tags,\r\n    parent: cherryPicking.parent\r\n  };\r\n  return cherryPickDB;\r\n}, \"parseCherryPicking\");\r\nvar parser = {\r\n  parse: /* @__PURE__ */ __name(async (input) => {\r\n    const ast = await parse(\"gitGraph\", input);\r\n    log.debug(ast);\r\n    populate(ast, db);\r\n  }, \"parse\")\r\n};\r\nif (void 0) {\r\n  const { it, expect, describe } = void 0;\r\n  const mockDB = {\r\n    commitType,\r\n    setDirection: vi.fn(),\r\n    commit: vi.fn(),\r\n    branch: vi.fn(),\r\n    merge: vi.fn(),\r\n    cherryPick: vi.fn(),\r\n    checkout: vi.fn()\r\n  };\r\n  describe(\"GitGraph Parser\", () => {\r\n    it(\"should parse a commit statement\", () => {\r\n      const commit2 = {\r\n        $type: \"Commit\",\r\n        id: \"1\",\r\n        message: \"test\",\r\n        tags: [\"tag1\", \"tag2\"],\r\n        type: \"NORMAL\"\r\n      };\r\n      parseStatement(commit2, mockDB);\r\n      expect(mockDB.commit).toHaveBeenCalledWith({\r\n        id: \"1\",\r\n        msg: \"test\",\r\n        tags: [\"tag1\", \"tag2\"],\r\n        type: 0\r\n      });\r\n    });\r\n    it(\"should parse a branch statement\", () => {\r\n      const branch2 = {\r\n        $type: \"Branch\",\r\n        name: \"newBranch\",\r\n        order: 1\r\n      };\r\n      parseStatement(branch2, mockDB);\r\n      expect(mockDB.branch).toHaveBeenCalledWith({ name: \"newBranch\", order: 1 });\r\n    });\r\n    it(\"should parse a checkout statement\", () => {\r\n      const checkout2 = {\r\n        $type: \"Checkout\",\r\n        branch: \"newBranch\"\r\n      };\r\n      parseStatement(checkout2, mockDB);\r\n      expect(mockDB.checkout).toHaveBeenCalledWith(\"newBranch\");\r\n    });\r\n    it(\"should parse a merge statement\", () => {\r\n      const merge2 = {\r\n        $type: \"Merge\",\r\n        branch: \"newBranch\",\r\n        id: \"1\",\r\n        tags: [\"tag1\", \"tag2\"],\r\n        type: \"NORMAL\"\r\n      };\r\n      parseStatement(merge2, mockDB);\r\n      expect(mockDB.merge).toHaveBeenCalledWith({\r\n        branch: \"newBranch\",\r\n        id: \"1\",\r\n        tags: [\"tag1\", \"tag2\"],\r\n        type: 0\r\n      });\r\n    });\r\n    it(\"should parse a cherry picking statement\", () => {\r\n      const cherryPick2 = {\r\n        $type: \"CherryPicking\",\r\n        id: \"1\",\r\n        tags: [\"tag1\", \"tag2\"],\r\n        parent: \"2\"\r\n      };\r\n      parseStatement(cherryPick2, mockDB);\r\n      expect(mockDB.cherryPick).toHaveBeenCalledWith({\r\n        id: \"1\",\r\n        targetId: \"\",\r\n        parent: \"2\",\r\n        tags: [\"tag1\", \"tag2\"]\r\n      });\r\n    });\r\n    it(\"should parse a langium generated gitGraph ast\", () => {\r\n      const dummy = {\r\n        $type: \"GitGraph\",\r\n        statements: []\r\n      };\r\n      const gitGraphAst = {\r\n        $type: \"GitGraph\",\r\n        statements: [\r\n          {\r\n            $container: dummy,\r\n            $type: \"Commit\",\r\n            id: \"1\",\r\n            message: \"test\",\r\n            tags: [\"tag1\", \"tag2\"],\r\n            type: \"NORMAL\"\r\n          },\r\n          {\r\n            $container: dummy,\r\n            $type: \"Branch\",\r\n            name: \"newBranch\",\r\n            order: 1\r\n          },\r\n          {\r\n            $container: dummy,\r\n            $type: \"Merge\",\r\n            branch: \"newBranch\",\r\n            id: \"1\",\r\n            tags: [\"tag1\", \"tag2\"],\r\n            type: \"NORMAL\"\r\n          },\r\n          {\r\n            $container: dummy,\r\n            $type: \"Checkout\",\r\n            branch: \"newBranch\"\r\n          },\r\n          {\r\n            $container: dummy,\r\n            $type: \"CherryPicking\",\r\n            id: \"1\",\r\n            tags: [\"tag1\", \"tag2\"],\r\n            parent: \"2\"\r\n          }\r\n        ]\r\n      };\r\n      populate(gitGraphAst, mockDB);\r\n      expect(mockDB.commit).toHaveBeenCalledWith({\r\n        id: \"1\",\r\n        msg: \"test\",\r\n        tags: [\"tag1\", \"tag2\"],\r\n        type: 0\r\n      });\r\n      expect(mockDB.branch).toHaveBeenCalledWith({ name: \"newBranch\", order: 1 });\r\n      expect(mockDB.merge).toHaveBeenCalledWith({\r\n        branch: \"newBranch\",\r\n        id: \"1\",\r\n        tags: [\"tag1\", \"tag2\"],\r\n        type: 0\r\n      });\r\n      expect(mockDB.checkout).toHaveBeenCalledWith(\"newBranch\");\r\n    });\r\n  });\r\n}\r\n\r\n// src/diagrams/git/gitGraphRenderer.ts\r\nimport { select } from \"d3\";\r\nvar DEFAULT_CONFIG = getConfig2();\r\nvar DEFAULT_GITGRAPH_CONFIG2 = DEFAULT_CONFIG?.gitGraph;\r\nvar LAYOUT_OFFSET = 10;\r\nvar COMMIT_STEP = 40;\r\nvar PX = 4;\r\nvar PY = 2;\r\nvar THEME_COLOR_LIMIT = 8;\r\nvar branchPos = /* @__PURE__ */ new Map();\r\nvar commitPos = /* @__PURE__ */ new Map();\r\nvar defaultPos = 30;\r\nvar allCommitsDict = /* @__PURE__ */ new Map();\r\nvar lanes = [];\r\nvar maxPos = 0;\r\nvar dir = \"LR\";\r\nvar clear3 = /* @__PURE__ */ __name(() => {\r\n  branchPos.clear();\r\n  commitPos.clear();\r\n  allCommitsDict.clear();\r\n  maxPos = 0;\r\n  lanes = [];\r\n  dir = \"LR\";\r\n}, \"clear\");\r\nvar drawText = /* @__PURE__ */ __name((txt) => {\r\n  const svgLabel = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\r\n  const rows = typeof txt === \"string\" ? txt.split(/\\\\n|\\n|<br\\s*\\/?>/gi) : txt;\r\n  rows.forEach((row) => {\r\n    const tspan = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\r\n    tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\r\n    tspan.setAttribute(\"dy\", \"1em\");\r\n    tspan.setAttribute(\"x\", \"0\");\r\n    tspan.setAttribute(\"class\", \"row\");\r\n    tspan.textContent = row.trim();\r\n    svgLabel.appendChild(tspan);\r\n  });\r\n  return svgLabel;\r\n}, \"drawText\");\r\nvar findClosestParent = /* @__PURE__ */ __name((parents) => {\r\n  let closestParent;\r\n  let comparisonFunc;\r\n  let targetPosition;\r\n  if (dir === \"BT\") {\r\n    comparisonFunc = /* @__PURE__ */ __name((a, b) => a <= b, \"comparisonFunc\");\r\n    targetPosition = Infinity;\r\n  } else {\r\n    comparisonFunc = /* @__PURE__ */ __name((a, b) => a >= b, \"comparisonFunc\");\r\n    targetPosition = 0;\r\n  }\r\n  parents.forEach((parent) => {\r\n    const parentPosition = dir === \"TB\" || dir == \"BT\" ? commitPos.get(parent)?.y : commitPos.get(parent)?.x;\r\n    if (parentPosition !== void 0 && comparisonFunc(parentPosition, targetPosition)) {\r\n      closestParent = parent;\r\n      targetPosition = parentPosition;\r\n    }\r\n  });\r\n  return closestParent;\r\n}, \"findClosestParent\");\r\nvar findClosestParentBT = /* @__PURE__ */ __name((parents) => {\r\n  let closestParent = \"\";\r\n  let maxPosition = Infinity;\r\n  parents.forEach((parent) => {\r\n    const parentPosition = commitPos.get(parent).y;\r\n    if (parentPosition <= maxPosition) {\r\n      closestParent = parent;\r\n      maxPosition = parentPosition;\r\n    }\r\n  });\r\n  return closestParent || void 0;\r\n}, \"findClosestParentBT\");\r\nvar setParallelBTPos = /* @__PURE__ */ __name((sortedKeys, commits, defaultPos2) => {\r\n  let curPos = defaultPos2;\r\n  let maxPosition = defaultPos2;\r\n  const roots = [];\r\n  sortedKeys.forEach((key) => {\r\n    const commit2 = commits.get(key);\r\n    if (!commit2) {\r\n      throw new Error(`Commit not found for key ${key}`);\r\n    }\r\n    if (commit2.parents.length) {\r\n      curPos = calculateCommitPosition(commit2);\r\n      maxPosition = Math.max(curPos, maxPosition);\r\n    } else {\r\n      roots.push(commit2);\r\n    }\r\n    setCommitPosition(commit2, curPos);\r\n  });\r\n  curPos = maxPosition;\r\n  roots.forEach((commit2) => {\r\n    setRootPosition(commit2, curPos, defaultPos2);\r\n  });\r\n  sortedKeys.forEach((key) => {\r\n    const commit2 = commits.get(key);\r\n    if (commit2?.parents.length) {\r\n      const closestParent = findClosestParentBT(commit2.parents);\r\n      curPos = commitPos.get(closestParent).y - COMMIT_STEP;\r\n      if (curPos <= maxPosition) {\r\n        maxPosition = curPos;\r\n      }\r\n      const x = branchPos.get(commit2.branch).pos;\r\n      const y = curPos - LAYOUT_OFFSET;\r\n      commitPos.set(commit2.id, { x, y });\r\n    }\r\n  });\r\n}, \"setParallelBTPos\");\r\nvar findClosestParentPos = /* @__PURE__ */ __name((commit2) => {\r\n  const closestParent = findClosestParent(commit2.parents.filter((p) => p !== null));\r\n  if (!closestParent) {\r\n    throw new Error(`Closest parent not found for commit ${commit2.id}`);\r\n  }\r\n  const closestParentPos = commitPos.get(closestParent)?.y;\r\n  if (closestParentPos === void 0) {\r\n    throw new Error(`Closest parent position not found for commit ${commit2.id}`);\r\n  }\r\n  return closestParentPos;\r\n}, \"findClosestParentPos\");\r\nvar calculateCommitPosition = /* @__PURE__ */ __name((commit2) => {\r\n  const closestParentPos = findClosestParentPos(commit2);\r\n  return closestParentPos + COMMIT_STEP;\r\n}, \"calculateCommitPosition\");\r\nvar setCommitPosition = /* @__PURE__ */ __name((commit2, curPos) => {\r\n  const branch2 = branchPos.get(commit2.branch);\r\n  if (!branch2) {\r\n    throw new Error(`Branch not found for commit ${commit2.id}`);\r\n  }\r\n  const x = branch2.pos;\r\n  const y = curPos + LAYOUT_OFFSET;\r\n  commitPos.set(commit2.id, { x, y });\r\n  return { x, y };\r\n}, \"setCommitPosition\");\r\nvar setRootPosition = /* @__PURE__ */ __name((commit2, curPos, defaultPos2) => {\r\n  const branch2 = branchPos.get(commit2.branch);\r\n  if (!branch2) {\r\n    throw new Error(`Branch not found for commit ${commit2.id}`);\r\n  }\r\n  const y = curPos + defaultPos2;\r\n  const x = branch2.pos;\r\n  commitPos.set(commit2.id, { x, y });\r\n}, \"setRootPosition\");\r\nvar drawCommitBullet = /* @__PURE__ */ __name((gBullets, commit2, commitPosition, typeClass, branchIndex, commitSymbolType) => {\r\n  if (commitSymbolType === commitType.HIGHLIGHT) {\r\n    gBullets.append(\"rect\").attr(\"x\", commitPosition.x - 10).attr(\"y\", commitPosition.y - 10).attr(\"width\", 20).attr(\"height\", 20).attr(\r\n      \"class\",\r\n      `commit ${commit2.id} commit-highlight${branchIndex % THEME_COLOR_LIMIT} ${typeClass}-outer`\r\n    );\r\n    gBullets.append(\"rect\").attr(\"x\", commitPosition.x - 6).attr(\"y\", commitPosition.y - 6).attr(\"width\", 12).attr(\"height\", 12).attr(\r\n      \"class\",\r\n      `commit ${commit2.id} commit${branchIndex % THEME_COLOR_LIMIT} ${typeClass}-inner`\r\n    );\r\n  } else if (commitSymbolType === commitType.CHERRY_PICK) {\r\n    gBullets.append(\"circle\").attr(\"cx\", commitPosition.x).attr(\"cy\", commitPosition.y).attr(\"r\", 10).attr(\"class\", `commit ${commit2.id} ${typeClass}`);\r\n    gBullets.append(\"circle\").attr(\"cx\", commitPosition.x - 3).attr(\"cy\", commitPosition.y + 2).attr(\"r\", 2.75).attr(\"fill\", \"#fff\").attr(\"class\", `commit ${commit2.id} ${typeClass}`);\r\n    gBullets.append(\"circle\").attr(\"cx\", commitPosition.x + 3).attr(\"cy\", commitPosition.y + 2).attr(\"r\", 2.75).attr(\"fill\", \"#fff\").attr(\"class\", `commit ${commit2.id} ${typeClass}`);\r\n    gBullets.append(\"line\").attr(\"x1\", commitPosition.x + 3).attr(\"y1\", commitPosition.y + 1).attr(\"x2\", commitPosition.x).attr(\"y2\", commitPosition.y - 5).attr(\"stroke\", \"#fff\").attr(\"class\", `commit ${commit2.id} ${typeClass}`);\r\n    gBullets.append(\"line\").attr(\"x1\", commitPosition.x - 3).attr(\"y1\", commitPosition.y + 1).attr(\"x2\", commitPosition.x).attr(\"y2\", commitPosition.y - 5).attr(\"stroke\", \"#fff\").attr(\"class\", `commit ${commit2.id} ${typeClass}`);\r\n  } else {\r\n    const circle = gBullets.append(\"circle\");\r\n    circle.attr(\"cx\", commitPosition.x);\r\n    circle.attr(\"cy\", commitPosition.y);\r\n    circle.attr(\"r\", commit2.type === commitType.MERGE ? 9 : 10);\r\n    circle.attr(\"class\", `commit ${commit2.id} commit${branchIndex % THEME_COLOR_LIMIT}`);\r\n    if (commitSymbolType === commitType.MERGE) {\r\n      const circle2 = gBullets.append(\"circle\");\r\n      circle2.attr(\"cx\", commitPosition.x);\r\n      circle2.attr(\"cy\", commitPosition.y);\r\n      circle2.attr(\"r\", 6);\r\n      circle2.attr(\r\n        \"class\",\r\n        `commit ${typeClass} ${commit2.id} commit${branchIndex % THEME_COLOR_LIMIT}`\r\n      );\r\n    }\r\n    if (commitSymbolType === commitType.REVERSE) {\r\n      const cross = gBullets.append(\"path\");\r\n      cross.attr(\r\n        \"d\",\r\n        `M ${commitPosition.x - 5},${commitPosition.y - 5}L${commitPosition.x + 5},${commitPosition.y + 5}M${commitPosition.x - 5},${commitPosition.y + 5}L${commitPosition.x + 5},${commitPosition.y - 5}`\r\n      ).attr(\"class\", `commit ${typeClass} ${commit2.id} commit${branchIndex % THEME_COLOR_LIMIT}`);\r\n    }\r\n  }\r\n}, \"drawCommitBullet\");\r\nvar drawCommitLabel = /* @__PURE__ */ __name((gLabels, commit2, commitPosition, pos) => {\r\n  if (commit2.type !== commitType.CHERRY_PICK && (commit2.customId && commit2.type === commitType.MERGE || commit2.type !== commitType.MERGE) && DEFAULT_GITGRAPH_CONFIG2?.showCommitLabel) {\r\n    const wrapper = gLabels.append(\"g\");\r\n    const labelBkg = wrapper.insert(\"rect\").attr(\"class\", \"commit-label-bkg\");\r\n    const text = wrapper.append(\"text\").attr(\"x\", pos).attr(\"y\", commitPosition.y + 25).attr(\"class\", \"commit-label\").text(commit2.id);\r\n    const bbox = text.node()?.getBBox();\r\n    if (bbox) {\r\n      labelBkg.attr(\"x\", commitPosition.posWithOffset - bbox.width / 2 - PY).attr(\"y\", commitPosition.y + 13.5).attr(\"width\", bbox.width + 2 * PY).attr(\"height\", bbox.height + 2 * PY);\r\n      if (dir === \"TB\" || dir === \"BT\") {\r\n        labelBkg.attr(\"x\", commitPosition.x - (bbox.width + 4 * PX + 5)).attr(\"y\", commitPosition.y - 12);\r\n        text.attr(\"x\", commitPosition.x - (bbox.width + 4 * PX)).attr(\"y\", commitPosition.y + bbox.height - 12);\r\n      } else {\r\n        text.attr(\"x\", commitPosition.posWithOffset - bbox.width / 2);\r\n      }\r\n      if (DEFAULT_GITGRAPH_CONFIG2.rotateCommitLabel) {\r\n        if (dir === \"TB\" || dir === \"BT\") {\r\n          text.attr(\r\n            \"transform\",\r\n            \"rotate(-45, \" + commitPosition.x + \", \" + commitPosition.y + \")\"\r\n          );\r\n          labelBkg.attr(\r\n            \"transform\",\r\n            \"rotate(-45, \" + commitPosition.x + \", \" + commitPosition.y + \")\"\r\n          );\r\n        } else {\r\n          const r_x = -7.5 - (bbox.width + 10) / 25 * 9.5;\r\n          const r_y = 10 + bbox.width / 25 * 8.5;\r\n          wrapper.attr(\r\n            \"transform\",\r\n            \"translate(\" + r_x + \", \" + r_y + \") rotate(-45, \" + pos + \", \" + commitPosition.y + \")\"\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n}, \"drawCommitLabel\");\r\nvar drawCommitTags = /* @__PURE__ */ __name((gLabels, commit2, commitPosition, pos) => {\r\n  if (commit2.tags.length > 0) {\r\n    let yOffset = 0;\r\n    let maxTagBboxWidth = 0;\r\n    let maxTagBboxHeight = 0;\r\n    const tagElements = [];\r\n    for (const tagValue of commit2.tags.reverse()) {\r\n      const rect = gLabels.insert(\"polygon\");\r\n      const hole = gLabels.append(\"circle\");\r\n      const tag = gLabels.append(\"text\").attr(\"y\", commitPosition.y - 16 - yOffset).attr(\"class\", \"tag-label\").text(tagValue);\r\n      const tagBbox = tag.node()?.getBBox();\r\n      if (!tagBbox) {\r\n        throw new Error(\"Tag bbox not found\");\r\n      }\r\n      maxTagBboxWidth = Math.max(maxTagBboxWidth, tagBbox.width);\r\n      maxTagBboxHeight = Math.max(maxTagBboxHeight, tagBbox.height);\r\n      tag.attr(\"x\", commitPosition.posWithOffset - tagBbox.width / 2);\r\n      tagElements.push({\r\n        tag,\r\n        hole,\r\n        rect,\r\n        yOffset\r\n      });\r\n      yOffset += 20;\r\n    }\r\n    for (const { tag, hole, rect, yOffset: yOffset2 } of tagElements) {\r\n      const h2 = maxTagBboxHeight / 2;\r\n      const ly = commitPosition.y - 19.2 - yOffset2;\r\n      rect.attr(\"class\", \"tag-label-bkg\").attr(\r\n        \"points\",\r\n        `\r\n      ${pos - maxTagBboxWidth / 2 - PX / 2},${ly + PY}  \r\n      ${pos - maxTagBboxWidth / 2 - PX / 2},${ly - PY}\r\n      ${commitPosition.posWithOffset - maxTagBboxWidth / 2 - PX},${ly - h2 - PY}\r\n      ${commitPosition.posWithOffset + maxTagBboxWidth / 2 + PX},${ly - h2 - PY}\r\n      ${commitPosition.posWithOffset + maxTagBboxWidth / 2 + PX},${ly + h2 + PY}\r\n      ${commitPosition.posWithOffset - maxTagBboxWidth / 2 - PX},${ly + h2 + PY}`\r\n      );\r\n      hole.attr(\"cy\", ly).attr(\"cx\", pos - maxTagBboxWidth / 2 + PX / 2).attr(\"r\", 1.5).attr(\"class\", \"tag-hole\");\r\n      if (dir === \"TB\" || dir === \"BT\") {\r\n        const yOrigin = pos + yOffset2;\r\n        rect.attr(\"class\", \"tag-label-bkg\").attr(\r\n          \"points\",\r\n          `\r\n        ${commitPosition.x},${yOrigin + 2}\r\n        ${commitPosition.x},${yOrigin - 2}\r\n        ${commitPosition.x + LAYOUT_OFFSET},${yOrigin - h2 - 2}\r\n        ${commitPosition.x + LAYOUT_OFFSET + maxTagBboxWidth + 4},${yOrigin - h2 - 2}\r\n        ${commitPosition.x + LAYOUT_OFFSET + maxTagBboxWidth + 4},${yOrigin + h2 + 2}\r\n        ${commitPosition.x + LAYOUT_OFFSET},${yOrigin + h2 + 2}`\r\n        ).attr(\"transform\", \"translate(12,12) rotate(45, \" + commitPosition.x + \",\" + pos + \")\");\r\n        hole.attr(\"cx\", commitPosition.x + PX / 2).attr(\"cy\", yOrigin).attr(\"transform\", \"translate(12,12) rotate(45, \" + commitPosition.x + \",\" + pos + \")\");\r\n        tag.attr(\"x\", commitPosition.x + 5).attr(\"y\", yOrigin + 3).attr(\"transform\", \"translate(14,14) rotate(45, \" + commitPosition.x + \",\" + pos + \")\");\r\n      }\r\n    }\r\n  }\r\n}, \"drawCommitTags\");\r\nvar getCommitClassType = /* @__PURE__ */ __name((commit2) => {\r\n  const commitSymbolType = commit2.customType ?? commit2.type;\r\n  switch (commitSymbolType) {\r\n    case commitType.NORMAL:\r\n      return \"commit-normal\";\r\n    case commitType.REVERSE:\r\n      return \"commit-reverse\";\r\n    case commitType.HIGHLIGHT:\r\n      return \"commit-highlight\";\r\n    case commitType.MERGE:\r\n      return \"commit-merge\";\r\n    case commitType.CHERRY_PICK:\r\n      return \"commit-cherry-pick\";\r\n    default:\r\n      return \"commit-normal\";\r\n  }\r\n}, \"getCommitClassType\");\r\nvar calculatePosition = /* @__PURE__ */ __name((commit2, dir2, pos, commitPos2) => {\r\n  const defaultCommitPosition = { x: 0, y: 0 };\r\n  if (commit2.parents.length > 0) {\r\n    const closestParent = findClosestParent(commit2.parents);\r\n    if (closestParent) {\r\n      const parentPosition = commitPos2.get(closestParent) ?? defaultCommitPosition;\r\n      if (dir2 === \"TB\") {\r\n        return parentPosition.y + COMMIT_STEP;\r\n      } else if (dir2 === \"BT\") {\r\n        const currentPosition = commitPos2.get(commit2.id) ?? defaultCommitPosition;\r\n        return currentPosition.y - COMMIT_STEP;\r\n      } else {\r\n        return parentPosition.x + COMMIT_STEP;\r\n      }\r\n    }\r\n  } else {\r\n    if (dir2 === \"TB\") {\r\n      return defaultPos;\r\n    } else if (dir2 === \"BT\") {\r\n      const currentPosition = commitPos2.get(commit2.id) ?? defaultCommitPosition;\r\n      return currentPosition.y - COMMIT_STEP;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  return 0;\r\n}, \"calculatePosition\");\r\nvar getCommitPosition = /* @__PURE__ */ __name((commit2, pos, isParallelCommits) => {\r\n  const posWithOffset = dir === \"BT\" && isParallelCommits ? pos : pos + LAYOUT_OFFSET;\r\n  const y = dir === \"TB\" || dir === \"BT\" ? posWithOffset : branchPos.get(commit2.branch)?.pos;\r\n  const x = dir === \"TB\" || dir === \"BT\" ? branchPos.get(commit2.branch)?.pos : posWithOffset;\r\n  if (x === void 0 || y === void 0) {\r\n    throw new Error(`Position were undefined for commit ${commit2.id}`);\r\n  }\r\n  return { x, y, posWithOffset };\r\n}, \"getCommitPosition\");\r\nvar drawCommits = /* @__PURE__ */ __name((svg, commits, modifyGraph) => {\r\n  if (!DEFAULT_GITGRAPH_CONFIG2) {\r\n    throw new Error(\"GitGraph config not found\");\r\n  }\r\n  const gBullets = svg.append(\"g\").attr(\"class\", \"commit-bullets\");\r\n  const gLabels = svg.append(\"g\").attr(\"class\", \"commit-labels\");\r\n  let pos = dir === \"TB\" || dir === \"BT\" ? defaultPos : 0;\r\n  const keys = [...commits.keys()];\r\n  const isParallelCommits = DEFAULT_GITGRAPH_CONFIG2?.parallelCommits ?? false;\r\n  const sortKeys = /* @__PURE__ */ __name((a, b) => {\r\n    const seqA = commits.get(a)?.seq;\r\n    const seqB = commits.get(b)?.seq;\r\n    return seqA !== void 0 && seqB !== void 0 ? seqA - seqB : 0;\r\n  }, \"sortKeys\");\r\n  let sortedKeys = keys.sort(sortKeys);\r\n  if (dir === \"BT\") {\r\n    if (isParallelCommits) {\r\n      setParallelBTPos(sortedKeys, commits, pos);\r\n    }\r\n    sortedKeys = sortedKeys.reverse();\r\n  }\r\n  sortedKeys.forEach((key) => {\r\n    const commit2 = commits.get(key);\r\n    if (!commit2) {\r\n      throw new Error(`Commit not found for key ${key}`);\r\n    }\r\n    if (isParallelCommits) {\r\n      pos = calculatePosition(commit2, dir, pos, commitPos);\r\n    }\r\n    const commitPosition = getCommitPosition(commit2, pos, isParallelCommits);\r\n    if (modifyGraph) {\r\n      const typeClass = getCommitClassType(commit2);\r\n      const commitSymbolType = commit2.customType ?? commit2.type;\r\n      const branchIndex = branchPos.get(commit2.branch)?.index ?? 0;\r\n      drawCommitBullet(gBullets, commit2, commitPosition, typeClass, branchIndex, commitSymbolType);\r\n      drawCommitLabel(gLabels, commit2, commitPosition, pos);\r\n      drawCommitTags(gLabels, commit2, commitPosition, pos);\r\n    }\r\n    if (dir === \"TB\" || dir === \"BT\") {\r\n      commitPos.set(commit2.id, { x: commitPosition.x, y: commitPosition.posWithOffset });\r\n    } else {\r\n      commitPos.set(commit2.id, { x: commitPosition.posWithOffset, y: commitPosition.y });\r\n    }\r\n    pos = dir === \"BT\" && isParallelCommits ? pos + COMMIT_STEP : pos + COMMIT_STEP + LAYOUT_OFFSET;\r\n    if (pos > maxPos) {\r\n      maxPos = pos;\r\n    }\r\n  });\r\n}, \"drawCommits\");\r\nvar shouldRerouteArrow = /* @__PURE__ */ __name((commitA, commitB, p1, p2, allCommits) => {\r\n  const commitBIsFurthest = dir === \"TB\" || dir === \"BT\" ? p1.x < p2.x : p1.y < p2.y;\r\n  const branchToGetCurve = commitBIsFurthest ? commitB.branch : commitA.branch;\r\n  const isOnBranchToGetCurve = /* @__PURE__ */ __name((x) => x.branch === branchToGetCurve, \"isOnBranchToGetCurve\");\r\n  const isBetweenCommits = /* @__PURE__ */ __name((x) => x.seq > commitA.seq && x.seq < commitB.seq, \"isBetweenCommits\");\r\n  return [...allCommits.values()].some((commitX) => {\r\n    return isBetweenCommits(commitX) && isOnBranchToGetCurve(commitX);\r\n  });\r\n}, \"shouldRerouteArrow\");\r\nvar findLane = /* @__PURE__ */ __name((y1, y2, depth = 0) => {\r\n  const candidate = y1 + Math.abs(y1 - y2) / 2;\r\n  if (depth > 5) {\r\n    return candidate;\r\n  }\r\n  const ok = lanes.every((lane) => Math.abs(lane - candidate) >= 10);\r\n  if (ok) {\r\n    lanes.push(candidate);\r\n    return candidate;\r\n  }\r\n  const diff = Math.abs(y1 - y2);\r\n  return findLane(y1, y2 - diff / 5, depth + 1);\r\n}, \"findLane\");\r\nvar drawArrow = /* @__PURE__ */ __name((svg, commitA, commitB, allCommits) => {\r\n  const p1 = commitPos.get(commitA.id);\r\n  const p2 = commitPos.get(commitB.id);\r\n  if (p1 === void 0 || p2 === void 0) {\r\n    throw new Error(`Commit positions not found for commits ${commitA.id} and ${commitB.id}`);\r\n  }\r\n  const arrowNeedsRerouting = shouldRerouteArrow(commitA, commitB, p1, p2, allCommits);\r\n  let arc = \"\";\r\n  let arc2 = \"\";\r\n  let radius = 0;\r\n  let offset = 0;\r\n  let colorClassNum = branchPos.get(commitB.branch)?.index;\r\n  if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\r\n    colorClassNum = branchPos.get(commitA.branch)?.index;\r\n  }\r\n  let lineDef;\r\n  if (arrowNeedsRerouting) {\r\n    arc = \"A 10 10, 0, 0, 0,\";\r\n    arc2 = \"A 10 10, 0, 0, 1,\";\r\n    radius = 10;\r\n    offset = 10;\r\n    const lineY = p1.y < p2.y ? findLane(p1.y, p2.y) : findLane(p2.y, p1.y);\r\n    const lineX = p1.x < p2.x ? findLane(p1.x, p2.x) : findLane(p2.x, p1.x);\r\n    if (dir === \"TB\") {\r\n      if (p1.x < p2.x) {\r\n        lineDef = `M ${p1.x} ${p1.y} L ${lineX - radius} ${p1.y} ${arc2} ${lineX} ${p1.y + offset} L ${lineX} ${p2.y - radius} ${arc} ${lineX + offset} ${p2.y} L ${p2.x} ${p2.y}`;\r\n      } else {\r\n        colorClassNum = branchPos.get(commitA.branch)?.index;\r\n        lineDef = `M ${p1.x} ${p1.y} L ${lineX + radius} ${p1.y} ${arc} ${lineX} ${p1.y + offset} L ${lineX} ${p2.y - radius} ${arc2} ${lineX - offset} ${p2.y} L ${p2.x} ${p2.y}`;\r\n      }\r\n    } else if (dir === \"BT\") {\r\n      if (p1.x < p2.x) {\r\n        lineDef = `M ${p1.x} ${p1.y} L ${lineX - radius} ${p1.y} ${arc} ${lineX} ${p1.y - offset} L ${lineX} ${p2.y + radius} ${arc2} ${lineX + offset} ${p2.y} L ${p2.x} ${p2.y}`;\r\n      } else {\r\n        colorClassNum = branchPos.get(commitA.branch)?.index;\r\n        lineDef = `M ${p1.x} ${p1.y} L ${lineX + radius} ${p1.y} ${arc2} ${lineX} ${p1.y - offset} L ${lineX} ${p2.y + radius} ${arc} ${lineX - offset} ${p2.y} L ${p2.x} ${p2.y}`;\r\n      }\r\n    } else {\r\n      if (p1.y < p2.y) {\r\n        lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${lineY - radius} ${arc} ${p1.x + offset} ${lineY} L ${p2.x - radius} ${lineY} ${arc2} ${p2.x} ${lineY + offset} L ${p2.x} ${p2.y}`;\r\n      } else {\r\n        colorClassNum = branchPos.get(commitA.branch)?.index;\r\n        lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${lineY + radius} ${arc2} ${p1.x + offset} ${lineY} L ${p2.x - radius} ${lineY} ${arc} ${p2.x} ${lineY - offset} L ${p2.x} ${p2.y}`;\r\n      }\r\n    }\r\n  } else {\r\n    arc = \"A 20 20, 0, 0, 0,\";\r\n    arc2 = \"A 20 20, 0, 0, 1,\";\r\n    radius = 20;\r\n    offset = 20;\r\n    if (dir === \"TB\") {\r\n      if (p1.x < p2.x) {\r\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\r\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y - radius} ${arc} ${p1.x + offset} ${p2.y} L ${p2.x} ${p2.y}`;\r\n        } else {\r\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc2} ${p2.x} ${p1.y + offset} L ${p2.x} ${p2.y}`;\r\n        }\r\n      }\r\n      if (p1.x > p2.x) {\r\n        arc = \"A 20 20, 0, 0, 0,\";\r\n        arc2 = \"A 20 20, 0, 0, 1,\";\r\n        radius = 20;\r\n        offset = 20;\r\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\r\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y - radius} ${arc2} ${p1.x - offset} ${p2.y} L ${p2.x} ${p2.y}`;\r\n        } else {\r\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x + radius} ${p1.y} ${arc} ${p2.x} ${p1.y + offset} L ${p2.x} ${p2.y}`;\r\n        }\r\n      }\r\n      if (p1.x === p2.x) {\r\n        lineDef = `M ${p1.x} ${p1.y} L ${p2.x} ${p2.y}`;\r\n      }\r\n    } else if (dir === \"BT\") {\r\n      if (p1.x < p2.x) {\r\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\r\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y + radius} ${arc2} ${p1.x + offset} ${p2.y} L ${p2.x} ${p2.y}`;\r\n        } else {\r\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc} ${p2.x} ${p1.y - offset} L ${p2.x} ${p2.y}`;\r\n        }\r\n      }\r\n      if (p1.x > p2.x) {\r\n        arc = \"A 20 20, 0, 0, 0,\";\r\n        arc2 = \"A 20 20, 0, 0, 1,\";\r\n        radius = 20;\r\n        offset = 20;\r\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\r\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y + radius} ${arc} ${p1.x - offset} ${p2.y} L ${p2.x} ${p2.y}`;\r\n        } else {\r\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc} ${p2.x} ${p1.y - offset} L ${p2.x} ${p2.y}`;\r\n        }\r\n      }\r\n      if (p1.x === p2.x) {\r\n        lineDef = `M ${p1.x} ${p1.y} L ${p2.x} ${p2.y}`;\r\n      }\r\n    } else {\r\n      if (p1.y < p2.y) {\r\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\r\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc2} ${p2.x} ${p1.y + offset} L ${p2.x} ${p2.y}`;\r\n        } else {\r\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y - radius} ${arc} ${p1.x + offset} ${p2.y} L ${p2.x} ${p2.y}`;\r\n        }\r\n      }\r\n      if (p1.y > p2.y) {\r\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\r\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc} ${p2.x} ${p1.y - offset} L ${p2.x} ${p2.y}`;\r\n        } else {\r\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y + radius} ${arc2} ${p1.x + offset} ${p2.y} L ${p2.x} ${p2.y}`;\r\n        }\r\n      }\r\n      if (p1.y === p2.y) {\r\n        lineDef = `M ${p1.x} ${p1.y} L ${p2.x} ${p2.y}`;\r\n      }\r\n    }\r\n  }\r\n  if (lineDef === void 0) {\r\n    throw new Error(\"Line definition not found\");\r\n  }\r\n  svg.append(\"path\").attr(\"d\", lineDef).attr(\"class\", \"arrow arrow\" + colorClassNum % THEME_COLOR_LIMIT);\r\n}, \"drawArrow\");\r\nvar drawArrows = /* @__PURE__ */ __name((svg, commits) => {\r\n  const gArrows = svg.append(\"g\").attr(\"class\", \"commit-arrows\");\r\n  [...commits.keys()].forEach((key) => {\r\n    const commit2 = commits.get(key);\r\n    if (commit2.parents && commit2.parents.length > 0) {\r\n      commit2.parents.forEach((parent) => {\r\n        drawArrow(gArrows, commits.get(parent), commit2, commits);\r\n      });\r\n    }\r\n  });\r\n}, \"drawArrows\");\r\nvar drawBranches = /* @__PURE__ */ __name((svg, branches) => {\r\n  const g = svg.append(\"g\");\r\n  branches.forEach((branch2, index) => {\r\n    const adjustIndexForTheme = index % THEME_COLOR_LIMIT;\r\n    const pos = branchPos.get(branch2.name)?.pos;\r\n    if (pos === void 0) {\r\n      throw new Error(`Position not found for branch ${branch2.name}`);\r\n    }\r\n    const line = g.append(\"line\");\r\n    line.attr(\"x1\", 0);\r\n    line.attr(\"y1\", pos);\r\n    line.attr(\"x2\", maxPos);\r\n    line.attr(\"y2\", pos);\r\n    line.attr(\"class\", \"branch branch\" + adjustIndexForTheme);\r\n    if (dir === \"TB\") {\r\n      line.attr(\"y1\", defaultPos);\r\n      line.attr(\"x1\", pos);\r\n      line.attr(\"y2\", maxPos);\r\n      line.attr(\"x2\", pos);\r\n    } else if (dir === \"BT\") {\r\n      line.attr(\"y1\", maxPos);\r\n      line.attr(\"x1\", pos);\r\n      line.attr(\"y2\", defaultPos);\r\n      line.attr(\"x2\", pos);\r\n    }\r\n    lanes.push(pos);\r\n    const name = branch2.name;\r\n    const labelElement = drawText(name);\r\n    const bkg = g.insert(\"rect\");\r\n    const branchLabel = g.insert(\"g\").attr(\"class\", \"branchLabel\");\r\n    const label = branchLabel.insert(\"g\").attr(\"class\", \"label branch-label\" + adjustIndexForTheme);\r\n    label.node().appendChild(labelElement);\r\n    const bbox = labelElement.getBBox();\r\n    bkg.attr(\"class\", \"branchLabelBkg label\" + adjustIndexForTheme).attr(\"rx\", 4).attr(\"ry\", 4).attr(\"x\", -bbox.width - 4 - (DEFAULT_GITGRAPH_CONFIG2?.rotateCommitLabel === true ? 30 : 0)).attr(\"y\", -bbox.height / 2 + 8).attr(\"width\", bbox.width + 18).attr(\"height\", bbox.height + 4);\r\n    label.attr(\r\n      \"transform\",\r\n      \"translate(\" + (-bbox.width - 14 - (DEFAULT_GITGRAPH_CONFIG2?.rotateCommitLabel === true ? 30 : 0)) + \", \" + (pos - bbox.height / 2 - 1) + \")\"\r\n    );\r\n    if (dir === \"TB\") {\r\n      bkg.attr(\"x\", pos - bbox.width / 2 - 10).attr(\"y\", 0);\r\n      label.attr(\"transform\", \"translate(\" + (pos - bbox.width / 2 - 5) + \", 0)\");\r\n    } else if (dir === \"BT\") {\r\n      bkg.attr(\"x\", pos - bbox.width / 2 - 10).attr(\"y\", maxPos);\r\n      label.attr(\"transform\", \"translate(\" + (pos - bbox.width / 2 - 5) + \", \" + maxPos + \")\");\r\n    } else {\r\n      bkg.attr(\"transform\", \"translate(-19, \" + (pos - bbox.height / 2) + \")\");\r\n    }\r\n  });\r\n}, \"drawBranches\");\r\nvar setBranchPosition = /* @__PURE__ */ __name(function(name, pos, index, bbox, rotateCommitLabel) {\r\n  branchPos.set(name, { pos, index });\r\n  pos += 50 + (rotateCommitLabel ? 40 : 0) + (dir === \"TB\" || dir === \"BT\" ? bbox.width / 2 : 0);\r\n  return pos;\r\n}, \"setBranchPosition\");\r\nvar draw = /* @__PURE__ */ __name(function(txt, id, ver, diagObj) {\r\n  clear3();\r\n  log.debug(\"in gitgraph renderer\", txt + \"\\n\", \"id:\", id, ver);\r\n  if (!DEFAULT_GITGRAPH_CONFIG2) {\r\n    throw new Error(\"GitGraph config not found\");\r\n  }\r\n  const rotateCommitLabel = DEFAULT_GITGRAPH_CONFIG2.rotateCommitLabel ?? false;\r\n  const db2 = diagObj.db;\r\n  allCommitsDict = db2.getCommits();\r\n  const branches = db2.getBranchesAsObjArray();\r\n  dir = db2.getDirection();\r\n  const diagram2 = select(`[id=\"${id}\"]`);\r\n  let pos = 0;\r\n  branches.forEach((branch2, index) => {\r\n    const labelElement = drawText(branch2.name);\r\n    const g = diagram2.append(\"g\");\r\n    const branchLabel = g.insert(\"g\").attr(\"class\", \"branchLabel\");\r\n    const label = branchLabel.insert(\"g\").attr(\"class\", \"label branch-label\");\r\n    label.node()?.appendChild(labelElement);\r\n    const bbox = labelElement.getBBox();\r\n    pos = setBranchPosition(branch2.name, pos, index, bbox, rotateCommitLabel);\r\n    label.remove();\r\n    branchLabel.remove();\r\n    g.remove();\r\n  });\r\n  drawCommits(diagram2, allCommitsDict, false);\r\n  if (DEFAULT_GITGRAPH_CONFIG2.showBranches) {\r\n    drawBranches(diagram2, branches);\r\n  }\r\n  drawArrows(diagram2, allCommitsDict);\r\n  drawCommits(diagram2, allCommitsDict, true);\r\n  utils_default.insertTitle(\r\n    diagram2,\r\n    \"gitTitleText\",\r\n    DEFAULT_GITGRAPH_CONFIG2.titleTopMargin ?? 0,\r\n    db2.getDiagramTitle()\r\n  );\r\n  setupGraphViewbox(\r\n    void 0,\r\n    diagram2,\r\n    DEFAULT_GITGRAPH_CONFIG2.diagramPadding,\r\n    DEFAULT_GITGRAPH_CONFIG2.useMaxWidth\r\n  );\r\n}, \"draw\");\r\nvar gitGraphRenderer_default = {\r\n  draw\r\n};\r\nif (void 0) {\r\n  const { it, expect, describe } = void 0;\r\n  describe(\"drawText\", () => {\r\n    it(\"should drawText\", () => {\r\n      const svgLabel = drawText(\"main\");\r\n      expect(svgLabel).toBeDefined();\r\n      expect(svgLabel.children[0].innerHTML).toBe(\"main\");\r\n    });\r\n  });\r\n  describe(\"branchPosition\", () => {\r\n    const bbox = {\r\n      x: 0,\r\n      y: 0,\r\n      width: 10,\r\n      height: 10,\r\n      top: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      toJSON: /* @__PURE__ */ __name(() => \"\", \"toJSON\")\r\n    };\r\n    it(\"should setBranchPositions LR with two branches\", () => {\r\n      dir = \"LR\";\r\n      const pos = setBranchPosition(\"main\", 0, 0, bbox, true);\r\n      expect(pos).toBe(90);\r\n      expect(branchPos.get(\"main\")).toEqual({ pos: 0, index: 0 });\r\n      const posNext = setBranchPosition(\"develop\", pos, 1, bbox, true);\r\n      expect(posNext).toBe(180);\r\n      expect(branchPos.get(\"develop\")).toEqual({ pos, index: 1 });\r\n    });\r\n    it(\"should setBranchPositions TB with two branches\", () => {\r\n      dir = \"TB\";\r\n      bbox.width = 34.9921875;\r\n      const pos = setBranchPosition(\"main\", 0, 0, bbox, true);\r\n      expect(pos).toBe(107.49609375);\r\n      expect(branchPos.get(\"main\")).toEqual({ pos: 0, index: 0 });\r\n      bbox.width = 56.421875;\r\n      const posNext = setBranchPosition(\"develop\", pos, 1, bbox, true);\r\n      expect(posNext).toBe(225.70703125);\r\n      expect(branchPos.get(\"develop\")).toEqual({ pos, index: 1 });\r\n    });\r\n  });\r\n  describe(\"commitPosition\", () => {\r\n    const commits = /* @__PURE__ */ new Map([\r\n      [\r\n        \"commitZero\",\r\n        {\r\n          id: \"ZERO\",\r\n          message: \"\",\r\n          seq: 0,\r\n          type: commitType.NORMAL,\r\n          tags: [],\r\n          parents: [],\r\n          branch: \"main\"\r\n        }\r\n      ],\r\n      [\r\n        \"commitA\",\r\n        {\r\n          id: \"A\",\r\n          message: \"\",\r\n          seq: 1,\r\n          type: commitType.NORMAL,\r\n          tags: [],\r\n          parents: [\"ZERO\"],\r\n          branch: \"feature\"\r\n        }\r\n      ],\r\n      [\r\n        \"commitB\",\r\n        {\r\n          id: \"B\",\r\n          message: \"\",\r\n          seq: 2,\r\n          type: commitType.NORMAL,\r\n          tags: [],\r\n          parents: [\"A\"],\r\n          branch: \"feature\"\r\n        }\r\n      ],\r\n      [\r\n        \"commitM\",\r\n        {\r\n          id: \"M\",\r\n          message: \"merged branch feature into main\",\r\n          seq: 3,\r\n          type: commitType.MERGE,\r\n          tags: [],\r\n          parents: [\"ZERO\", \"B\"],\r\n          branch: \"main\",\r\n          customId: true\r\n        }\r\n      ],\r\n      [\r\n        \"commitC\",\r\n        {\r\n          id: \"C\",\r\n          message: \"\",\r\n          seq: 4,\r\n          type: commitType.NORMAL,\r\n          tags: [],\r\n          parents: [\"ZERO\"],\r\n          branch: \"release\"\r\n        }\r\n      ],\r\n      [\r\n        \"commit5_8928ea0\",\r\n        {\r\n          id: \"5-8928ea0\",\r\n          message: \"cherry-picked [object Object] into release\",\r\n          seq: 5,\r\n          type: commitType.CHERRY_PICK,\r\n          tags: [],\r\n          parents: [\"C\", \"M\"],\r\n          branch: \"release\"\r\n        }\r\n      ],\r\n      [\r\n        \"commitD\",\r\n        {\r\n          id: \"D\",\r\n          message: \"\",\r\n          seq: 6,\r\n          type: commitType.NORMAL,\r\n          tags: [],\r\n          parents: [\"5-8928ea0\"],\r\n          branch: \"release\"\r\n        }\r\n      ],\r\n      [\r\n        \"commit7_ed848ba\",\r\n        {\r\n          id: \"7-ed848ba\",\r\n          message: \"cherry-picked [object Object] into release\",\r\n          seq: 7,\r\n          type: commitType.CHERRY_PICK,\r\n          tags: [],\r\n          parents: [\"D\", \"M\"],\r\n          branch: \"release\"\r\n        }\r\n      ]\r\n    ]);\r\n    let pos = 0;\r\n    branchPos.set(\"main\", { pos: 0, index: 0 });\r\n    branchPos.set(\"feature\", { pos: 107.49609375, index: 1 });\r\n    branchPos.set(\"release\", { pos: 224.03515625, index: 2 });\r\n    describe(\"TB\", () => {\r\n      pos = 30;\r\n      dir = \"TB\";\r\n      const expectedCommitPositionTB = /* @__PURE__ */ new Map([\r\n        [\"commitZero\", { x: 0, y: 40, posWithOffset: 40 }],\r\n        [\"commitA\", { x: 107.49609375, y: 90, posWithOffset: 90 }],\r\n        [\"commitB\", { x: 107.49609375, y: 140, posWithOffset: 140 }],\r\n        [\"commitM\", { x: 0, y: 190, posWithOffset: 190 }],\r\n        [\"commitC\", { x: 224.03515625, y: 240, posWithOffset: 240 }],\r\n        [\"commit5_8928ea0\", { x: 224.03515625, y: 290, posWithOffset: 290 }],\r\n        [\"commitD\", { x: 224.03515625, y: 340, posWithOffset: 340 }],\r\n        [\"commit7_ed848ba\", { x: 224.03515625, y: 390, posWithOffset: 390 }]\r\n      ]);\r\n      commits.forEach((commit2, key) => {\r\n        it(`should give the correct position for commit ${key}`, () => {\r\n          const position = getCommitPosition(commit2, pos, false);\r\n          expect(position).toEqual(expectedCommitPositionTB.get(key));\r\n          pos += 50;\r\n        });\r\n      });\r\n    });\r\n    describe(\"LR\", () => {\r\n      let pos2 = 30;\r\n      dir = \"LR\";\r\n      const expectedCommitPositionLR = /* @__PURE__ */ new Map([\r\n        [\"commitZero\", { x: 0, y: 40, posWithOffset: 40 }],\r\n        [\"commitA\", { x: 107.49609375, y: 90, posWithOffset: 90 }],\r\n        [\"commitB\", { x: 107.49609375, y: 140, posWithOffset: 140 }],\r\n        [\"commitM\", { x: 0, y: 190, posWithOffset: 190 }],\r\n        [\"commitC\", { x: 224.03515625, y: 240, posWithOffset: 240 }],\r\n        [\"commit5_8928ea0\", { x: 224.03515625, y: 290, posWithOffset: 290 }],\r\n        [\"commitD\", { x: 224.03515625, y: 340, posWithOffset: 340 }],\r\n        [\"commit7_ed848ba\", { x: 224.03515625, y: 390, posWithOffset: 390 }]\r\n      ]);\r\n      commits.forEach((commit2, key) => {\r\n        it(`should give the correct position for commit ${key}`, () => {\r\n          const position = getCommitPosition(commit2, pos2, false);\r\n          expect(position).toEqual(expectedCommitPositionLR.get(key));\r\n          pos2 += 50;\r\n        });\r\n      });\r\n    });\r\n    describe(\"getCommitClassType\", () => {\r\n      const expectedCommitClassType = /* @__PURE__ */ new Map([\r\n        [\"commitZero\", \"commit-normal\"],\r\n        [\"commitA\", \"commit-normal\"],\r\n        [\"commitB\", \"commit-normal\"],\r\n        [\"commitM\", \"commit-merge\"],\r\n        [\"commitC\", \"commit-normal\"],\r\n        [\"commit5_8928ea0\", \"commit-cherry-pick\"],\r\n        [\"commitD\", \"commit-normal\"],\r\n        [\"commit7_ed848ba\", \"commit-cherry-pick\"]\r\n      ]);\r\n      commits.forEach((commit2, key) => {\r\n        it(`should give the correct class type for commit ${key}`, () => {\r\n          const classType = getCommitClassType(commit2);\r\n          expect(classType).toBe(expectedCommitClassType.get(key));\r\n        });\r\n      });\r\n    });\r\n  });\r\n  describe(\"building BT parallel commit diagram\", () => {\r\n    const commits = /* @__PURE__ */ new Map([\r\n      [\r\n        \"1-abcdefg\",\r\n        {\r\n          id: \"1-abcdefg\",\r\n          message: \"\",\r\n          seq: 0,\r\n          type: 0,\r\n          tags: [],\r\n          parents: [],\r\n          branch: \"main\"\r\n        }\r\n      ],\r\n      [\r\n        \"2-abcdefg\",\r\n        {\r\n          id: \"2-abcdefg\",\r\n          message: \"\",\r\n          seq: 1,\r\n          type: 0,\r\n          tags: [],\r\n          parents: [\"1-abcdefg\"],\r\n          branch: \"main\"\r\n        }\r\n      ],\r\n      [\r\n        \"3-abcdefg\",\r\n        {\r\n          id: \"3-abcdefg\",\r\n          message: \"\",\r\n          seq: 2,\r\n          type: 0,\r\n          tags: [],\r\n          parents: [\"2-abcdefg\"],\r\n          branch: \"develop\"\r\n        }\r\n      ],\r\n      [\r\n        \"4-abcdefg\",\r\n        {\r\n          id: \"4-abcdefg\",\r\n          message: \"\",\r\n          seq: 3,\r\n          type: 0,\r\n          tags: [],\r\n          parents: [\"3-abcdefg\"],\r\n          branch: \"develop\"\r\n        }\r\n      ],\r\n      [\r\n        \"5-abcdefg\",\r\n        {\r\n          id: \"5-abcdefg\",\r\n          message: \"\",\r\n          seq: 4,\r\n          type: 0,\r\n          tags: [],\r\n          parents: [\"2-abcdefg\"],\r\n          branch: \"feature\"\r\n        }\r\n      ],\r\n      [\r\n        \"6-abcdefg\",\r\n        {\r\n          id: \"6-abcdefg\",\r\n          message: \"\",\r\n          seq: 5,\r\n          type: 0,\r\n          tags: [],\r\n          parents: [\"5-abcdefg\"],\r\n          branch: \"feature\"\r\n        }\r\n      ],\r\n      [\r\n        \"7-abcdefg\",\r\n        {\r\n          id: \"7-abcdefg\",\r\n          message: \"\",\r\n          seq: 6,\r\n          type: 0,\r\n          tags: [],\r\n          parents: [\"2-abcdefg\"],\r\n          branch: \"main\"\r\n        }\r\n      ],\r\n      [\r\n        \"8-abcdefg\",\r\n        {\r\n          id: \"8-abcdefg\",\r\n          message: \"\",\r\n          seq: 7,\r\n          type: 0,\r\n          tags: [],\r\n          parents: [\"7-abcdefg\"],\r\n          branch: \"main\"\r\n        }\r\n      ]\r\n    ]);\r\n    const expectedCommitPosition = /* @__PURE__ */ new Map([\r\n      [\"1-abcdefg\", { x: 0, y: 40 }],\r\n      [\"2-abcdefg\", { x: 0, y: 90 }],\r\n      [\"3-abcdefg\", { x: 107.49609375, y: 140 }],\r\n      [\"4-abcdefg\", { x: 107.49609375, y: 190 }],\r\n      [\"5-abcdefg\", { x: 225.70703125, y: 140 }],\r\n      [\"6-abcdefg\", { x: 225.70703125, y: 190 }],\r\n      [\"7-abcdefg\", { x: 0, y: 140 }],\r\n      [\"8-abcdefg\", { x: 0, y: 190 }]\r\n    ]);\r\n    const expectedCommitPositionAfterParallel = /* @__PURE__ */ new Map([\r\n      [\"1-abcdefg\", { x: 0, y: 210 }],\r\n      [\"2-abcdefg\", { x: 0, y: 160 }],\r\n      [\"3-abcdefg\", { x: 107.49609375, y: 110 }],\r\n      [\"4-abcdefg\", { x: 107.49609375, y: 60 }],\r\n      [\"5-abcdefg\", { x: 225.70703125, y: 110 }],\r\n      [\"6-abcdefg\", { x: 225.70703125, y: 60 }],\r\n      [\"7-abcdefg\", { x: 0, y: 110 }],\r\n      [\"8-abcdefg\", { x: 0, y: 60 }]\r\n    ]);\r\n    const expectedCommitCurrentPosition = /* @__PURE__ */ new Map([\r\n      [\"1-abcdefg\", 30],\r\n      [\"2-abcdefg\", 80],\r\n      [\"3-abcdefg\", 130],\r\n      [\"4-abcdefg\", 180],\r\n      [\"5-abcdefg\", 130],\r\n      [\"6-abcdefg\", 180],\r\n      [\"7-abcdefg\", 130],\r\n      [\"8-abcdefg\", 180]\r\n    ]);\r\n    const sortedKeys = [...expectedCommitPosition.keys()];\r\n    it(\"should get the correct commit position and current position\", () => {\r\n      dir = \"BT\";\r\n      let curPos = 30;\r\n      commitPos.clear();\r\n      branchPos.clear();\r\n      branchPos.set(\"main\", { pos: 0, index: 0 });\r\n      branchPos.set(\"develop\", { pos: 107.49609375, index: 1 });\r\n      branchPos.set(\"feature\", { pos: 225.70703125, index: 2 });\r\n      DEFAULT_GITGRAPH_CONFIG2.parallelCommits = true;\r\n      commits.forEach((commit2, key) => {\r\n        if (commit2.parents.length > 0) {\r\n          curPos = calculateCommitPosition(commit2);\r\n        }\r\n        const position = setCommitPosition(commit2, curPos);\r\n        expect(position).toEqual(expectedCommitPosition.get(key));\r\n        expect(curPos).toEqual(expectedCommitCurrentPosition.get(key));\r\n      });\r\n    });\r\n    it(\"should get the correct commit position after parallel commits\", () => {\r\n      commitPos.clear();\r\n      branchPos.clear();\r\n      dir = \"BT\";\r\n      const curPos = 30;\r\n      commitPos.clear();\r\n      branchPos.clear();\r\n      branchPos.set(\"main\", { pos: 0, index: 0 });\r\n      branchPos.set(\"develop\", { pos: 107.49609375, index: 1 });\r\n      branchPos.set(\"feature\", { pos: 225.70703125, index: 2 });\r\n      setParallelBTPos(sortedKeys, commits, curPos);\r\n      sortedKeys.forEach((commit2) => {\r\n        const position = commitPos.get(commit2);\r\n        expect(position).toEqual(expectedCommitPositionAfterParallel.get(commit2));\r\n      });\r\n    });\r\n  });\r\n  DEFAULT_GITGRAPH_CONFIG2.parallelCommits = false;\r\n  it(\"add\", () => {\r\n    commitPos.set(\"parent1\", { x: 1, y: 1 });\r\n    commitPos.set(\"parent2\", { x: 2, y: 2 });\r\n    commitPos.set(\"parent3\", { x: 3, y: 3 });\r\n    dir = \"LR\";\r\n    const parents = [\"parent1\", \"parent2\", \"parent3\"];\r\n    const closestParent = findClosestParent(parents);\r\n    expect(closestParent).toBe(\"parent3\");\r\n    commitPos.clear();\r\n  });\r\n}\r\n\r\n// src/diagrams/git/styles.js\r\nvar getStyles = /* @__PURE__ */ __name((options) => `\r\n  .commit-id,\r\n  .commit-msg,\r\n  .branch-label {\r\n    fill: lightgrey;\r\n    color: lightgrey;\r\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\r\n    font-family: var(--mermaid-font-family);\r\n  }\r\n  ${[0, 1, 2, 3, 4, 5, 6, 7].map(\r\n  (i) => `\r\n        .branch-label${i} { fill: ${options[\"gitBranchLabel\" + i]}; }\r\n        .commit${i} { stroke: ${options[\"git\" + i]}; fill: ${options[\"git\" + i]}; }\r\n        .commit-highlight${i} { stroke: ${options[\"gitInv\" + i]}; fill: ${options[\"gitInv\" + i]}; }\r\n        .label${i}  { fill: ${options[\"git\" + i]}; }\r\n        .arrow${i} { stroke: ${options[\"git\" + i]}; }\r\n        `\r\n).join(\"\\n\")}\r\n\r\n  .branch {\r\n    stroke-width: 1;\r\n    stroke: ${options.lineColor};\r\n    stroke-dasharray: 2;\r\n  }\r\n  .commit-label { font-size: ${options.commitLabelFontSize}; fill: ${options.commitLabelColor};}\r\n  .commit-label-bkg { font-size: ${options.commitLabelFontSize}; fill: ${options.commitLabelBackground}; opacity: 0.5; }\r\n  .tag-label { font-size: ${options.tagLabelFontSize}; fill: ${options.tagLabelColor};}\r\n  .tag-label-bkg { fill: ${options.tagLabelBackground}; stroke: ${options.tagLabelBorder}; }\r\n  .tag-hole { fill: ${options.textColor}; }\r\n\r\n  .commit-merge {\r\n    stroke: ${options.primaryColor};\r\n    fill: ${options.primaryColor};\r\n  }\r\n  .commit-reverse {\r\n    stroke: ${options.primaryColor};\r\n    fill: ${options.primaryColor};\r\n    stroke-width: 3;\r\n  }\r\n  .commit-highlight-outer {\r\n  }\r\n  .commit-highlight-inner {\r\n    stroke: ${options.primaryColor};\r\n    fill: ${options.primaryColor};\r\n  }\r\n\r\n  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}\r\n  .gitTitleText {\r\n    text-anchor: middle;\r\n    font-size: 18px;\r\n    fill: ${options.textColor};\r\n  }\r\n`, \"getStyles\");\r\nvar styles_default = getStyles;\r\n\r\n// src/diagrams/git/gitGraphDiagram.ts\r\nvar diagram = {\r\n  parser,\r\n  db,\r\n  renderer: gitGraphRenderer_default,\r\n  styles: styles_default\r\n};\r\nexport {\r\n  diagram\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,IAAI,aAAa;AAAA,EACf,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,WAAW;AAAA,EACX,OAAO;AAAA,EACP,aAAa;AACf;AAGA,IAAI,0BAA0B,sBAAsB;AACpD,IAAI,aAA6B,OAAO,MAAM;AAC5C,QAAM,SAAS,cAAc;AAAA,IAC3B,GAAG;AAAA,IACH,GAAG,UAAU,EAAE;AAAA,EACjB,CAAC;AACD,SAAO;AACT,GAAG,WAAW;AACd,IAAI,QAAQ,IAAI,gBAAgB,MAAM;AACpC,QAAM,SAAS,WAAW;AAC1B,QAAM,iBAAiB,OAAO;AAC9B,QAAM,kBAAkB,OAAO;AAC/B,SAAO;AAAA,IACL;AAAA,IACA,SAAyB,oBAAI,IAAI;AAAA,IACjC,MAAM;AAAA,IACN,cAA8B,oBAAI,IAAI,CAAC,CAAC,gBAAgB,EAAE,MAAM,gBAAgB,OAAO,gBAAgB,CAAC,CAAC,CAAC;AAAA,IAC1G,UAA0B,oBAAI,IAAI,CAAC,CAAC,gBAAgB,IAAI,CAAC,CAAC;AAAA,IAC1D,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,KAAK;AAAA,IACL,SAAS,CAAC;AAAA,EACZ;AACF,CAAC;AACD,SAAS,QAAQ;AACf,SAAO,OAAO,EAAE,QAAQ,EAAE,CAAC;AAC7B;AACA,OAAO,OAAO,OAAO;AACrB,SAAS,OAAO,MAAM,IAAI;AACxB,QAAM,YAA4B,uBAAO,OAAO,IAAI;AACpD,SAAO,KAAK,OAAO,CAAC,KAAK,SAAS;AAChC,UAAM,MAAM,GAAG,IAAI;AACnB,QAAI,CAAC,UAAU,GAAG,GAAG;AACnB,gBAAU,GAAG,IAAI;AACjB,UAAI,KAAK,IAAI;AAAA,IACf;AACA,WAAO;AAAA,EACT,GAAG,CAAC,CAAC;AACP;AACA,OAAO,QAAQ,QAAQ;AACvB,IAAI,eAA+B,OAAO,SAAS,MAAM;AACvD,QAAM,QAAQ,YAAY;AAC5B,GAAG,cAAc;AACjB,IAAI,aAA6B,OAAO,SAAS,cAAc;AAC7D,MAAI,MAAM,eAAe,YAAY;AACrC,iBAAe,6CAAc;AAC7B,iBAAe,gBAAgB;AAC/B,MAAI;AACF,UAAM,QAAQ,UAAU,KAAK,MAAM,YAAY;AAAA,EACjD,SAAS,GAAG;AACV,QAAI,MAAM,wCAAwC,EAAE,OAAO;AAAA,EAC7D;AACF,GAAG,YAAY;AACf,IAAI,aAA6B,OAAO,WAAW;AACjD,SAAO,MAAM,QAAQ;AACvB,GAAG,YAAY;AACf,IAAI,SAAyB,OAAO,SAAS,UAAU;AACrD,MAAI,MAAM,SAAS;AACnB,MAAI,KAAK,SAAS;AAClB,QAAM,OAAO,SAAS;AACtB,MAAI,OAAO,SAAS;AACpB,MAAI,KAAK,UAAU,KAAK,IAAI,MAAM,IAAI;AACtC,MAAI,MAAM,oBAAoB,KAAK,IAAI,MAAM,IAAI;AACjD,QAAM,SAAS,WAAW;AAC1B,OAAK,eAAe,aAAa,IAAI,MAAM;AAC3C,QAAM,eAAe,aAAa,KAAK,MAAM;AAC7C,SAAO,6BAAM,IAAI,CAAC,QAAQ,eAAe,aAAa,KAAK,MAAM;AACjE,QAAM,YAAY;AAAA,IAChB,IAAI,KAAK,KAAK,MAAM,QAAQ,MAAM,MAAM,MAAM;AAAA,IAC9C,SAAS;AAAA,IACT,KAAK,MAAM,QAAQ;AAAA,IACnB,MAAM,QAAQ,WAAW;AAAA,IACzB,MAAM,QAAQ,CAAC;AAAA,IACf,SAAS,MAAM,QAAQ,QAAQ,OAAO,CAAC,IAAI,CAAC,MAAM,QAAQ,KAAK,EAAE;AAAA,IACjE,QAAQ,MAAM,QAAQ;AAAA,EACxB;AACA,QAAM,QAAQ,OAAO;AACrB,MAAI,KAAK,eAAe,OAAO,cAAc;AAC7C,QAAM,QAAQ,QAAQ,IAAI,UAAU,IAAI,SAAS;AACjD,QAAM,QAAQ,SAAS,IAAI,MAAM,QAAQ,YAAY,UAAU,EAAE;AACjE,MAAI,MAAM,mBAAmB,UAAU,EAAE;AAC3C,GAAG,QAAQ;AACX,IAAI,SAAyB,OAAO,SAAS,UAAU;AACrD,MAAI,OAAO,SAAS;AACpB,QAAM,QAAQ,SAAS;AACvB,SAAO,eAAe,aAAa,MAAM,WAAW,CAAC;AACrD,MAAI,MAAM,QAAQ,SAAS,IAAI,IAAI,GAAG;AACpC,UAAM,IAAI;AAAA,MACR,4HAA4H,IAAI;AAAA,IAClI;AAAA,EACF;AACA,QAAM,QAAQ,SAAS,IAAI,MAAM,MAAM,QAAQ,QAAQ,OAAO,MAAM,QAAQ,KAAK,KAAK,IAAI;AAC1F,QAAM,QAAQ,aAAa,IAAI,MAAM,EAAE,MAAM,MAAM,CAAC;AACpD,WAAS,IAAI;AACb,MAAI,MAAM,iBAAiB;AAC7B,GAAG,QAAQ;AACX,IAAI,QAAwB,OAAO,CAAC,YAAY;AAC9C,MAAI,cAAc,QAAQ;AAC1B,MAAI,WAAW,QAAQ;AACvB,QAAM,eAAe,QAAQ;AAC7B,QAAM,aAAa,QAAQ;AAC3B,QAAM,SAAS,WAAW;AAC1B,gBAAc,eAAe,aAAa,aAAa,MAAM;AAC7D,MAAI,UAAU;AACZ,eAAW,eAAe,aAAa,UAAU,MAAM;AAAA,EACzD;AACA,QAAM,qBAAqB,MAAM,QAAQ,SAAS,IAAI,MAAM,QAAQ,UAAU;AAC9E,QAAM,mBAAmB,MAAM,QAAQ,SAAS,IAAI,WAAW;AAC/D,QAAM,gBAAgB,qBAAqB,MAAM,QAAQ,QAAQ,IAAI,kBAAkB,IAAI;AAC3F,QAAM,cAAc,mBAAmB,MAAM,QAAQ,QAAQ,IAAI,gBAAgB,IAAI;AACrF,MAAI,iBAAiB,eAAe,cAAc,WAAW,aAAa;AACxE,UAAM,IAAI,MAAM,wBAAwB,WAAW,gBAAgB;AAAA,EACrE;AACA,MAAI,MAAM,QAAQ,eAAe,aAAa;AAC5C,UAAM,QAAQ,IAAI,MAAM,6DAA6D;AACrF,UAAM,OAAO;AAAA,MACX,MAAM,SAAS,WAAW;AAAA,MAC1B,OAAO,SAAS,WAAW;AAAA,MAC3B,UAAU,CAAC,YAAY;AAAA,IACzB;AACA,UAAM;AAAA,EACR;AACA,MAAI,kBAAkB,UAAU,CAAC,eAAe;AAC9C,UAAM,QAAQ,IAAI;AAAA,MAChB,+CAA+C,MAAM,QAAQ,UAAU;AAAA,IACzE;AACA,UAAM,OAAO;AAAA,MACX,MAAM,SAAS,WAAW;AAAA,MAC1B,OAAO,SAAS,WAAW;AAAA,MAC3B,UAAU,CAAC,QAAQ;AAAA,IACrB;AACA,UAAM;AAAA,EACR;AACA,MAAI,CAAC,MAAM,QAAQ,SAAS,IAAI,WAAW,GAAG;AAC5C,UAAM,QAAQ,IAAI;AAAA,MAChB,sDAAsD,cAAc;AAAA,IACtE;AACA,UAAM,OAAO;AAAA,MACX,MAAM,SAAS,WAAW;AAAA,MAC1B,OAAO,SAAS,WAAW;AAAA,MAC3B,UAAU,CAAC,UAAU,WAAW,EAAE;AAAA,IACpC;AACA,UAAM;AAAA,EACR;AACA,MAAI,gBAAgB,UAAU,CAAC,aAAa;AAC1C,UAAM,QAAQ,IAAI;AAAA,MAChB,sDAAsD,cAAc;AAAA,IACtE;AACA,UAAM,OAAO;AAAA,MACX,MAAM,SAAS,WAAW;AAAA,MAC1B,OAAO,SAAS,WAAW;AAAA,MAC3B,UAAU,CAAC,UAAU;AAAA,IACvB;AACA,UAAM;AAAA,EACR;AACA,MAAI,kBAAkB,aAAa;AACjC,UAAM,QAAQ,IAAI,MAAM,0DAA0D;AAClF,UAAM,OAAO;AAAA,MACX,MAAM,SAAS,WAAW;AAAA,MAC1B,OAAO,SAAS,WAAW;AAAA,MAC3B,UAAU,CAAC,YAAY;AAAA,IACzB;AACA,UAAM;AAAA,EACR;AACA,MAAI,YAAY,MAAM,QAAQ,QAAQ,IAAI,QAAQ,GAAG;AACnD,UAAM,QAAQ,IAAI;AAAA,MAChB,gDAAgD,WAAW;AAAA,IAC7D;AACA,UAAM,OAAO;AAAA,MACX,MAAM,SAAS,WAAW,IAAI,QAAQ,IAAI,YAAY,IAAI,yCAAY,KAAK,IAAI;AAAA,MAC/E,OAAO,SAAS,WAAW,IAAI,QAAQ,IAAI,YAAY,IAAI,yCAAY,KAAK,IAAI;AAAA,MAChF,UAAU;AAAA,QACR,SAAS,WAAW,IAAI,QAAQ,WAAW,YAAY,IAAI,yCAAY,KAAK,IAAI;AAAA,MAClF;AAAA,IACF;AACA,UAAM;AAAA,EACR;AACA,QAAM,iBAAiB,mBAAmB,mBAAmB;AAC7D,QAAM,UAAU;AAAA,IACd,IAAI,YAAY,GAAG,MAAM,QAAQ,GAAG,IAAI,MAAM,CAAC;AAAA,IAC/C,SAAS,iBAAiB,WAAW,SAAS,MAAM,QAAQ,UAAU;AAAA,IACtE,KAAK,MAAM,QAAQ;AAAA,IACnB,SAAS,MAAM,QAAQ,QAAQ,OAAO,CAAC,IAAI,CAAC,MAAM,QAAQ,KAAK,IAAI,cAAc;AAAA,IACjF,QAAQ,MAAM,QAAQ;AAAA,IACtB,MAAM,WAAW;AAAA,IACjB,YAAY;AAAA,IACZ,UAAU,WAAW,OAAO;AAAA,IAC5B,MAAM,cAAc,CAAC;AAAA,EACvB;AACA,QAAM,QAAQ,OAAO;AACrB,QAAM,QAAQ,QAAQ,IAAI,QAAQ,IAAI,OAAO;AAC7C,QAAM,QAAQ,SAAS,IAAI,MAAM,QAAQ,YAAY,QAAQ,EAAE;AAC/D,MAAI,MAAM,MAAM,QAAQ,QAAQ;AAChC,MAAI,MAAM,gBAAgB;AAC5B,GAAG,OAAO;AACV,IAAI,aAA6B,OAAO,SAAS,cAAc;AAC7D,MAAI,WAAW,aAAa;AAC5B,MAAI,WAAW,aAAa;AAC5B,MAAI,OAAO,aAAa;AACxB,MAAI,iBAAiB,aAAa;AAClC,MAAI,MAAM,wBAAwB,UAAU,UAAU,IAAI;AAC1D,QAAM,SAAS,WAAW;AAC1B,aAAW,eAAe,aAAa,UAAU,MAAM;AACvD,aAAW,eAAe,aAAa,UAAU,MAAM;AACvD,SAAO,6BAAM,IAAI,CAAC,QAAQ,eAAe,aAAa,KAAK,MAAM;AACjE,mBAAiB,eAAe,aAAa,gBAAgB,MAAM;AACnE,MAAI,CAAC,YAAY,CAAC,MAAM,QAAQ,QAAQ,IAAI,QAAQ,GAAG;AACrD,UAAM,QAAQ,IAAI;AAAA,MAChB;AAAA,IACF;AACA,UAAM,OAAO;AAAA,MACX,MAAM,cAAc,QAAQ,IAAI,QAAQ;AAAA,MACxC,OAAO,cAAc,QAAQ,IAAI,QAAQ;AAAA,MACzC,UAAU,CAAC,iBAAiB;AAAA,IAC9B;AACA,UAAM;AAAA,EACR;AACA,QAAM,eAAe,MAAM,QAAQ,QAAQ,IAAI,QAAQ;AACvD,MAAI,iBAAiB,UAAU,CAAC,cAAc;AAC5C,UAAM,IAAI,MAAM,6EAA6E;AAAA,EAC/F;AACA,MAAI,kBAAkB,EAAE,MAAM,QAAQ,aAAa,OAAO,KAAK,aAAa,QAAQ,SAAS,cAAc,IAAI;AAC7G,UAAM,QAAQ,IAAI;AAAA,MAChB;AAAA,IACF;AACA,UAAM;AAAA,EACR;AACA,QAAM,qBAAqB,aAAa;AACxC,MAAI,aAAa,SAAS,WAAW,SAAS,CAAC,gBAAgB;AAC7D,UAAM,QAAQ,IAAI;AAAA,MAChB;AAAA,IACF;AACA,UAAM;AAAA,EACR;AACA,MAAI,CAAC,YAAY,CAAC,MAAM,QAAQ,QAAQ,IAAI,QAAQ,GAAG;AACrD,QAAI,uBAAuB,MAAM,QAAQ,YAAY;AACnD,YAAM,QAAQ,IAAI;AAAA,QAChB;AAAA,MACF;AACA,YAAM,OAAO;AAAA,QACX,MAAM,cAAc,QAAQ,IAAI,QAAQ;AAAA,QACxC,OAAO,cAAc,QAAQ,IAAI,QAAQ;AAAA,QACzC,UAAU,CAAC,iBAAiB;AAAA,MAC9B;AACA,YAAM;AAAA,IACR;AACA,UAAM,kBAAkB,MAAM,QAAQ,SAAS,IAAI,MAAM,QAAQ,UAAU;AAC3E,QAAI,oBAAoB,UAAU,CAAC,iBAAiB;AAClD,YAAM,QAAQ,IAAI;AAAA,QAChB,qDAAqD,MAAM,QAAQ,UAAU;AAAA,MAC/E;AACA,YAAM,OAAO;AAAA,QACX,MAAM,cAAc,QAAQ,IAAI,QAAQ;AAAA,QACxC,OAAO,cAAc,QAAQ,IAAI,QAAQ;AAAA,QACzC,UAAU,CAAC,iBAAiB;AAAA,MAC9B;AACA,YAAM;AAAA,IACR;AACA,UAAM,gBAAgB,MAAM,QAAQ,QAAQ,IAAI,eAAe;AAC/D,QAAI,kBAAkB,UAAU,CAAC,eAAe;AAC9C,YAAM,QAAQ,IAAI;AAAA,QAChB,qDAAqD,MAAM,QAAQ,UAAU;AAAA,MAC/E;AACA,YAAM,OAAO;AAAA,QACX,MAAM,cAAc,QAAQ,IAAI,QAAQ;AAAA,QACxC,OAAO,cAAc,QAAQ,IAAI,QAAQ;AAAA,QACzC,UAAU,CAAC,iBAAiB;AAAA,MAC9B;AACA,YAAM;AAAA,IACR;AACA,UAAM,UAAU;AAAA,MACd,IAAI,MAAM,QAAQ,MAAM,MAAM,MAAM;AAAA,MACpC,SAAS,iBAAiB,6CAAc,OAAO,SAAS,MAAM,QAAQ,UAAU;AAAA,MAChF,KAAK,MAAM,QAAQ;AAAA,MACnB,SAAS,MAAM,QAAQ,QAAQ,OAAO,CAAC,IAAI,CAAC,MAAM,QAAQ,KAAK,IAAI,aAAa,EAAE;AAAA,MAClF,QAAQ,MAAM,QAAQ;AAAA,MACtB,MAAM,WAAW;AAAA,MACjB,MAAM,OAAO,KAAK,OAAO,OAAO,IAAI;AAAA,QAClC,eAAe,aAAa,EAAE,GAAG,aAAa,SAAS,WAAW,QAAQ,WAAW,cAAc,KAAK,EAAE;AAAA,MAC5G;AAAA,IACF;AACA,UAAM,QAAQ,OAAO;AACrB,UAAM,QAAQ,QAAQ,IAAI,QAAQ,IAAI,OAAO;AAC7C,UAAM,QAAQ,SAAS,IAAI,MAAM,QAAQ,YAAY,QAAQ,EAAE;AAC/D,QAAI,MAAM,MAAM,QAAQ,QAAQ;AAChC,QAAI,MAAM,eAAe;AAAA,EAC3B;AACF,GAAG,YAAY;AACf,IAAI,WAA2B,OAAO,SAAS,SAAS;AACtD,YAAU,eAAe,aAAa,SAAS,WAAW,CAAC;AAC3D,MAAI,CAAC,MAAM,QAAQ,SAAS,IAAI,OAAO,GAAG;AACxC,UAAM,QAAQ,IAAI;AAAA,MAChB,+EAA+E,OAAO;AAAA,IACxF;AACA,UAAM,OAAO;AAAA,MACX,MAAM,YAAY,OAAO;AAAA,MACzB,OAAO,YAAY,OAAO;AAAA,MAC1B,UAAU,CAAC,UAAU,OAAO,EAAE;AAAA,IAChC;AACA,UAAM;AAAA,EACR,OAAO;AACL,UAAM,QAAQ,aAAa;AAC3B,UAAM,KAAK,MAAM,QAAQ,SAAS,IAAI,MAAM,QAAQ,UAAU;AAC9D,QAAI,OAAO,UAAU,CAAC,IAAI;AACxB,YAAM,QAAQ,OAAO;AAAA,IACvB,OAAO;AACL,YAAM,QAAQ,OAAO,MAAM,QAAQ,QAAQ,IAAI,EAAE,KAAK;AAAA,IACxD;AAAA,EACF;AACF,GAAG,UAAU;AACb,SAAS,OAAO,KAAK,KAAK,QAAQ;AAChC,QAAM,QAAQ,IAAI,QAAQ,GAAG;AAC7B,MAAI,UAAU,IAAI;AAChB,QAAI,KAAK,MAAM;AAAA,EACjB,OAAO;AACL,QAAI,OAAO,OAAO,GAAG,MAAM;AAAA,EAC7B;AACF;AACA,OAAO,QAAQ,QAAQ;AACvB,SAAS,yBAAyB,WAAW;AAC3C,QAAM,UAAU,UAAU,OAAO,CAAC,KAAK,YAAY;AACjD,QAAI,IAAI,MAAM,QAAQ,KAAK;AACzB,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT,GAAG,UAAU,CAAC,CAAC;AACf,MAAI,OAAO;AACX,YAAU,QAAQ,SAAS,GAAG;AAC5B,QAAI,MAAM,SAAS;AACjB,cAAQ;AAAA,IACV,OAAO;AACL,cAAQ;AAAA,IACV;AAAA,EACF,CAAC;AACD,QAAM,QAAQ,CAAC,MAAM,QAAQ,IAAI,QAAQ,GAAG;AAC5C,aAAW,WAAW,MAAM,QAAQ,UAAU;AAC5C,QAAI,MAAM,QAAQ,SAAS,IAAI,OAAO,MAAM,QAAQ,IAAI;AACtD,YAAM,KAAK,OAAO;AAAA,IACpB;AAAA,EACF;AACA,MAAI,MAAM,MAAM,KAAK,GAAG,CAAC;AACzB,MAAI,QAAQ,WAAW,QAAQ,QAAQ,UAAU,KAAK,QAAQ,QAAQ,CAAC,KAAK,QAAQ,QAAQ,CAAC,GAAG;AAC9F,UAAM,YAAY,MAAM,QAAQ,QAAQ,IAAI,QAAQ,QAAQ,CAAC,CAAC;AAC9D,WAAO,WAAW,SAAS,SAAS;AACpC,QAAI,QAAQ,QAAQ,CAAC,GAAG;AACtB,gBAAU,KAAK,MAAM,QAAQ,QAAQ,IAAI,QAAQ,QAAQ,CAAC,CAAC,CAAC;AAAA,IAC9D;AAAA,EACF,WAAW,QAAQ,QAAQ,UAAU,GAAG;AACtC;AAAA,EACF,OAAO;AACL,QAAI,QAAQ,QAAQ,CAAC,GAAG;AACtB,YAAM,YAAY,MAAM,QAAQ,QAAQ,IAAI,QAAQ,QAAQ,CAAC,CAAC;AAC9D,aAAO,WAAW,SAAS,SAAS;AAAA,IACtC;AAAA,EACF;AACA,cAAY,OAAO,WAAW,CAAC,MAAM,EAAE,EAAE;AACzC,2BAAyB,SAAS;AACpC;AACA,OAAO,0BAA0B,0BAA0B;AAC3D,IAAI,cAA8B,OAAO,WAAW;AAClD,MAAI,MAAM,MAAM,QAAQ,OAAO;AAC/B,QAAM,OAAO,gBAAgB,EAAE,CAAC;AAChC,2BAAyB,CAAC,IAAI,CAAC;AACjC,GAAG,aAAa;AAChB,IAAI,SAAyB,OAAO,WAAW;AAC7C,QAAM,MAAM;AACZ,QAAM;AACR,GAAG,OAAO;AACV,IAAI,wBAAwC,OAAO,WAAW;AAC5D,QAAM,gBAAgB,CAAC,GAAG,MAAM,QAAQ,aAAa,OAAO,CAAC,EAAE,IAAI,CAAC,cAAc,MAAM;AACtF,QAAI,aAAa,UAAU,QAAQ,aAAa,UAAU,QAAQ;AAChE,aAAO;AAAA,IACT;AACA,WAAO;AAAA,MACL,GAAG;AAAA,MACH,OAAO,WAAW,KAAK,CAAC,EAAE;AAAA,IAC5B;AAAA,EACF,CAAC,EAAE,KAAK,CAAC,GAAG,OAAO,EAAE,SAAS,MAAM,EAAE,SAAS,EAAE,EAAE,IAAI,CAAC,EAAE,KAAK,OAAO,EAAE,KAAK,EAAE;AAC/E,SAAO;AACT,GAAG,uBAAuB;AAC1B,IAAI,cAA8B,OAAO,WAAW;AAClD,SAAO,MAAM,QAAQ;AACvB,GAAG,aAAa;AAChB,IAAI,aAA6B,OAAO,WAAW;AACjD,SAAO,MAAM,QAAQ;AACvB,GAAG,YAAY;AACf,IAAI,kBAAkC,OAAO,WAAW;AACtD,QAAM,YAAY,CAAC,GAAG,MAAM,QAAQ,QAAQ,OAAO,CAAC;AACpD,YAAU,QAAQ,SAAS,GAAG;AAC5B,QAAI,MAAM,EAAE,EAAE;AAAA,EAChB,CAAC;AACD,YAAU,KAAK,CAAC,GAAG,MAAM,EAAE,MAAM,EAAE,GAAG;AACtC,SAAO;AACT,GAAG,iBAAiB;AACpB,IAAI,mBAAmC,OAAO,WAAW;AACvD,SAAO,MAAM,QAAQ;AACvB,GAAG,kBAAkB;AACrB,IAAI,eAA+B,OAAO,WAAW;AACnD,SAAO,MAAM,QAAQ;AACvB,GAAG,cAAc;AACjB,IAAI,UAA0B,OAAO,WAAW;AAC9C,SAAO,MAAM,QAAQ;AACvB,GAAG,SAAS;AACZ,IAAI,KAAK;AAAA,EACP;AAAA,EACA,WAAW;AAAA,EACX;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA,OAAO;AAAA,EACP;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAGA,IAAI,WAA2B,OAAO,CAAC,KAAK,QAAQ;AAClD,mBAAiB,KAAK,GAAG;AACzB,MAAI,IAAI,KAAK;AACX,QAAI,aAAa,IAAI,GAAG;AAAA,EAC1B;AACA,aAAW,aAAa,IAAI,YAAY;AACtC,mBAAe,WAAW,GAAG;AAAA,EAC/B;AACF,GAAG,UAAU;AACb,IAAI,iBAAiC,OAAO,CAAC,WAAW,QAAQ;AAC9D,QAAM,UAAU;AAAA,IACd,QAAwB,OAAO,CAAC,SAAS,IAAI,OAAO,YAAY,IAAI,CAAC,GAAG,QAAQ;AAAA,IAChF,QAAwB,OAAO,CAAC,SAAS,IAAI,OAAO,YAAY,IAAI,CAAC,GAAG,QAAQ;AAAA,IAChF,OAAuB,OAAO,CAAC,SAAS,IAAI,MAAM,WAAW,IAAI,CAAC,GAAG,OAAO;AAAA,IAC5E,UAA0B,OAAO,CAAC,SAAS,IAAI,SAAS,cAAc,IAAI,CAAC,GAAG,UAAU;AAAA,IACxF,eAA+B,OAAO,CAAC,SAAS,IAAI,WAAW,mBAAmB,IAAI,CAAC,GAAG,eAAe;AAAA,EAC3G;AACA,QAAM,UAAU,QAAQ,UAAU,KAAK;AACvC,MAAI,SAAS;AACX,YAAQ,SAAS;AAAA,EACnB,OAAO;AACL,QAAI,MAAM,2BAA2B,UAAU,KAAK,EAAE;AAAA,EACxD;AACF,GAAG,gBAAgB;AACnB,IAAI,cAA8B,OAAO,CAAC,YAAY;AACpD,QAAM,WAAW;AAAA,IACf,IAAI,QAAQ;AAAA,IACZ,KAAK,QAAQ,WAAW;AAAA,IACxB,MAAM,QAAQ,SAAS,SAAS,WAAW,QAAQ,IAAI,IAAI,WAAW;AAAA,IACtE,MAAM,QAAQ,QAAQ;AAAA,EACxB;AACA,SAAO;AACT,GAAG,aAAa;AAChB,IAAI,cAA8B,OAAO,CAAC,YAAY;AACpD,QAAM,WAAW;AAAA,IACf,MAAM,QAAQ;AAAA,IACd,OAAO,QAAQ,SAAS;AAAA,EAC1B;AACA,SAAO;AACT,GAAG,aAAa;AAChB,IAAI,aAA6B,OAAO,CAAC,WAAW;AAClD,QAAM,UAAU;AAAA,IACd,QAAQ,OAAO;AAAA,IACf,IAAI,OAAO,MAAM;AAAA,IACjB,MAAM,OAAO,SAAS,SAAS,WAAW,OAAO,IAAI,IAAI;AAAA,IACzD,MAAM,OAAO,QAAQ;AAAA,EACvB;AACA,SAAO;AACT,GAAG,YAAY;AACf,IAAI,gBAAgC,OAAO,CAAC,cAAc;AACxD,QAAM,UAAU,UAAU;AAC1B,SAAO;AACT,GAAG,eAAe;AAClB,IAAI,qBAAqC,OAAO,CAAC,kBAAkB;AA/gBnE;AAghBE,QAAM,eAAe;AAAA,IACnB,IAAI,cAAc;AAAA,IAClB,UAAU;AAAA,IACV,QAAM,mBAAc,SAAd,mBAAoB,YAAW,IAAI,SAAS,cAAc;AAAA,IAChE,QAAQ,cAAc;AAAA,EACxB;AACA,SAAO;AACT,GAAG,oBAAoB;AACvB,IAAI,SAAS;AAAA,EACX,OAAuB,OAAO,OAAO,UAAU;AAC7C,UAAM,MAAM,MAAM,MAAM,YAAY,KAAK;AACzC,QAAI,MAAM,GAAG;AACb,aAAS,KAAK,EAAE;AAAA,EAClB,GAAG,OAAO;AACZ;AACA,IAAI,QAAQ;AACV,QAAM,EAAE,IAAI,QAAQ,SAAS,IAAI;AACjC,QAAM,SAAS;AAAA,IACb;AAAA,IACA,cAAc,GAAG,GAAG;AAAA,IACpB,QAAQ,GAAG,GAAG;AAAA,IACd,QAAQ,GAAG,GAAG;AAAA,IACd,OAAO,GAAG,GAAG;AAAA,IACb,YAAY,GAAG,GAAG;AAAA,IAClB,UAAU,GAAG,GAAG;AAAA,EAClB;AACA,WAAS,mBAAmB,MAAM;AAChC,OAAG,mCAAmC,MAAM;AAC1C,YAAM,UAAU;AAAA,QACd,OAAO;AAAA,QACP,IAAI;AAAA,QACJ,SAAS;AAAA,QACT,MAAM,CAAC,QAAQ,MAAM;AAAA,QACrB,MAAM;AAAA,MACR;AACA,qBAAe,SAAS,MAAM;AAC9B,aAAO,OAAO,MAAM,EAAE,qBAAqB;AAAA,QACzC,IAAI;AAAA,QACJ,KAAK;AAAA,QACL,MAAM,CAAC,QAAQ,MAAM;AAAA,QACrB,MAAM;AAAA,MACR,CAAC;AAAA,IACH,CAAC;AACD,OAAG,mCAAmC,MAAM;AAC1C,YAAM,UAAU;AAAA,QACd,OAAO;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AACA,qBAAe,SAAS,MAAM;AAC9B,aAAO,OAAO,MAAM,EAAE,qBAAqB,EAAE,MAAM,aAAa,OAAO,EAAE,CAAC;AAAA,IAC5E,CAAC;AACD,OAAG,qCAAqC,MAAM;AAC5C,YAAM,YAAY;AAAA,QAChB,OAAO;AAAA,QACP,QAAQ;AAAA,MACV;AACA,qBAAe,WAAW,MAAM;AAChC,aAAO,OAAO,QAAQ,EAAE,qBAAqB,WAAW;AAAA,IAC1D,CAAC;AACD,OAAG,kCAAkC,MAAM;AACzC,YAAM,SAAS;AAAA,QACb,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,IAAI;AAAA,QACJ,MAAM,CAAC,QAAQ,MAAM;AAAA,QACrB,MAAM;AAAA,MACR;AACA,qBAAe,QAAQ,MAAM;AAC7B,aAAO,OAAO,KAAK,EAAE,qBAAqB;AAAA,QACxC,QAAQ;AAAA,QACR,IAAI;AAAA,QACJ,MAAM,CAAC,QAAQ,MAAM;AAAA,QACrB,MAAM;AAAA,MACR,CAAC;AAAA,IACH,CAAC;AACD,OAAG,2CAA2C,MAAM;AAClD,YAAM,cAAc;AAAA,QAClB,OAAO;AAAA,QACP,IAAI;AAAA,QACJ,MAAM,CAAC,QAAQ,MAAM;AAAA,QACrB,QAAQ;AAAA,MACV;AACA,qBAAe,aAAa,MAAM;AAClC,aAAO,OAAO,UAAU,EAAE,qBAAqB;AAAA,QAC7C,IAAI;AAAA,QACJ,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM,CAAC,QAAQ,MAAM;AAAA,MACvB,CAAC;AAAA,IACH,CAAC;AACD,OAAG,iDAAiD,MAAM;AACxD,YAAM,QAAQ;AAAA,QACZ,OAAO;AAAA,QACP,YAAY,CAAC;AAAA,MACf;AACA,YAAM,cAAc;AAAA,QAClB,OAAO;AAAA,QACP,YAAY;AAAA,UACV;AAAA,YACE,YAAY;AAAA,YACZ,OAAO;AAAA,YACP,IAAI;AAAA,YACJ,SAAS;AAAA,YACT,MAAM,CAAC,QAAQ,MAAM;AAAA,YACrB,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,YAAY;AAAA,YACZ,OAAO;AAAA,YACP,MAAM;AAAA,YACN,OAAO;AAAA,UACT;AAAA,UACA;AAAA,YACE,YAAY;AAAA,YACZ,OAAO;AAAA,YACP,QAAQ;AAAA,YACR,IAAI;AAAA,YACJ,MAAM,CAAC,QAAQ,MAAM;AAAA,YACrB,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,YAAY;AAAA,YACZ,OAAO;AAAA,YACP,QAAQ;AAAA,UACV;AAAA,UACA;AAAA,YACE,YAAY;AAAA,YACZ,OAAO;AAAA,YACP,IAAI;AAAA,YACJ,MAAM,CAAC,QAAQ,MAAM;AAAA,YACrB,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF;AACA,eAAS,aAAa,MAAM;AAC5B,aAAO,OAAO,MAAM,EAAE,qBAAqB;AAAA,QACzC,IAAI;AAAA,QACJ,KAAK;AAAA,QACL,MAAM,CAAC,QAAQ,MAAM;AAAA,QACrB,MAAM;AAAA,MACR,CAAC;AACD,aAAO,OAAO,MAAM,EAAE,qBAAqB,EAAE,MAAM,aAAa,OAAO,EAAE,CAAC;AAC1E,aAAO,OAAO,KAAK,EAAE,qBAAqB;AAAA,QACxC,QAAQ;AAAA,QACR,IAAI;AAAA,QACJ,MAAM,CAAC,QAAQ,MAAM;AAAA,QACrB,MAAM;AAAA,MACR,CAAC;AACD,aAAO,OAAO,QAAQ,EAAE,qBAAqB,WAAW;AAAA,IAC1D,CAAC;AAAA,EACH,CAAC;AACH;AAIA,IAAI,iBAAiB,WAAW;AAChC,IAAI,2BAA2B,iDAAgB;AAC/C,IAAI,gBAAgB;AACpB,IAAI,cAAc;AAClB,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,oBAAoB;AACxB,IAAI,YAA4B,oBAAI,IAAI;AACxC,IAAI,YAA4B,oBAAI,IAAI;AACxC,IAAI,aAAa;AACjB,IAAI,iBAAiC,oBAAI,IAAI;AAC7C,IAAI,QAAQ,CAAC;AACb,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,SAAyB,OAAO,MAAM;AACxC,YAAU,MAAM;AAChB,YAAU,MAAM;AAChB,iBAAe,MAAM;AACrB,WAAS;AACT,UAAQ,CAAC;AACT,QAAM;AACR,GAAG,OAAO;AACV,IAAI,WAA2B,OAAO,CAAC,QAAQ;AAC7C,QAAM,WAAW,SAAS,gBAAgB,8BAA8B,MAAM;AAC9E,QAAM,OAAO,OAAO,QAAQ,WAAW,IAAI,MAAM,qBAAqB,IAAI;AAC1E,OAAK,QAAQ,CAAC,QAAQ;AACpB,UAAM,QAAQ,SAAS,gBAAgB,8BAA8B,OAAO;AAC5E,UAAM,eAAe,wCAAwC,aAAa,UAAU;AACpF,UAAM,aAAa,MAAM,KAAK;AAC9B,UAAM,aAAa,KAAK,GAAG;AAC3B,UAAM,aAAa,SAAS,KAAK;AACjC,UAAM,cAAc,IAAI,KAAK;AAC7B,aAAS,YAAY,KAAK;AAAA,EAC5B,CAAC;AACD,SAAO;AACT,GAAG,UAAU;AACb,IAAI,oBAAoC,OAAO,CAAC,YAAY;AAC1D,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,QAAQ,MAAM;AAChB,qBAAiC,OAAO,CAAC,GAAG,MAAM,KAAK,GAAG,gBAAgB;AAC1E,qBAAiB;AAAA,EACnB,OAAO;AACL,qBAAiC,OAAO,CAAC,GAAG,MAAM,KAAK,GAAG,gBAAgB;AAC1E,qBAAiB;AAAA,EACnB;AACA,UAAQ,QAAQ,CAAC,WAAW;AA3tB9B;AA4tBI,UAAM,iBAAiB,QAAQ,QAAQ,OAAO,QAAO,eAAU,IAAI,MAAM,MAApB,mBAAuB,KAAI,eAAU,IAAI,MAAM,MAApB,mBAAuB;AACvG,QAAI,mBAAmB,UAAU,eAAe,gBAAgB,cAAc,GAAG;AAC/E,sBAAgB;AAChB,uBAAiB;AAAA,IACnB;AAAA,EACF,CAAC;AACD,SAAO;AACT,GAAG,mBAAmB;AACtB,IAAI,sBAAsC,OAAO,CAAC,YAAY;AAC5D,MAAI,gBAAgB;AACpB,MAAI,cAAc;AAClB,UAAQ,QAAQ,CAAC,WAAW;AAC1B,UAAM,iBAAiB,UAAU,IAAI,MAAM,EAAE;AAC7C,QAAI,kBAAkB,aAAa;AACjC,sBAAgB;AAChB,oBAAc;AAAA,IAChB;AAAA,EACF,CAAC;AACD,SAAO,iBAAiB;AAC1B,GAAG,qBAAqB;AACxB,IAAI,mBAAmC,OAAO,CAAC,YAAY,SAAS,gBAAgB;AAClF,MAAI,SAAS;AACb,MAAI,cAAc;AAClB,QAAM,QAAQ,CAAC;AACf,aAAW,QAAQ,CAAC,QAAQ;AAC1B,UAAM,UAAU,QAAQ,IAAI,GAAG;AAC/B,QAAI,CAAC,SAAS;AACZ,YAAM,IAAI,MAAM,4BAA4B,GAAG,EAAE;AAAA,IACnD;AACA,QAAI,QAAQ,QAAQ,QAAQ;AAC1B,eAAS,wBAAwB,OAAO;AACxC,oBAAc,KAAK,IAAI,QAAQ,WAAW;AAAA,IAC5C,OAAO;AACL,YAAM,KAAK,OAAO;AAAA,IACpB;AACA,sBAAkB,SAAS,MAAM;AAAA,EACnC,CAAC;AACD,WAAS;AACT,QAAM,QAAQ,CAAC,YAAY;AACzB,oBAAgB,SAAS,QAAQ,WAAW;AAAA,EAC9C,CAAC;AACD,aAAW,QAAQ,CAAC,QAAQ;AAC1B,UAAM,UAAU,QAAQ,IAAI,GAAG;AAC/B,QAAI,mCAAS,QAAQ,QAAQ;AAC3B,YAAM,gBAAgB,oBAAoB,QAAQ,OAAO;AACzD,eAAS,UAAU,IAAI,aAAa,EAAE,IAAI;AAC1C,UAAI,UAAU,aAAa;AACzB,sBAAc;AAAA,MAChB;AACA,YAAM,IAAI,UAAU,IAAI,QAAQ,MAAM,EAAE;AACxC,YAAM,IAAI,SAAS;AACnB,gBAAU,IAAI,QAAQ,IAAI,EAAE,GAAG,EAAE,CAAC;AAAA,IACpC;AAAA,EACF,CAAC;AACH,GAAG,kBAAkB;AACrB,IAAI,uBAAuC,OAAO,CAAC,YAAY;AAnxB/D;AAoxBE,QAAM,gBAAgB,kBAAkB,QAAQ,QAAQ,OAAO,CAAC,MAAM,MAAM,IAAI,CAAC;AACjF,MAAI,CAAC,eAAe;AAClB,UAAM,IAAI,MAAM,uCAAuC,QAAQ,EAAE,EAAE;AAAA,EACrE;AACA,QAAM,oBAAmB,eAAU,IAAI,aAAa,MAA3B,mBAA8B;AACvD,MAAI,qBAAqB,QAAQ;AAC/B,UAAM,IAAI,MAAM,gDAAgD,QAAQ,EAAE,EAAE;AAAA,EAC9E;AACA,SAAO;AACT,GAAG,sBAAsB;AACzB,IAAI,0BAA0C,OAAO,CAAC,YAAY;AAChE,QAAM,mBAAmB,qBAAqB,OAAO;AACrD,SAAO,mBAAmB;AAC5B,GAAG,yBAAyB;AAC5B,IAAI,oBAAoC,OAAO,CAAC,SAAS,WAAW;AAClE,QAAM,UAAU,UAAU,IAAI,QAAQ,MAAM;AAC5C,MAAI,CAAC,SAAS;AACZ,UAAM,IAAI,MAAM,+BAA+B,QAAQ,EAAE,EAAE;AAAA,EAC7D;AACA,QAAM,IAAI,QAAQ;AAClB,QAAM,IAAI,SAAS;AACnB,YAAU,IAAI,QAAQ,IAAI,EAAE,GAAG,EAAE,CAAC;AAClC,SAAO,EAAE,GAAG,EAAE;AAChB,GAAG,mBAAmB;AACtB,IAAI,kBAAkC,OAAO,CAAC,SAAS,QAAQ,gBAAgB;AAC7E,QAAM,UAAU,UAAU,IAAI,QAAQ,MAAM;AAC5C,MAAI,CAAC,SAAS;AACZ,UAAM,IAAI,MAAM,+BAA+B,QAAQ,EAAE,EAAE;AAAA,EAC7D;AACA,QAAM,IAAI,SAAS;AACnB,QAAM,IAAI,QAAQ;AAClB,YAAU,IAAI,QAAQ,IAAI,EAAE,GAAG,EAAE,CAAC;AACpC,GAAG,iBAAiB;AACpB,IAAI,mBAAmC,OAAO,CAAC,UAAU,SAAS,gBAAgB,WAAW,aAAa,qBAAqB;AAC7H,MAAI,qBAAqB,WAAW,WAAW;AAC7C,aAAS,OAAO,MAAM,EAAE,KAAK,KAAK,eAAe,IAAI,EAAE,EAAE,KAAK,KAAK,eAAe,IAAI,EAAE,EAAE,KAAK,SAAS,EAAE,EAAE,KAAK,UAAU,EAAE,EAAE;AAAA,MAC7H;AAAA,MACA,UAAU,QAAQ,EAAE,oBAAoB,cAAc,iBAAiB,IAAI,SAAS;AAAA,IACtF;AACA,aAAS,OAAO,MAAM,EAAE,KAAK,KAAK,eAAe,IAAI,CAAC,EAAE,KAAK,KAAK,eAAe,IAAI,CAAC,EAAE,KAAK,SAAS,EAAE,EAAE,KAAK,UAAU,EAAE,EAAE;AAAA,MAC3H;AAAA,MACA,UAAU,QAAQ,EAAE,UAAU,cAAc,iBAAiB,IAAI,SAAS;AAAA,IAC5E;AAAA,EACF,WAAW,qBAAqB,WAAW,aAAa;AACtD,aAAS,OAAO,QAAQ,EAAE,KAAK,MAAM,eAAe,CAAC,EAAE,KAAK,MAAM,eAAe,CAAC,EAAE,KAAK,KAAK,EAAE,EAAE,KAAK,SAAS,UAAU,QAAQ,EAAE,IAAI,SAAS,EAAE;AACnJ,aAAS,OAAO,QAAQ,EAAE,KAAK,MAAM,eAAe,IAAI,CAAC,EAAE,KAAK,MAAM,eAAe,IAAI,CAAC,EAAE,KAAK,KAAK,IAAI,EAAE,KAAK,QAAQ,MAAM,EAAE,KAAK,SAAS,UAAU,QAAQ,EAAE,IAAI,SAAS,EAAE;AAClL,aAAS,OAAO,QAAQ,EAAE,KAAK,MAAM,eAAe,IAAI,CAAC,EAAE,KAAK,MAAM,eAAe,IAAI,CAAC,EAAE,KAAK,KAAK,IAAI,EAAE,KAAK,QAAQ,MAAM,EAAE,KAAK,SAAS,UAAU,QAAQ,EAAE,IAAI,SAAS,EAAE;AAClL,aAAS,OAAO,MAAM,EAAE,KAAK,MAAM,eAAe,IAAI,CAAC,EAAE,KAAK,MAAM,eAAe,IAAI,CAAC,EAAE,KAAK,MAAM,eAAe,CAAC,EAAE,KAAK,MAAM,eAAe,IAAI,CAAC,EAAE,KAAK,UAAU,MAAM,EAAE,KAAK,SAAS,UAAU,QAAQ,EAAE,IAAI,SAAS,EAAE;AAChO,aAAS,OAAO,MAAM,EAAE,KAAK,MAAM,eAAe,IAAI,CAAC,EAAE,KAAK,MAAM,eAAe,IAAI,CAAC,EAAE,KAAK,MAAM,eAAe,CAAC,EAAE,KAAK,MAAM,eAAe,IAAI,CAAC,EAAE,KAAK,UAAU,MAAM,EAAE,KAAK,SAAS,UAAU,QAAQ,EAAE,IAAI,SAAS,EAAE;AAAA,EAClO,OAAO;AACL,UAAM,SAAS,SAAS,OAAO,QAAQ;AACvC,WAAO,KAAK,MAAM,eAAe,CAAC;AAClC,WAAO,KAAK,MAAM,eAAe,CAAC;AAClC,WAAO,KAAK,KAAK,QAAQ,SAAS,WAAW,QAAQ,IAAI,EAAE;AAC3D,WAAO,KAAK,SAAS,UAAU,QAAQ,EAAE,UAAU,cAAc,iBAAiB,EAAE;AACpF,QAAI,qBAAqB,WAAW,OAAO;AACzC,YAAM,UAAU,SAAS,OAAO,QAAQ;AACxC,cAAQ,KAAK,MAAM,eAAe,CAAC;AACnC,cAAQ,KAAK,MAAM,eAAe,CAAC;AACnC,cAAQ,KAAK,KAAK,CAAC;AACnB,cAAQ;AAAA,QACN;AAAA,QACA,UAAU,SAAS,IAAI,QAAQ,EAAE,UAAU,cAAc,iBAAiB;AAAA,MAC5E;AAAA,IACF;AACA,QAAI,qBAAqB,WAAW,SAAS;AAC3C,YAAM,QAAQ,SAAS,OAAO,MAAM;AACpC,YAAM;AAAA,QACJ;AAAA,QACA,KAAK,eAAe,IAAI,CAAC,IAAI,eAAe,IAAI,CAAC,IAAI,eAAe,IAAI,CAAC,IAAI,eAAe,IAAI,CAAC,IAAI,eAAe,IAAI,CAAC,IAAI,eAAe,IAAI,CAAC,IAAI,eAAe,IAAI,CAAC,IAAI,eAAe,IAAI,CAAC;AAAA,MACnM,EAAE,KAAK,SAAS,UAAU,SAAS,IAAI,QAAQ,EAAE,UAAU,cAAc,iBAAiB,EAAE;AAAA,IAC9F;AAAA,EACF;AACF,GAAG,kBAAkB;AACrB,IAAI,kBAAkC,OAAO,CAAC,SAAS,SAAS,gBAAgB,QAAQ;AA91BxF;AA+1BE,MAAI,QAAQ,SAAS,WAAW,gBAAgB,QAAQ,YAAY,QAAQ,SAAS,WAAW,SAAS,QAAQ,SAAS,WAAW,WAAU,qEAA0B,kBAAiB;AACxL,UAAM,UAAU,QAAQ,OAAO,GAAG;AAClC,UAAM,WAAW,QAAQ,OAAO,MAAM,EAAE,KAAK,SAAS,kBAAkB;AACxE,UAAM,OAAO,QAAQ,OAAO,MAAM,EAAE,KAAK,KAAK,GAAG,EAAE,KAAK,KAAK,eAAe,IAAI,EAAE,EAAE,KAAK,SAAS,cAAc,EAAE,KAAK,QAAQ,EAAE;AACjI,UAAM,QAAO,UAAK,KAAK,MAAV,mBAAa;AAC1B,QAAI,MAAM;AACR,eAAS,KAAK,KAAK,eAAe,gBAAgB,KAAK,QAAQ,IAAI,EAAE,EAAE,KAAK,KAAK,eAAe,IAAI,IAAI,EAAE,KAAK,SAAS,KAAK,QAAQ,IAAI,EAAE,EAAE,KAAK,UAAU,KAAK,SAAS,IAAI,EAAE;AAChL,UAAI,QAAQ,QAAQ,QAAQ,MAAM;AAChC,iBAAS,KAAK,KAAK,eAAe,KAAK,KAAK,QAAQ,IAAI,KAAK,EAAE,EAAE,KAAK,KAAK,eAAe,IAAI,EAAE;AAChG,aAAK,KAAK,KAAK,eAAe,KAAK,KAAK,QAAQ,IAAI,GAAG,EAAE,KAAK,KAAK,eAAe,IAAI,KAAK,SAAS,EAAE;AAAA,MACxG,OAAO;AACL,aAAK,KAAK,KAAK,eAAe,gBAAgB,KAAK,QAAQ,CAAC;AAAA,MAC9D;AACA,UAAI,yBAAyB,mBAAmB;AAC9C,YAAI,QAAQ,QAAQ,QAAQ,MAAM;AAChC,eAAK;AAAA,YACH;AAAA,YACA,iBAAiB,eAAe,IAAI,OAAO,eAAe,IAAI;AAAA,UAChE;AACA,mBAAS;AAAA,YACP;AAAA,YACA,iBAAiB,eAAe,IAAI,OAAO,eAAe,IAAI;AAAA,UAChE;AAAA,QACF,OAAO;AACL,gBAAM,MAAM,QAAQ,KAAK,QAAQ,MAAM,KAAK;AAC5C,gBAAM,MAAM,KAAK,KAAK,QAAQ,KAAK;AACnC,kBAAQ;AAAA,YACN;AAAA,YACA,eAAe,MAAM,OAAO,MAAM,mBAAmB,MAAM,OAAO,eAAe,IAAI;AAAA,UACvF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,GAAG,iBAAiB;AACpB,IAAI,iBAAiC,OAAO,CAAC,SAAS,SAAS,gBAAgB,QAAQ;AAl4BvF;AAm4BE,MAAI,QAAQ,KAAK,SAAS,GAAG;AAC3B,QAAI,UAAU;AACd,QAAI,kBAAkB;AACtB,QAAI,mBAAmB;AACvB,UAAM,cAAc,CAAC;AACrB,eAAW,YAAY,QAAQ,KAAK,QAAQ,GAAG;AAC7C,YAAM,OAAO,QAAQ,OAAO,SAAS;AACrC,YAAM,OAAO,QAAQ,OAAO,QAAQ;AACpC,YAAM,MAAM,QAAQ,OAAO,MAAM,EAAE,KAAK,KAAK,eAAe,IAAI,KAAK,OAAO,EAAE,KAAK,SAAS,WAAW,EAAE,KAAK,QAAQ;AACtH,YAAM,WAAU,SAAI,KAAK,MAAT,mBAAY;AAC5B,UAAI,CAAC,SAAS;AACZ,cAAM,IAAI,MAAM,oBAAoB;AAAA,MACtC;AACA,wBAAkB,KAAK,IAAI,iBAAiB,QAAQ,KAAK;AACzD,yBAAmB,KAAK,IAAI,kBAAkB,QAAQ,MAAM;AAC5D,UAAI,KAAK,KAAK,eAAe,gBAAgB,QAAQ,QAAQ,CAAC;AAC9D,kBAAY,KAAK;AAAA,QACf;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AACD,iBAAW;AAAA,IACb;AACA,eAAW,EAAE,KAAK,MAAM,MAAM,SAAS,SAAS,KAAK,aAAa;AAChE,YAAM,KAAK,mBAAmB;AAC9B,YAAM,KAAK,eAAe,IAAI,OAAO;AACrC,WAAK,KAAK,SAAS,eAAe,EAAE;AAAA,QAClC;AAAA,QACA;AAAA,QACA,MAAM,kBAAkB,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE;AAAA,QAC7C,MAAM,kBAAkB,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE;AAAA,QAC7C,eAAe,gBAAgB,kBAAkB,IAAI,EAAE,IAAI,KAAK,KAAK,EAAE;AAAA,QACvE,eAAe,gBAAgB,kBAAkB,IAAI,EAAE,IAAI,KAAK,KAAK,EAAE;AAAA,QACvE,eAAe,gBAAgB,kBAAkB,IAAI,EAAE,IAAI,KAAK,KAAK,EAAE;AAAA,QACvE,eAAe,gBAAgB,kBAAkB,IAAI,EAAE,IAAI,KAAK,KAAK,EAAE;AAAA,MACzE;AACA,WAAK,KAAK,MAAM,EAAE,EAAE,KAAK,MAAM,MAAM,kBAAkB,IAAI,KAAK,CAAC,EAAE,KAAK,KAAK,GAAG,EAAE,KAAK,SAAS,UAAU;AAC1G,UAAI,QAAQ,QAAQ,QAAQ,MAAM;AAChC,cAAM,UAAU,MAAM;AACtB,aAAK,KAAK,SAAS,eAAe,EAAE;AAAA,UAClC;AAAA,UACA;AAAA,UACA,eAAe,CAAC,IAAI,UAAU,CAAC;AAAA,UAC/B,eAAe,CAAC,IAAI,UAAU,CAAC;AAAA,UAC/B,eAAe,IAAI,aAAa,IAAI,UAAU,KAAK,CAAC;AAAA,UACpD,eAAe,IAAI,gBAAgB,kBAAkB,CAAC,IAAI,UAAU,KAAK,CAAC;AAAA,UAC1E,eAAe,IAAI,gBAAgB,kBAAkB,CAAC,IAAI,UAAU,KAAK,CAAC;AAAA,UAC1E,eAAe,IAAI,aAAa,IAAI,UAAU,KAAK,CAAC;AAAA,QACtD,EAAE,KAAK,aAAa,iCAAiC,eAAe,IAAI,MAAM,MAAM,GAAG;AACvF,aAAK,KAAK,MAAM,eAAe,IAAI,KAAK,CAAC,EAAE,KAAK,MAAM,OAAO,EAAE,KAAK,aAAa,iCAAiC,eAAe,IAAI,MAAM,MAAM,GAAG;AACpJ,YAAI,KAAK,KAAK,eAAe,IAAI,CAAC,EAAE,KAAK,KAAK,UAAU,CAAC,EAAE,KAAK,aAAa,iCAAiC,eAAe,IAAI,MAAM,MAAM,GAAG;AAAA,MAClJ;AAAA,IACF;AAAA,EACF;AACF,GAAG,gBAAgB;AACnB,IAAI,qBAAqC,OAAO,CAAC,YAAY;AAC3D,QAAM,mBAAmB,QAAQ,cAAc,QAAQ;AACvD,UAAQ,kBAAkB;AAAA,IACxB,KAAK,WAAW;AACd,aAAO;AAAA,IACT,KAAK,WAAW;AACd,aAAO;AAAA,IACT,KAAK,WAAW;AACd,aAAO;AAAA,IACT,KAAK,WAAW;AACd,aAAO;AAAA,IACT,KAAK,WAAW;AACd,aAAO;AAAA,IACT;AACE,aAAO;AAAA,EACX;AACF,GAAG,oBAAoB;AACvB,IAAI,oBAAoC,OAAO,CAAC,SAAS,MAAM,KAAK,eAAe;AACjF,QAAM,wBAAwB,EAAE,GAAG,GAAG,GAAG,EAAE;AAC3C,MAAI,QAAQ,QAAQ,SAAS,GAAG;AAC9B,UAAM,gBAAgB,kBAAkB,QAAQ,OAAO;AACvD,QAAI,eAAe;AACjB,YAAM,iBAAiB,WAAW,IAAI,aAAa,KAAK;AACxD,UAAI,SAAS,MAAM;AACjB,eAAO,eAAe,IAAI;AAAA,MAC5B,WAAW,SAAS,MAAM;AACxB,cAAM,kBAAkB,WAAW,IAAI,QAAQ,EAAE,KAAK;AACtD,eAAO,gBAAgB,IAAI;AAAA,MAC7B,OAAO;AACL,eAAO,eAAe,IAAI;AAAA,MAC5B;AAAA,IACF;AAAA,EACF,OAAO;AACL,QAAI,SAAS,MAAM;AACjB,aAAO;AAAA,IACT,WAAW,SAAS,MAAM;AACxB,YAAM,kBAAkB,WAAW,IAAI,QAAQ,EAAE,KAAK;AACtD,aAAO,gBAAgB,IAAI;AAAA,IAC7B,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT,GAAG,mBAAmB;AACtB,IAAI,oBAAoC,OAAO,CAAC,SAAS,KAAK,sBAAsB;AAv+BpF;AAw+BE,QAAM,gBAAgB,QAAQ,QAAQ,oBAAoB,MAAM,MAAM;AACtE,QAAM,IAAI,QAAQ,QAAQ,QAAQ,OAAO,iBAAgB,eAAU,IAAI,QAAQ,MAAM,MAA5B,mBAA+B;AACxF,QAAM,IAAI,QAAQ,QAAQ,QAAQ,QAAO,eAAU,IAAI,QAAQ,MAAM,MAA5B,mBAA+B,MAAM;AAC9E,MAAI,MAAM,UAAU,MAAM,QAAQ;AAChC,UAAM,IAAI,MAAM,sCAAsC,QAAQ,EAAE,EAAE;AAAA,EACpE;AACA,SAAO,EAAE,GAAG,GAAG,cAAc;AAC/B,GAAG,mBAAmB;AACtB,IAAI,cAA8B,OAAO,CAAC,KAAK,SAAS,gBAAgB;AACtE,MAAI,CAAC,0BAA0B;AAC7B,UAAM,IAAI,MAAM,2BAA2B;AAAA,EAC7C;AACA,QAAM,WAAW,IAAI,OAAO,GAAG,EAAE,KAAK,SAAS,gBAAgB;AAC/D,QAAM,UAAU,IAAI,OAAO,GAAG,EAAE,KAAK,SAAS,eAAe;AAC7D,MAAI,MAAM,QAAQ,QAAQ,QAAQ,OAAO,aAAa;AACtD,QAAM,OAAO,CAAC,GAAG,QAAQ,KAAK,CAAC;AAC/B,QAAM,qBAAoB,qEAA0B,oBAAmB;AACvE,QAAM,WAA2B,OAAO,CAAC,GAAG,MAAM;AAz/BpD;AA0/BI,UAAM,QAAO,aAAQ,IAAI,CAAC,MAAb,mBAAgB;AAC7B,UAAM,QAAO,aAAQ,IAAI,CAAC,MAAb,mBAAgB;AAC7B,WAAO,SAAS,UAAU,SAAS,SAAS,OAAO,OAAO;AAAA,EAC5D,GAAG,UAAU;AACb,MAAI,aAAa,KAAK,KAAK,QAAQ;AACnC,MAAI,QAAQ,MAAM;AAChB,QAAI,mBAAmB;AACrB,uBAAiB,YAAY,SAAS,GAAG;AAAA,IAC3C;AACA,iBAAa,WAAW,QAAQ;AAAA,EAClC;AACA,aAAW,QAAQ,CAAC,QAAQ;AArgC9B;AAsgCI,UAAM,UAAU,QAAQ,IAAI,GAAG;AAC/B,QAAI,CAAC,SAAS;AACZ,YAAM,IAAI,MAAM,4BAA4B,GAAG,EAAE;AAAA,IACnD;AACA,QAAI,mBAAmB;AACrB,YAAM,kBAAkB,SAAS,KAAK,KAAK,SAAS;AAAA,IACtD;AACA,UAAM,iBAAiB,kBAAkB,SAAS,KAAK,iBAAiB;AACxE,QAAI,aAAa;AACf,YAAM,YAAY,mBAAmB,OAAO;AAC5C,YAAM,mBAAmB,QAAQ,cAAc,QAAQ;AACvD,YAAM,gBAAc,eAAU,IAAI,QAAQ,MAAM,MAA5B,mBAA+B,UAAS;AAC5D,uBAAiB,UAAU,SAAS,gBAAgB,WAAW,aAAa,gBAAgB;AAC5F,sBAAgB,SAAS,SAAS,gBAAgB,GAAG;AACrD,qBAAe,SAAS,SAAS,gBAAgB,GAAG;AAAA,IACtD;AACA,QAAI,QAAQ,QAAQ,QAAQ,MAAM;AAChC,gBAAU,IAAI,QAAQ,IAAI,EAAE,GAAG,eAAe,GAAG,GAAG,eAAe,cAAc,CAAC;AAAA,IACpF,OAAO;AACL,gBAAU,IAAI,QAAQ,IAAI,EAAE,GAAG,eAAe,eAAe,GAAG,eAAe,EAAE,CAAC;AAAA,IACpF;AACA,UAAM,QAAQ,QAAQ,oBAAoB,MAAM,cAAc,MAAM,cAAc;AAClF,QAAI,MAAM,QAAQ;AAChB,eAAS;AAAA,IACX;AAAA,EACF,CAAC;AACH,GAAG,aAAa;AAChB,IAAI,qBAAqC,OAAO,CAAC,SAAS,SAAS,IAAI,IAAI,eAAe;AACxF,QAAM,oBAAoB,QAAQ,QAAQ,QAAQ,OAAO,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG;AACjF,QAAM,mBAAmB,oBAAoB,QAAQ,SAAS,QAAQ;AACtE,QAAM,uBAAuC,OAAO,CAAC,MAAM,EAAE,WAAW,kBAAkB,sBAAsB;AAChH,QAAM,mBAAmC,OAAO,CAAC,MAAM,EAAE,MAAM,QAAQ,OAAO,EAAE,MAAM,QAAQ,KAAK,kBAAkB;AACrH,SAAO,CAAC,GAAG,WAAW,OAAO,CAAC,EAAE,KAAK,CAAC,YAAY;AAChD,WAAO,iBAAiB,OAAO,KAAK,qBAAqB,OAAO;AAAA,EAClE,CAAC;AACH,GAAG,oBAAoB;AACvB,IAAI,WAA2B,OAAO,CAAC,IAAI,IAAI,QAAQ,MAAM;AAC3D,QAAM,YAAY,KAAK,KAAK,IAAI,KAAK,EAAE,IAAI;AAC3C,MAAI,QAAQ,GAAG;AACb,WAAO;AAAA,EACT;AACA,QAAM,KAAK,MAAM,MAAM,CAAC,SAAS,KAAK,IAAI,OAAO,SAAS,KAAK,EAAE;AACjE,MAAI,IAAI;AACN,UAAM,KAAK,SAAS;AACpB,WAAO;AAAA,EACT;AACA,QAAM,OAAO,KAAK,IAAI,KAAK,EAAE;AAC7B,SAAO,SAAS,IAAI,KAAK,OAAO,GAAG,QAAQ,CAAC;AAC9C,GAAG,UAAU;AACb,IAAI,YAA4B,OAAO,CAAC,KAAK,SAAS,SAAS,eAAe;AAvjC9E;AAwjCE,QAAM,KAAK,UAAU,IAAI,QAAQ,EAAE;AACnC,QAAM,KAAK,UAAU,IAAI,QAAQ,EAAE;AACnC,MAAI,OAAO,UAAU,OAAO,QAAQ;AAClC,UAAM,IAAI,MAAM,0CAA0C,QAAQ,EAAE,QAAQ,QAAQ,EAAE,EAAE;AAAA,EAC1F;AACA,QAAM,sBAAsB,mBAAmB,SAAS,SAAS,IAAI,IAAI,UAAU;AACnF,MAAI,MAAM;AACV,MAAI,OAAO;AACX,MAAI,SAAS;AACb,MAAI,SAAS;AACb,MAAI,iBAAgB,eAAU,IAAI,QAAQ,MAAM,MAA5B,mBAA+B;AACnD,MAAI,QAAQ,SAAS,WAAW,SAAS,QAAQ,OAAO,QAAQ,QAAQ,CAAC,GAAG;AAC1E,qBAAgB,eAAU,IAAI,QAAQ,MAAM,MAA5B,mBAA+B;AAAA,EACjD;AACA,MAAI;AACJ,MAAI,qBAAqB;AACvB,UAAM;AACN,WAAO;AACP,aAAS;AACT,aAAS;AACT,UAAM,QAAQ,GAAG,IAAI,GAAG,IAAI,SAAS,GAAG,GAAG,GAAG,CAAC,IAAI,SAAS,GAAG,GAAG,GAAG,CAAC;AACtE,UAAM,QAAQ,GAAG,IAAI,GAAG,IAAI,SAAS,GAAG,GAAG,GAAG,CAAC,IAAI,SAAS,GAAG,GAAG,GAAG,CAAC;AACtE,QAAI,QAAQ,MAAM;AAChB,UAAI,GAAG,IAAI,GAAG,GAAG;AACf,kBAAU,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,QAAQ,MAAM,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,MAAM,MAAM,KAAK,IAAI,GAAG,IAAI,MAAM,IAAI,GAAG,IAAI,QAAQ,MAAM,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;AAAA,MAC1K,OAAO;AACL,yBAAgB,eAAU,IAAI,QAAQ,MAAM,MAA5B,mBAA+B;AAC/C,kBAAU,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,QAAQ,MAAM,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,MAAM,MAAM,KAAK,IAAI,GAAG,IAAI,MAAM,IAAI,IAAI,IAAI,QAAQ,MAAM,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;AAAA,MAC1K;AAAA,IACF,WAAW,QAAQ,MAAM;AACvB,UAAI,GAAG,IAAI,GAAG,GAAG;AACf,kBAAU,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,QAAQ,MAAM,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,MAAM,MAAM,KAAK,IAAI,GAAG,IAAI,MAAM,IAAI,IAAI,IAAI,QAAQ,MAAM,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;AAAA,MAC1K,OAAO;AACL,yBAAgB,eAAU,IAAI,QAAQ,MAAM,MAA5B,mBAA+B;AAC/C,kBAAU,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,QAAQ,MAAM,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,MAAM,MAAM,KAAK,IAAI,GAAG,IAAI,MAAM,IAAI,GAAG,IAAI,QAAQ,MAAM,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;AAAA,MAC1K;AAAA,IACF,OAAO;AACL,UAAI,GAAG,IAAI,GAAG,GAAG;AACf,kBAAU,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,MAAM,IAAI,GAAG,IAAI,GAAG,IAAI,MAAM,IAAI,KAAK,MAAM,GAAG,IAAI,MAAM,IAAI,KAAK,IAAI,IAAI,IAAI,GAAG,CAAC,IAAI,QAAQ,MAAM,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;AAAA,MAC1K,OAAO;AACL,yBAAgB,eAAU,IAAI,QAAQ,MAAM,MAA5B,mBAA+B;AAC/C,kBAAU,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,MAAM,IAAI,IAAI,IAAI,GAAG,IAAI,MAAM,IAAI,KAAK,MAAM,GAAG,IAAI,MAAM,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,QAAQ,MAAM,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;AAAA,MAC1K;AAAA,IACF;AAAA,EACF,OAAO;AACL,UAAM;AACN,WAAO;AACP,aAAS;AACT,aAAS;AACT,QAAI,QAAQ,MAAM;AAChB,UAAI,GAAG,IAAI,GAAG,GAAG;AACf,YAAI,QAAQ,SAAS,WAAW,SAAS,QAAQ,OAAO,QAAQ,QAAQ,CAAC,GAAG;AAC1E,oBAAU,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,IAAI,MAAM,IAAI,GAAG,IAAI,GAAG,IAAI,MAAM,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;AAAA,QAC1G,OAAO;AACL,oBAAU,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,IAAI,MAAM,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,MAAM,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;AAAA,QAC3G;AAAA,MACF;AACA,UAAI,GAAG,IAAI,GAAG,GAAG;AACf,cAAM;AACN,eAAO;AACP,iBAAS;AACT,iBAAS;AACT,YAAI,QAAQ,SAAS,WAAW,SAAS,QAAQ,OAAO,QAAQ,QAAQ,CAAC,GAAG;AAC1E,oBAAU,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,IAAI,MAAM,IAAI,IAAI,IAAI,GAAG,IAAI,MAAM,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;AAAA,QAC3G,OAAO;AACL,oBAAU,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,IAAI,MAAM,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,MAAM,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;AAAA,QAC1G;AAAA,MACF;AACA,UAAI,GAAG,MAAM,GAAG,GAAG;AACjB,kBAAU,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;AAAA,MAC/C;AAAA,IACF,WAAW,QAAQ,MAAM;AACvB,UAAI,GAAG,IAAI,GAAG,GAAG;AACf,YAAI,QAAQ,SAAS,WAAW,SAAS,QAAQ,OAAO,QAAQ,QAAQ,CAAC,GAAG;AAC1E,oBAAU,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,IAAI,MAAM,IAAI,IAAI,IAAI,GAAG,IAAI,MAAM,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;AAAA,QAC3G,OAAO;AACL,oBAAU,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,IAAI,MAAM,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,MAAM,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;AAAA,QAC1G;AAAA,MACF;AACA,UAAI,GAAG,IAAI,GAAG,GAAG;AACf,cAAM;AACN,eAAO;AACP,iBAAS;AACT,iBAAS;AACT,YAAI,QAAQ,SAAS,WAAW,SAAS,QAAQ,OAAO,QAAQ,QAAQ,CAAC,GAAG;AAC1E,oBAAU,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,IAAI,MAAM,IAAI,GAAG,IAAI,GAAG,IAAI,MAAM,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;AAAA,QAC1G,OAAO;AACL,oBAAU,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,IAAI,MAAM,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,MAAM,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;AAAA,QAC1G;AAAA,MACF;AACA,UAAI,GAAG,MAAM,GAAG,GAAG;AACjB,kBAAU,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;AAAA,MAC/C;AAAA,IACF,OAAO;AACL,UAAI,GAAG,IAAI,GAAG,GAAG;AACf,YAAI,QAAQ,SAAS,WAAW,SAAS,QAAQ,OAAO,QAAQ,QAAQ,CAAC,GAAG;AAC1E,oBAAU,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,IAAI,MAAM,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,MAAM,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;AAAA,QAC3G,OAAO;AACL,oBAAU,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,IAAI,MAAM,IAAI,GAAG,IAAI,GAAG,IAAI,MAAM,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;AAAA,QAC1G;AAAA,MACF;AACA,UAAI,GAAG,IAAI,GAAG,GAAG;AACf,YAAI,QAAQ,SAAS,WAAW,SAAS,QAAQ,OAAO,QAAQ,QAAQ,CAAC,GAAG;AAC1E,oBAAU,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,IAAI,MAAM,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,MAAM,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;AAAA,QAC1G,OAAO;AACL,oBAAU,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,IAAI,MAAM,IAAI,IAAI,IAAI,GAAG,IAAI,MAAM,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;AAAA,QAC3G;AAAA,MACF;AACA,UAAI,GAAG,MAAM,GAAG,GAAG;AACjB,kBAAU,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;AAAA,MAC/C;AAAA,IACF;AAAA,EACF;AACA,MAAI,YAAY,QAAQ;AACtB,UAAM,IAAI,MAAM,2BAA2B;AAAA,EAC7C;AACA,MAAI,OAAO,MAAM,EAAE,KAAK,KAAK,OAAO,EAAE,KAAK,SAAS,gBAAgB,gBAAgB,iBAAiB;AACvG,GAAG,WAAW;AACd,IAAI,aAA6B,OAAO,CAAC,KAAK,YAAY;AACxD,QAAM,UAAU,IAAI,OAAO,GAAG,EAAE,KAAK,SAAS,eAAe;AAC7D,GAAC,GAAG,QAAQ,KAAK,CAAC,EAAE,QAAQ,CAAC,QAAQ;AACnC,UAAM,UAAU,QAAQ,IAAI,GAAG;AAC/B,QAAI,QAAQ,WAAW,QAAQ,QAAQ,SAAS,GAAG;AACjD,cAAQ,QAAQ,QAAQ,CAAC,WAAW;AAClC,kBAAU,SAAS,QAAQ,IAAI,MAAM,GAAG,SAAS,OAAO;AAAA,MAC1D,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AACH,GAAG,YAAY;AACf,IAAI,eAA+B,OAAO,CAAC,KAAK,aAAa;AAC3D,QAAM,IAAI,IAAI,OAAO,GAAG;AACxB,WAAS,QAAQ,CAAC,SAAS,UAAU;AA3rCvC;AA4rCI,UAAM,sBAAsB,QAAQ;AACpC,UAAM,OAAM,eAAU,IAAI,QAAQ,IAAI,MAA1B,mBAA6B;AACzC,QAAI,QAAQ,QAAQ;AAClB,YAAM,IAAI,MAAM,iCAAiC,QAAQ,IAAI,EAAE;AAAA,IACjE;AACA,UAAM,OAAO,EAAE,OAAO,MAAM;AAC5B,SAAK,KAAK,MAAM,CAAC;AACjB,SAAK,KAAK,MAAM,GAAG;AACnB,SAAK,KAAK,MAAM,MAAM;AACtB,SAAK,KAAK,MAAM,GAAG;AACnB,SAAK,KAAK,SAAS,kBAAkB,mBAAmB;AACxD,QAAI,QAAQ,MAAM;AAChB,WAAK,KAAK,MAAM,UAAU;AAC1B,WAAK,KAAK,MAAM,GAAG;AACnB,WAAK,KAAK,MAAM,MAAM;AACtB,WAAK,KAAK,MAAM,GAAG;AAAA,IACrB,WAAW,QAAQ,MAAM;AACvB,WAAK,KAAK,MAAM,MAAM;AACtB,WAAK,KAAK,MAAM,GAAG;AACnB,WAAK,KAAK,MAAM,UAAU;AAC1B,WAAK,KAAK,MAAM,GAAG;AAAA,IACrB;AACA,UAAM,KAAK,GAAG;AACd,UAAM,OAAO,QAAQ;AACrB,UAAM,eAAe,SAAS,IAAI;AAClC,UAAM,MAAM,EAAE,OAAO,MAAM;AAC3B,UAAM,cAAc,EAAE,OAAO,GAAG,EAAE,KAAK,SAAS,aAAa;AAC7D,UAAM,QAAQ,YAAY,OAAO,GAAG,EAAE,KAAK,SAAS,uBAAuB,mBAAmB;AAC9F,UAAM,KAAK,EAAE,YAAY,YAAY;AACrC,UAAM,OAAO,aAAa,QAAQ;AAClC,QAAI,KAAK,SAAS,yBAAyB,mBAAmB,EAAE,KAAK,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,KAAK,KAAK,CAAC,KAAK,QAAQ,MAAK,qEAA0B,uBAAsB,OAAO,KAAK,EAAE,EAAE,KAAK,KAAK,CAAC,KAAK,SAAS,IAAI,CAAC,EAAE,KAAK,SAAS,KAAK,QAAQ,EAAE,EAAE,KAAK,UAAU,KAAK,SAAS,CAAC;AACtR,UAAM;AAAA,MACJ;AAAA,MACA,gBAAgB,CAAC,KAAK,QAAQ,OAAM,qEAA0B,uBAAsB,OAAO,KAAK,MAAM,QAAQ,MAAM,KAAK,SAAS,IAAI,KAAK;AAAA,IAC7I;AACA,QAAI,QAAQ,MAAM;AAChB,UAAI,KAAK,KAAK,MAAM,KAAK,QAAQ,IAAI,EAAE,EAAE,KAAK,KAAK,CAAC;AACpD,YAAM,KAAK,aAAa,gBAAgB,MAAM,KAAK,QAAQ,IAAI,KAAK,MAAM;AAAA,IAC5E,WAAW,QAAQ,MAAM;AACvB,UAAI,KAAK,KAAK,MAAM,KAAK,QAAQ,IAAI,EAAE,EAAE,KAAK,KAAK,MAAM;AACzD,YAAM,KAAK,aAAa,gBAAgB,MAAM,KAAK,QAAQ,IAAI,KAAK,OAAO,SAAS,GAAG;AAAA,IACzF,OAAO;AACL,UAAI,KAAK,aAAa,qBAAqB,MAAM,KAAK,SAAS,KAAK,GAAG;AAAA,IACzE;AAAA,EACF,CAAC;AACH,GAAG,cAAc;AACjB,IAAI,oBAAoC,OAAO,SAAS,MAAM,KAAK,OAAO,MAAM,mBAAmB;AACjG,YAAU,IAAI,MAAM,EAAE,KAAK,MAAM,CAAC;AAClC,SAAO,MAAM,oBAAoB,KAAK,MAAM,QAAQ,QAAQ,QAAQ,OAAO,KAAK,QAAQ,IAAI;AAC5F,SAAO;AACT,GAAG,mBAAmB;AACtB,IAAI,OAAuB,OAAO,SAAS,KAAK,IAAI,KAAK,SAAS;AAChE,SAAO;AACP,MAAI,MAAM,wBAAwB,MAAM,MAAM,OAAO,IAAI,GAAG;AAC5D,MAAI,CAAC,0BAA0B;AAC7B,UAAM,IAAI,MAAM,2BAA2B;AAAA,EAC7C;AACA,QAAM,oBAAoB,yBAAyB,qBAAqB;AACxE,QAAM,MAAM,QAAQ;AACpB,mBAAiB,IAAI,WAAW;AAChC,QAAM,WAAW,IAAI,sBAAsB;AAC3C,QAAM,IAAI,aAAa;AACvB,QAAM,WAAW,eAAO,QAAQ,EAAE,IAAI;AACtC,MAAI,MAAM;AACV,WAAS,QAAQ,CAAC,SAAS,UAAU;AA5vCvC;AA6vCI,UAAM,eAAe,SAAS,QAAQ,IAAI;AAC1C,UAAM,IAAI,SAAS,OAAO,GAAG;AAC7B,UAAM,cAAc,EAAE,OAAO,GAAG,EAAE,KAAK,SAAS,aAAa;AAC7D,UAAM,QAAQ,YAAY,OAAO,GAAG,EAAE,KAAK,SAAS,oBAAoB;AACxE,gBAAM,KAAK,MAAX,mBAAc,YAAY;AAC1B,UAAM,OAAO,aAAa,QAAQ;AAClC,UAAM,kBAAkB,QAAQ,MAAM,KAAK,OAAO,MAAM,iBAAiB;AACzE,UAAM,OAAO;AACb,gBAAY,OAAO;AACnB,MAAE,OAAO;AAAA,EACX,CAAC;AACD,cAAY,UAAU,gBAAgB,KAAK;AAC3C,MAAI,yBAAyB,cAAc;AACzC,iBAAa,UAAU,QAAQ;AAAA,EACjC;AACA,aAAW,UAAU,cAAc;AACnC,cAAY,UAAU,gBAAgB,IAAI;AAC1C,gBAAc;AAAA,IACZ;AAAA,IACA;AAAA,IACA,yBAAyB,kBAAkB;AAAA,IAC3C,IAAI,gBAAgB;AAAA,EACtB;AACA;AAAA,IACE;AAAA,IACA;AAAA,IACA,yBAAyB;AAAA,IACzB,yBAAyB;AAAA,EAC3B;AACF,GAAG,MAAM;AACT,IAAI,2BAA2B;AAAA,EAC7B;AACF;AACA,IAAI,QAAQ;AACV,QAAM,EAAE,IAAI,QAAQ,SAAS,IAAI;AACjC,WAAS,YAAY,MAAM;AACzB,OAAG,mBAAmB,MAAM;AAC1B,YAAM,WAAW,SAAS,MAAM;AAChC,aAAO,QAAQ,EAAE,YAAY;AAC7B,aAAO,SAAS,SAAS,CAAC,EAAE,SAAS,EAAE,KAAK,MAAM;AAAA,IACpD,CAAC;AAAA,EACH,CAAC;AACD,WAAS,kBAAkB,MAAM;AAC/B,UAAM,OAAO;AAAA,MACX,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,QAAwB,OAAO,MAAM,IAAI,QAAQ;AAAA,IACnD;AACA,OAAG,kDAAkD,MAAM;AACzD,YAAM;AACN,YAAM,MAAM,kBAAkB,QAAQ,GAAG,GAAG,MAAM,IAAI;AACtD,aAAO,GAAG,EAAE,KAAK,EAAE;AACnB,aAAO,UAAU,IAAI,MAAM,CAAC,EAAE,QAAQ,EAAE,KAAK,GAAG,OAAO,EAAE,CAAC;AAC1D,YAAM,UAAU,kBAAkB,WAAW,KAAK,GAAG,MAAM,IAAI;AAC/D,aAAO,OAAO,EAAE,KAAK,GAAG;AACxB,aAAO,UAAU,IAAI,SAAS,CAAC,EAAE,QAAQ,EAAE,KAAK,OAAO,EAAE,CAAC;AAAA,IAC5D,CAAC;AACD,OAAG,kDAAkD,MAAM;AACzD,YAAM;AACN,WAAK,QAAQ;AACb,YAAM,MAAM,kBAAkB,QAAQ,GAAG,GAAG,MAAM,IAAI;AACtD,aAAO,GAAG,EAAE,KAAK,YAAY;AAC7B,aAAO,UAAU,IAAI,MAAM,CAAC,EAAE,QAAQ,EAAE,KAAK,GAAG,OAAO,EAAE,CAAC;AAC1D,WAAK,QAAQ;AACb,YAAM,UAAU,kBAAkB,WAAW,KAAK,GAAG,MAAM,IAAI;AAC/D,aAAO,OAAO,EAAE,KAAK,YAAY;AACjC,aAAO,UAAU,IAAI,SAAS,CAAC,EAAE,QAAQ,EAAE,KAAK,OAAO,EAAE,CAAC;AAAA,IAC5D,CAAC;AAAA,EACH,CAAC;AACD,WAAS,kBAAkB,MAAM;AAC/B,UAAM,UAA0B,oBAAI,IAAI;AAAA,MACtC;AAAA,QACE;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,SAAS;AAAA,UACT,KAAK;AAAA,UACL,MAAM,WAAW;AAAA,UACjB,MAAM,CAAC;AAAA,UACP,SAAS,CAAC;AAAA,UACV,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,SAAS;AAAA,UACT,KAAK;AAAA,UACL,MAAM,WAAW;AAAA,UACjB,MAAM,CAAC;AAAA,UACP,SAAS,CAAC,MAAM;AAAA,UAChB,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,SAAS;AAAA,UACT,KAAK;AAAA,UACL,MAAM,WAAW;AAAA,UACjB,MAAM,CAAC;AAAA,UACP,SAAS,CAAC,GAAG;AAAA,UACb,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,SAAS;AAAA,UACT,KAAK;AAAA,UACL,MAAM,WAAW;AAAA,UACjB,MAAM,CAAC;AAAA,UACP,SAAS,CAAC,QAAQ,GAAG;AAAA,UACrB,QAAQ;AAAA,UACR,UAAU;AAAA,QACZ;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,SAAS;AAAA,UACT,KAAK;AAAA,UACL,MAAM,WAAW;AAAA,UACjB,MAAM,CAAC;AAAA,UACP,SAAS,CAAC,MAAM;AAAA,UAChB,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,SAAS;AAAA,UACT,KAAK;AAAA,UACL,MAAM,WAAW;AAAA,UACjB,MAAM,CAAC;AAAA,UACP,SAAS,CAAC,KAAK,GAAG;AAAA,UAClB,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,SAAS;AAAA,UACT,KAAK;AAAA,UACL,MAAM,WAAW;AAAA,UACjB,MAAM,CAAC;AAAA,UACP,SAAS,CAAC,WAAW;AAAA,UACrB,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,SAAS;AAAA,UACT,KAAK;AAAA,UACL,MAAM,WAAW;AAAA,UACjB,MAAM,CAAC;AAAA,UACP,SAAS,CAAC,KAAK,GAAG;AAAA,UAClB,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,IACF,CAAC;AACD,QAAI,MAAM;AACV,cAAU,IAAI,QAAQ,EAAE,KAAK,GAAG,OAAO,EAAE,CAAC;AAC1C,cAAU,IAAI,WAAW,EAAE,KAAK,cAAc,OAAO,EAAE,CAAC;AACxD,cAAU,IAAI,WAAW,EAAE,KAAK,cAAc,OAAO,EAAE,CAAC;AACxD,aAAS,MAAM,MAAM;AACnB,YAAM;AACN,YAAM;AACN,YAAM,2BAA2C,oBAAI,IAAI;AAAA,QACvD,CAAC,cAAc,EAAE,GAAG,GAAG,GAAG,IAAI,eAAe,GAAG,CAAC;AAAA,QACjD,CAAC,WAAW,EAAE,GAAG,cAAc,GAAG,IAAI,eAAe,GAAG,CAAC;AAAA,QACzD,CAAC,WAAW,EAAE,GAAG,cAAc,GAAG,KAAK,eAAe,IAAI,CAAC;AAAA,QAC3D,CAAC,WAAW,EAAE,GAAG,GAAG,GAAG,KAAK,eAAe,IAAI,CAAC;AAAA,QAChD,CAAC,WAAW,EAAE,GAAG,cAAc,GAAG,KAAK,eAAe,IAAI,CAAC;AAAA,QAC3D,CAAC,mBAAmB,EAAE,GAAG,cAAc,GAAG,KAAK,eAAe,IAAI,CAAC;AAAA,QACnE,CAAC,WAAW,EAAE,GAAG,cAAc,GAAG,KAAK,eAAe,IAAI,CAAC;AAAA,QAC3D,CAAC,mBAAmB,EAAE,GAAG,cAAc,GAAG,KAAK,eAAe,IAAI,CAAC;AAAA,MACrE,CAAC;AACD,cAAQ,QAAQ,CAAC,SAAS,QAAQ;AAChC,WAAG,+CAA+C,GAAG,IAAI,MAAM;AAC7D,gBAAM,WAAW,kBAAkB,SAAS,KAAK,KAAK;AACtD,iBAAO,QAAQ,EAAE,QAAQ,yBAAyB,IAAI,GAAG,CAAC;AAC1D,iBAAO;AAAA,QACT,CAAC;AAAA,MACH,CAAC;AAAA,IACH,CAAC;AACD,aAAS,MAAM,MAAM;AACnB,UAAI,OAAO;AACX,YAAM;AACN,YAAM,2BAA2C,oBAAI,IAAI;AAAA,QACvD,CAAC,cAAc,EAAE,GAAG,GAAG,GAAG,IAAI,eAAe,GAAG,CAAC;AAAA,QACjD,CAAC,WAAW,EAAE,GAAG,cAAc,GAAG,IAAI,eAAe,GAAG,CAAC;AAAA,QACzD,CAAC,WAAW,EAAE,GAAG,cAAc,GAAG,KAAK,eAAe,IAAI,CAAC;AAAA,QAC3D,CAAC,WAAW,EAAE,GAAG,GAAG,GAAG,KAAK,eAAe,IAAI,CAAC;AAAA,QAChD,CAAC,WAAW,EAAE,GAAG,cAAc,GAAG,KAAK,eAAe,IAAI,CAAC;AAAA,QAC3D,CAAC,mBAAmB,EAAE,GAAG,cAAc,GAAG,KAAK,eAAe,IAAI,CAAC;AAAA,QACnE,CAAC,WAAW,EAAE,GAAG,cAAc,GAAG,KAAK,eAAe,IAAI,CAAC;AAAA,QAC3D,CAAC,mBAAmB,EAAE,GAAG,cAAc,GAAG,KAAK,eAAe,IAAI,CAAC;AAAA,MACrE,CAAC;AACD,cAAQ,QAAQ,CAAC,SAAS,QAAQ;AAChC,WAAG,+CAA+C,GAAG,IAAI,MAAM;AAC7D,gBAAM,WAAW,kBAAkB,SAAS,MAAM,KAAK;AACvD,iBAAO,QAAQ,EAAE,QAAQ,yBAAyB,IAAI,GAAG,CAAC;AAC1D,kBAAQ;AAAA,QACV,CAAC;AAAA,MACH,CAAC;AAAA,IACH,CAAC;AACD,aAAS,sBAAsB,MAAM;AACnC,YAAM,0BAA0C,oBAAI,IAAI;AAAA,QACtD,CAAC,cAAc,eAAe;AAAA,QAC9B,CAAC,WAAW,eAAe;AAAA,QAC3B,CAAC,WAAW,eAAe;AAAA,QAC3B,CAAC,WAAW,cAAc;AAAA,QAC1B,CAAC,WAAW,eAAe;AAAA,QAC3B,CAAC,mBAAmB,oBAAoB;AAAA,QACxC,CAAC,WAAW,eAAe;AAAA,QAC3B,CAAC,mBAAmB,oBAAoB;AAAA,MAC1C,CAAC;AACD,cAAQ,QAAQ,CAAC,SAAS,QAAQ;AAChC,WAAG,iDAAiD,GAAG,IAAI,MAAM;AAC/D,gBAAM,YAAY,mBAAmB,OAAO;AAC5C,iBAAO,SAAS,EAAE,KAAK,wBAAwB,IAAI,GAAG,CAAC;AAAA,QACzD,CAAC;AAAA,MACH,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACD,WAAS,uCAAuC,MAAM;AACpD,UAAM,UAA0B,oBAAI,IAAI;AAAA,MACtC;AAAA,QACE;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,SAAS;AAAA,UACT,KAAK;AAAA,UACL,MAAM;AAAA,UACN,MAAM,CAAC;AAAA,UACP,SAAS,CAAC;AAAA,UACV,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,SAAS;AAAA,UACT,KAAK;AAAA,UACL,MAAM;AAAA,UACN,MAAM,CAAC;AAAA,UACP,SAAS,CAAC,WAAW;AAAA,UACrB,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,SAAS;AAAA,UACT,KAAK;AAAA,UACL,MAAM;AAAA,UACN,MAAM,CAAC;AAAA,UACP,SAAS,CAAC,WAAW;AAAA,UACrB,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,SAAS;AAAA,UACT,KAAK;AAAA,UACL,MAAM;AAAA,UACN,MAAM,CAAC;AAAA,UACP,SAAS,CAAC,WAAW;AAAA,UACrB,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,SAAS;AAAA,UACT,KAAK;AAAA,UACL,MAAM;AAAA,UACN,MAAM,CAAC;AAAA,UACP,SAAS,CAAC,WAAW;AAAA,UACrB,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,SAAS;AAAA,UACT,KAAK;AAAA,UACL,MAAM;AAAA,UACN,MAAM,CAAC;AAAA,UACP,SAAS,CAAC,WAAW;AAAA,UACrB,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,SAAS;AAAA,UACT,KAAK;AAAA,UACL,MAAM;AAAA,UACN,MAAM,CAAC;AAAA,UACP,SAAS,CAAC,WAAW;AAAA,UACrB,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,SAAS;AAAA,UACT,KAAK;AAAA,UACL,MAAM;AAAA,UACN,MAAM,CAAC;AAAA,UACP,SAAS,CAAC,WAAW;AAAA,UACrB,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,IACF,CAAC;AACD,UAAM,yBAAyC,oBAAI,IAAI;AAAA,MACrD,CAAC,aAAa,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAC7B,CAAC,aAAa,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAC7B,CAAC,aAAa,EAAE,GAAG,cAAc,GAAG,IAAI,CAAC;AAAA,MACzC,CAAC,aAAa,EAAE,GAAG,cAAc,GAAG,IAAI,CAAC;AAAA,MACzC,CAAC,aAAa,EAAE,GAAG,cAAc,GAAG,IAAI,CAAC;AAAA,MACzC,CAAC,aAAa,EAAE,GAAG,cAAc,GAAG,IAAI,CAAC;AAAA,MACzC,CAAC,aAAa,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC;AAAA,MAC9B,CAAC,aAAa,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC;AAAA,IAChC,CAAC;AACD,UAAM,sCAAsD,oBAAI,IAAI;AAAA,MAClE,CAAC,aAAa,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC;AAAA,MAC9B,CAAC,aAAa,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC;AAAA,MAC9B,CAAC,aAAa,EAAE,GAAG,cAAc,GAAG,IAAI,CAAC;AAAA,MACzC,CAAC,aAAa,EAAE,GAAG,cAAc,GAAG,GAAG,CAAC;AAAA,MACxC,CAAC,aAAa,EAAE,GAAG,cAAc,GAAG,IAAI,CAAC;AAAA,MACzC,CAAC,aAAa,EAAE,GAAG,cAAc,GAAG,GAAG,CAAC;AAAA,MACxC,CAAC,aAAa,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC;AAAA,MAC9B,CAAC,aAAa,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,IAC/B,CAAC;AACD,UAAM,gCAAgD,oBAAI,IAAI;AAAA,MAC5D,CAAC,aAAa,EAAE;AAAA,MAChB,CAAC,aAAa,EAAE;AAAA,MAChB,CAAC,aAAa,GAAG;AAAA,MACjB,CAAC,aAAa,GAAG;AAAA,MACjB,CAAC,aAAa,GAAG;AAAA,MACjB,CAAC,aAAa,GAAG;AAAA,MACjB,CAAC,aAAa,GAAG;AAAA,MACjB,CAAC,aAAa,GAAG;AAAA,IACnB,CAAC;AACD,UAAM,aAAa,CAAC,GAAG,uBAAuB,KAAK,CAAC;AACpD,OAAG,+DAA+D,MAAM;AACtE,YAAM;AACN,UAAI,SAAS;AACb,gBAAU,MAAM;AAChB,gBAAU,MAAM;AAChB,gBAAU,IAAI,QAAQ,EAAE,KAAK,GAAG,OAAO,EAAE,CAAC;AAC1C,gBAAU,IAAI,WAAW,EAAE,KAAK,cAAc,OAAO,EAAE,CAAC;AACxD,gBAAU,IAAI,WAAW,EAAE,KAAK,cAAc,OAAO,EAAE,CAAC;AACxD,+BAAyB,kBAAkB;AAC3C,cAAQ,QAAQ,CAAC,SAAS,QAAQ;AAChC,YAAI,QAAQ,QAAQ,SAAS,GAAG;AAC9B,mBAAS,wBAAwB,OAAO;AAAA,QAC1C;AACA,cAAM,WAAW,kBAAkB,SAAS,MAAM;AAClD,eAAO,QAAQ,EAAE,QAAQ,uBAAuB,IAAI,GAAG,CAAC;AACxD,eAAO,MAAM,EAAE,QAAQ,8BAA8B,IAAI,GAAG,CAAC;AAAA,MAC/D,CAAC;AAAA,IACH,CAAC;AACD,OAAG,iEAAiE,MAAM;AACxE,gBAAU,MAAM;AAChB,gBAAU,MAAM;AAChB,YAAM;AACN,YAAM,SAAS;AACf,gBAAU,MAAM;AAChB,gBAAU,MAAM;AAChB,gBAAU,IAAI,QAAQ,EAAE,KAAK,GAAG,OAAO,EAAE,CAAC;AAC1C,gBAAU,IAAI,WAAW,EAAE,KAAK,cAAc,OAAO,EAAE,CAAC;AACxD,gBAAU,IAAI,WAAW,EAAE,KAAK,cAAc,OAAO,EAAE,CAAC;AACxD,uBAAiB,YAAY,SAAS,MAAM;AAC5C,iBAAW,QAAQ,CAAC,YAAY;AAC9B,cAAM,WAAW,UAAU,IAAI,OAAO;AACtC,eAAO,QAAQ,EAAE,QAAQ,oCAAoC,IAAI,OAAO,CAAC;AAAA,MAC3E,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACD,2BAAyB,kBAAkB;AAC3C,KAAG,OAAO,MAAM;AACd,cAAU,IAAI,WAAW,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;AACvC,cAAU,IAAI,WAAW,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;AACvC,cAAU,IAAI,WAAW,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;AACvC,UAAM;AACN,UAAM,UAAU,CAAC,WAAW,WAAW,SAAS;AAChD,UAAM,gBAAgB,kBAAkB,OAAO;AAC/C,WAAO,aAAa,EAAE,KAAK,SAAS;AACpC,cAAU,MAAM;AAAA,EAClB,CAAC;AACH;AAGA,IAAI,YAA4B,OAAO,CAAC,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAShD,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE;AAAA,EAC3B,CAAC,MAAM;AAAA,uBACc,CAAC,YAAY,QAAQ,mBAAmB,CAAC,CAAC;AAAA,iBAChD,CAAC,cAAc,QAAQ,QAAQ,CAAC,CAAC,WAAW,QAAQ,QAAQ,CAAC,CAAC;AAAA,2BACpD,CAAC,cAAc,QAAQ,WAAW,CAAC,CAAC,WAAW,QAAQ,WAAW,CAAC,CAAC;AAAA,gBAC/E,CAAC,aAAa,QAAQ,QAAQ,CAAC,CAAC;AAAA,gBAChC,CAAC,cAAc,QAAQ,QAAQ,CAAC,CAAC;AAAA;AAEjD,EAAE,KAAK,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA,cAIE,QAAQ,SAAS;AAAA;AAAA;AAAA,+BAGA,QAAQ,mBAAmB,WAAW,QAAQ,gBAAgB;AAAA,mCAC1D,QAAQ,mBAAmB,WAAW,QAAQ,qBAAqB;AAAA,4BAC1E,QAAQ,gBAAgB,WAAW,QAAQ,aAAa;AAAA,2BACzD,QAAQ,kBAAkB,aAAa,QAAQ,cAAc;AAAA,sBAClE,QAAQ,SAAS;AAAA;AAAA;AAAA,cAGzB,QAAQ,YAAY;AAAA,YACtB,QAAQ,YAAY;AAAA;AAAA;AAAA,cAGlB,QAAQ,YAAY;AAAA,YACtB,QAAQ,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAMlB,QAAQ,YAAY;AAAA,YACtB,QAAQ,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAOpB,QAAQ,SAAS;AAAA;AAAA,GAE1B,WAAW;AACd,IAAI,iBAAiB;AAGrB,IAAI,UAAU;AAAA,EACZ;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,QAAQ;AACV;",
  "names": []
}
