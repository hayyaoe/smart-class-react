{
  "version": 3,
  "sources": ["../../@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-FF7BQXOH.mjs"],
  "sourcesContent": ["import {\r\n  AbstractMermaidTokenBuilder,\r\n  AbstractMermaidValueConverter,\r\n  ArchitectureGeneratedModule,\r\n  MermaidGeneratedSharedModule,\r\n  __name\r\n} from \"./chunk-Y27MQZ3U.mjs\";\r\n\r\n// src/language/architecture/module.ts\r\nimport {\r\n  EmptyFileSystem,\r\n  createDefaultCoreModule,\r\n  createDefaultSharedCoreModule,\r\n  inject\r\n} from \"langium\";\r\n\r\n// src/language/architecture/tokenBuilder.ts\r\nvar ArchitectureTokenBuilder = class extends AbstractMermaidTokenBuilder {\r\n  static {\r\n    __name(this, \"ArchitectureTokenBuilder\");\r\n  }\r\n  constructor() {\r\n    super([\"architecture\"]);\r\n  }\r\n};\r\n\r\n// src/language/architecture/valueConverter.ts\r\nvar ArchitectureValueConverter = class extends AbstractMermaidValueConverter {\r\n  static {\r\n    __name(this, \"ArchitectureValueConverter\");\r\n  }\r\n  runCustomConverter(rule, input, _cstNode) {\r\n    if (rule.name === \"ARCH_ICON\") {\r\n      return input.replace(/[()]/g, \"\").trim();\r\n    } else if (rule.name === \"ARCH_TEXT_ICON\") {\r\n      return input.replace(/[\"()]/g, \"\");\r\n    } else if (rule.name === \"ARCH_TITLE\") {\r\n      return input.replace(/[[\\]]/g, \"\").trim();\r\n    }\r\n    return void 0;\r\n  }\r\n};\r\n\r\n// src/language/architecture/module.ts\r\nvar ArchitectureModule = {\r\n  parser: {\r\n    TokenBuilder: /* @__PURE__ */ __name(() => new ArchitectureTokenBuilder(), \"TokenBuilder\"),\r\n    ValueConverter: /* @__PURE__ */ __name(() => new ArchitectureValueConverter(), \"ValueConverter\")\r\n  }\r\n};\r\nfunction createArchitectureServices(context = EmptyFileSystem) {\r\n  const shared = inject(\r\n    createDefaultSharedCoreModule(context),\r\n    MermaidGeneratedSharedModule\r\n  );\r\n  const Architecture = inject(\r\n    createDefaultCoreModule({ shared }),\r\n    ArchitectureGeneratedModule,\r\n    ArchitectureModule\r\n  );\r\n  shared.ServiceRegistry.register(Architecture);\r\n  return { shared, Architecture };\r\n}\r\n__name(createArchitectureServices, \"createArchitectureServices\");\r\n\r\nexport {\r\n  ArchitectureModule,\r\n  createArchitectureServices\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAiBA,IAAI,4BAA2B,mBAAc,4BAA4B;AAAA,EAIvE,cAAc;AACZ,UAAM,CAAC,cAAc,CAAC;AAAA,EACxB;AACF,GALI,OAAO,IAAM,0BAA0B,GAFZ;AAjB/B,IAAAA;AA2BA,IAAI,8BAA6BA,MAAA,cAAc,8BAA8B;AAAA,EAI3E,mBAAmB,MAAM,OAAO,UAAU;AACxC,QAAI,KAAK,SAAS,aAAa;AAC7B,aAAO,MAAM,QAAQ,SAAS,EAAE,EAAE,KAAK;AAAA,IACzC,WAAW,KAAK,SAAS,kBAAkB;AACzC,aAAO,MAAM,QAAQ,UAAU,EAAE;AAAA,IACnC,WAAW,KAAK,SAAS,cAAc;AACrC,aAAO,MAAM,QAAQ,UAAU,EAAE,EAAE,KAAK;AAAA,IAC1C;AACA,WAAO;AAAA,EACT;AACF,GAZI,OAAOA,KAAM,4BAA4B,GAFZA;AAiBjC,IAAI,qBAAqB;AAAA,EACvB,QAAQ;AAAA,IACN,cAA8B,OAAO,MAAM,IAAI,yBAAyB,GAAG,cAAc;AAAA,IACzF,gBAAgC,OAAO,MAAM,IAAI,2BAA2B,GAAG,gBAAgB;AAAA,EACjG;AACF;AACA,SAAS,2BAA2B,UAAU,iBAAiB;AAC7D,QAAM,SAAS;AAAA,IACb,8BAA8B,OAAO;AAAA,IACrC;AAAA,EACF;AACA,QAAM,eAAe;AAAA,IACnB,wBAAwB,EAAE,OAAO,CAAC;AAAA,IAClC;AAAA,IACA;AAAA,EACF;AACA,SAAO,gBAAgB,SAAS,YAAY;AAC5C,SAAO,EAAE,QAAQ,aAAa;AAChC;AACA,OAAO,4BAA4B,4BAA4B;",
  "names": ["_a"]
}
