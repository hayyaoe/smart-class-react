{
  "version": 3,
  "sources": ["../../mermaid/dist/chunks/mermaid.core/blockDiagram-TCMKQVZ6.mjs"],
  "sourcesContent": ["import {\r\n  insertEdge,\r\n  insertEdgeLabel,\r\n  insertNode,\r\n  markers_default,\r\n  positionEdgeLabel,\r\n  positionNode\r\n} from \"./chunk-REEJFE46.mjs\";\r\nimport \"./chunk-I3FGKTZ5.mjs\";\r\nimport \"./chunk-U7L4IQIU.mjs\";\r\nimport {\r\n  getStylesFromArray\r\n} from \"./chunk-TLUHKHBO.mjs\";\r\nimport {\r\n  __name,\r\n  clear,\r\n  common_default,\r\n  configureSvgSize,\r\n  getConfig,\r\n  getConfig2,\r\n  log\r\n} from \"./chunk-S24QXQKS.mjs\";\r\n\r\n// src/diagrams/block/parser/block.jison\r\nvar parser = function() {\r\n  var o = /* @__PURE__ */ __name(function(k, v, o2, l) {\r\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v) ;\r\n    return o2;\r\n  }, \"o\"), $V0 = [1, 7], $V1 = [1, 13], $V2 = [1, 14], $V3 = [1, 15], $V4 = [1, 19], $V5 = [1, 16], $V6 = [1, 17], $V7 = [1, 18], $V8 = [8, 30], $V9 = [8, 21, 28, 29, 30, 31, 32, 40, 44, 47], $Va = [1, 23], $Vb = [1, 24], $Vc = [8, 15, 16, 21, 28, 29, 30, 31, 32, 40, 44, 47], $Vd = [8, 15, 16, 21, 27, 28, 29, 30, 31, 32, 40, 44, 47], $Ve = [1, 49];\r\n  var parser2 = {\r\n    trace: /* @__PURE__ */ __name(function trace() {\r\n    }, \"trace\"),\r\n    yy: {},\r\n    symbols_: { \"error\": 2, \"spaceLines\": 3, \"SPACELINE\": 4, \"NL\": 5, \"separator\": 6, \"SPACE\": 7, \"EOF\": 8, \"start\": 9, \"BLOCK_DIAGRAM_KEY\": 10, \"document\": 11, \"stop\": 12, \"statement\": 13, \"link\": 14, \"LINK\": 15, \"START_LINK\": 16, \"LINK_LABEL\": 17, \"STR\": 18, \"nodeStatement\": 19, \"columnsStatement\": 20, \"SPACE_BLOCK\": 21, \"blockStatement\": 22, \"classDefStatement\": 23, \"cssClassStatement\": 24, \"styleStatement\": 25, \"node\": 26, \"SIZE\": 27, \"COLUMNS\": 28, \"id-block\": 29, \"end\": 30, \"block\": 31, \"NODE_ID\": 32, \"nodeShapeNLabel\": 33, \"dirList\": 34, \"DIR\": 35, \"NODE_DSTART\": 36, \"NODE_DEND\": 37, \"BLOCK_ARROW_START\": 38, \"BLOCK_ARROW_END\": 39, \"classDef\": 40, \"CLASSDEF_ID\": 41, \"CLASSDEF_STYLEOPTS\": 42, \"DEFAULT\": 43, \"class\": 44, \"CLASSENTITY_IDS\": 45, \"STYLECLASS\": 46, \"style\": 47, \"STYLE_ENTITY_IDS\": 48, \"STYLE_DEFINITION_DATA\": 49, \"$accept\": 0, \"$end\": 1 },\r\n    terminals_: { 2: \"error\", 4: \"SPACELINE\", 5: \"NL\", 7: \"SPACE\", 8: \"EOF\", 10: \"BLOCK_DIAGRAM_KEY\", 15: \"LINK\", 16: \"START_LINK\", 17: \"LINK_LABEL\", 18: \"STR\", 21: \"SPACE_BLOCK\", 27: \"SIZE\", 28: \"COLUMNS\", 29: \"id-block\", 30: \"end\", 31: \"block\", 32: \"NODE_ID\", 35: \"DIR\", 36: \"NODE_DSTART\", 37: \"NODE_DEND\", 38: \"BLOCK_ARROW_START\", 39: \"BLOCK_ARROW_END\", 40: \"classDef\", 41: \"CLASSDEF_ID\", 42: \"CLASSDEF_STYLEOPTS\", 43: \"DEFAULT\", 44: \"class\", 45: \"CLASSENTITY_IDS\", 46: \"STYLECLASS\", 47: \"style\", 48: \"STYLE_ENTITY_IDS\", 49: \"STYLE_DEFINITION_DATA\" },\r\n    productions_: [0, [3, 1], [3, 2], [3, 2], [6, 1], [6, 1], [6, 1], [9, 3], [12, 1], [12, 1], [12, 2], [12, 2], [11, 1], [11, 2], [14, 1], [14, 4], [13, 1], [13, 1], [13, 1], [13, 1], [13, 1], [13, 1], [13, 1], [19, 3], [19, 2], [19, 1], [20, 1], [22, 4], [22, 3], [26, 1], [26, 2], [34, 1], [34, 2], [33, 3], [33, 4], [23, 3], [23, 3], [24, 3], [25, 3]],\r\n    performAction: /* @__PURE__ */ __name(function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\r\n      var $0 = $$.length - 1;\r\n      switch (yystate) {\r\n        case 4:\r\n          yy.getLogger().debug(\"Rule: separator (NL) \");\r\n          break;\r\n        case 5:\r\n          yy.getLogger().debug(\"Rule: separator (Space) \");\r\n          break;\r\n        case 6:\r\n          yy.getLogger().debug(\"Rule: separator (EOF) \");\r\n          break;\r\n        case 7:\r\n          yy.getLogger().debug(\"Rule: hierarchy: \", $$[$0 - 1]);\r\n          yy.setHierarchy($$[$0 - 1]);\r\n          break;\r\n        case 8:\r\n          yy.getLogger().debug(\"Stop NL \");\r\n          break;\r\n        case 9:\r\n          yy.getLogger().debug(\"Stop EOF \");\r\n          break;\r\n        case 10:\r\n          yy.getLogger().debug(\"Stop NL2 \");\r\n          break;\r\n        case 11:\r\n          yy.getLogger().debug(\"Stop EOF2 \");\r\n          break;\r\n        case 12:\r\n          yy.getLogger().debug(\"Rule: statement: \", $$[$0]);\r\n          typeof $$[$0].length === \"number\" ? this.$ = $$[$0] : this.$ = [$$[$0]];\r\n          break;\r\n        case 13:\r\n          yy.getLogger().debug(\"Rule: statement #2: \", $$[$0 - 1]);\r\n          this.$ = [$$[$0 - 1]].concat($$[$0]);\r\n          break;\r\n        case 14:\r\n          yy.getLogger().debug(\"Rule: link: \", $$[$0], yytext);\r\n          this.$ = { edgeTypeStr: $$[$0], label: \"\" };\r\n          break;\r\n        case 15:\r\n          yy.getLogger().debug(\"Rule: LABEL link: \", $$[$0 - 3], $$[$0 - 1], $$[$0]);\r\n          this.$ = { edgeTypeStr: $$[$0], label: $$[$0 - 1] };\r\n          break;\r\n        case 18:\r\n          const num = parseInt($$[$0]);\r\n          const spaceId = yy.generateId();\r\n          this.$ = { id: spaceId, type: \"space\", label: \"\", width: num, children: [] };\r\n          break;\r\n        case 23:\r\n          yy.getLogger().debug(\"Rule: (nodeStatement link node) \", $$[$0 - 2], $$[$0 - 1], $$[$0], \" typestr: \", $$[$0 - 1].edgeTypeStr);\r\n          const edgeData = yy.edgeStrToEdgeData($$[$0 - 1].edgeTypeStr);\r\n          this.$ = [\r\n            { id: $$[$0 - 2].id, label: $$[$0 - 2].label, type: $$[$0 - 2].type, directions: $$[$0 - 2].directions },\r\n            { id: $$[$0 - 2].id + \"-\" + $$[$0].id, start: $$[$0 - 2].id, end: $$[$0].id, label: $$[$0 - 1].label, type: \"edge\", directions: $$[$0].directions, arrowTypeEnd: edgeData, arrowTypeStart: \"arrow_open\" },\r\n            { id: $$[$0].id, label: $$[$0].label, type: yy.typeStr2Type($$[$0].typeStr), directions: $$[$0].directions }\r\n          ];\r\n          break;\r\n        case 24:\r\n          yy.getLogger().debug(\"Rule: nodeStatement (abc88 node size) \", $$[$0 - 1], $$[$0]);\r\n          this.$ = { id: $$[$0 - 1].id, label: $$[$0 - 1].label, type: yy.typeStr2Type($$[$0 - 1].typeStr), directions: $$[$0 - 1].directions, widthInColumns: parseInt($$[$0], 10) };\r\n          break;\r\n        case 25:\r\n          yy.getLogger().debug(\"Rule: nodeStatement (node) \", $$[$0]);\r\n          this.$ = { id: $$[$0].id, label: $$[$0].label, type: yy.typeStr2Type($$[$0].typeStr), directions: $$[$0].directions, widthInColumns: 1 };\r\n          break;\r\n        case 26:\r\n          yy.getLogger().debug(\"APA123\", this ? this : \"na\");\r\n          yy.getLogger().debug(\"COLUMNS: \", $$[$0]);\r\n          this.$ = { type: \"column-setting\", columns: $$[$0] === \"auto\" ? -1 : parseInt($$[$0]) };\r\n          break;\r\n        case 27:\r\n          yy.getLogger().debug(\"Rule: id-block statement : \", $$[$0 - 2], $$[$0 - 1]);\r\n          const id2 = yy.generateId();\r\n          this.$ = { ...$$[$0 - 2], type: \"composite\", children: $$[$0 - 1] };\r\n          break;\r\n        case 28:\r\n          yy.getLogger().debug(\"Rule: blockStatement : \", $$[$0 - 2], $$[$0 - 1], $$[$0]);\r\n          const id = yy.generateId();\r\n          this.$ = { id, type: \"composite\", label: \"\", children: $$[$0 - 1] };\r\n          break;\r\n        case 29:\r\n          yy.getLogger().debug(\"Rule: node (NODE_ID separator): \", $$[$0]);\r\n          this.$ = { id: $$[$0] };\r\n          break;\r\n        case 30:\r\n          yy.getLogger().debug(\"Rule: node (NODE_ID nodeShapeNLabel separator): \", $$[$0 - 1], $$[$0]);\r\n          this.$ = { id: $$[$0 - 1], label: $$[$0].label, typeStr: $$[$0].typeStr, directions: $$[$0].directions };\r\n          break;\r\n        case 31:\r\n          yy.getLogger().debug(\"Rule: dirList: \", $$[$0]);\r\n          this.$ = [$$[$0]];\r\n          break;\r\n        case 32:\r\n          yy.getLogger().debug(\"Rule: dirList: \", $$[$0 - 1], $$[$0]);\r\n          this.$ = [$$[$0 - 1]].concat($$[$0]);\r\n          break;\r\n        case 33:\r\n          yy.getLogger().debug(\"Rule: nodeShapeNLabel: \", $$[$0 - 2], $$[$0 - 1], $$[$0]);\r\n          this.$ = { typeStr: $$[$0 - 2] + $$[$0], label: $$[$0 - 1] };\r\n          break;\r\n        case 34:\r\n          yy.getLogger().debug(\"Rule: BLOCK_ARROW nodeShapeNLabel: \", $$[$0 - 3], $$[$0 - 2], \" #3:\", $$[$0 - 1], $$[$0]);\r\n          this.$ = { typeStr: $$[$0 - 3] + $$[$0], label: $$[$0 - 2], directions: $$[$0 - 1] };\r\n          break;\r\n        case 35:\r\n        case 36:\r\n          this.$ = { type: \"classDef\", id: $$[$0 - 1].trim(), css: $$[$0].trim() };\r\n          break;\r\n        case 37:\r\n          this.$ = { type: \"applyClass\", id: $$[$0 - 1].trim(), styleClass: $$[$0].trim() };\r\n          break;\r\n        case 38:\r\n          this.$ = { type: \"applyStyles\", id: $$[$0 - 1].trim(), stylesStr: $$[$0].trim() };\r\n          break;\r\n      }\r\n    }, \"anonymous\"),\r\n    table: [{ 9: 1, 10: [1, 2] }, { 1: [3] }, { 11: 3, 13: 4, 19: 5, 20: 6, 21: $V0, 22: 8, 23: 9, 24: 10, 25: 11, 26: 12, 28: $V1, 29: $V2, 31: $V3, 32: $V4, 40: $V5, 44: $V6, 47: $V7 }, { 8: [1, 20] }, o($V8, [2, 12], { 13: 4, 19: 5, 20: 6, 22: 8, 23: 9, 24: 10, 25: 11, 26: 12, 11: 21, 21: $V0, 28: $V1, 29: $V2, 31: $V3, 32: $V4, 40: $V5, 44: $V6, 47: $V7 }), o($V9, [2, 16], { 14: 22, 15: $Va, 16: $Vb }), o($V9, [2, 17]), o($V9, [2, 18]), o($V9, [2, 19]), o($V9, [2, 20]), o($V9, [2, 21]), o($V9, [2, 22]), o($Vc, [2, 25], { 27: [1, 25] }), o($V9, [2, 26]), { 19: 26, 26: 12, 32: $V4 }, { 11: 27, 13: 4, 19: 5, 20: 6, 21: $V0, 22: 8, 23: 9, 24: 10, 25: 11, 26: 12, 28: $V1, 29: $V2, 31: $V3, 32: $V4, 40: $V5, 44: $V6, 47: $V7 }, { 41: [1, 28], 43: [1, 29] }, { 45: [1, 30] }, { 48: [1, 31] }, o($Vd, [2, 29], { 33: 32, 36: [1, 33], 38: [1, 34] }), { 1: [2, 7] }, o($V8, [2, 13]), { 26: 35, 32: $V4 }, { 32: [2, 14] }, { 17: [1, 36] }, o($Vc, [2, 24]), { 11: 37, 13: 4, 14: 22, 15: $Va, 16: $Vb, 19: 5, 20: 6, 21: $V0, 22: 8, 23: 9, 24: 10, 25: 11, 26: 12, 28: $V1, 29: $V2, 31: $V3, 32: $V4, 40: $V5, 44: $V6, 47: $V7 }, { 30: [1, 38] }, { 42: [1, 39] }, { 42: [1, 40] }, { 46: [1, 41] }, { 49: [1, 42] }, o($Vd, [2, 30]), { 18: [1, 43] }, { 18: [1, 44] }, o($Vc, [2, 23]), { 18: [1, 45] }, { 30: [1, 46] }, o($V9, [2, 28]), o($V9, [2, 35]), o($V9, [2, 36]), o($V9, [2, 37]), o($V9, [2, 38]), { 37: [1, 47] }, { 34: 48, 35: $Ve }, { 15: [1, 50] }, o($V9, [2, 27]), o($Vd, [2, 33]), { 39: [1, 51] }, { 34: 52, 35: $Ve, 39: [2, 31] }, { 32: [2, 15] }, o($Vd, [2, 34]), { 39: [2, 32] }],\r\n    defaultActions: { 20: [2, 7], 23: [2, 14], 50: [2, 15], 52: [2, 32] },\r\n    parseError: /* @__PURE__ */ __name(function parseError(str, hash) {\r\n      if (hash.recoverable) {\r\n        this.trace(str);\r\n      } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n      }\r\n    }, \"parseError\"),\r\n    parse: /* @__PURE__ */ __name(function parse(input) {\r\n      var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n      var args = lstack.slice.call(arguments, 1);\r\n      var lexer2 = Object.create(this.lexer);\r\n      var sharedState = { yy: {} };\r\n      for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n          sharedState.yy[k] = this.yy[k];\r\n        }\r\n      }\r\n      lexer2.setInput(input, sharedState.yy);\r\n      sharedState.yy.lexer = lexer2;\r\n      sharedState.yy.parser = this;\r\n      if (typeof lexer2.yylloc == \"undefined\") {\r\n        lexer2.yylloc = {};\r\n      }\r\n      var yyloc = lexer2.yylloc;\r\n      lstack.push(yyloc);\r\n      var ranges = lexer2.options && lexer2.options.ranges;\r\n      if (typeof sharedState.yy.parseError === \"function\") {\r\n        this.parseError = sharedState.yy.parseError;\r\n      } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n      }\r\n      function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n      }\r\n      __name(popStack, \"popStack\");\r\n      function lex() {\r\n        var token;\r\n        token = tstack.pop() || lexer2.lex() || EOF;\r\n        if (typeof token !== \"number\") {\r\n          if (token instanceof Array) {\r\n            tstack = token;\r\n            token = tstack.pop();\r\n          }\r\n          token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n      }\r\n      __name(lex, \"lex\");\r\n      var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n      while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n          action = this.defaultActions[state];\r\n        } else {\r\n          if (symbol === null || typeof symbol == \"undefined\") {\r\n            symbol = lex();\r\n          }\r\n          action = table[state] && table[state][symbol];\r\n        }\r\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\r\n          var errStr = \"\";\r\n          expected = [];\r\n          for (p in table[state]) {\r\n            if (this.terminals_[p] && p > TERROR) {\r\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\r\n            }\r\n          }\r\n          if (lexer2.showPosition) {\r\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\r\n          } else {\r\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\r\n          }\r\n          this.parseError(errStr, {\r\n            text: lexer2.match,\r\n            token: this.terminals_[symbol] || symbol,\r\n            line: lexer2.yylineno,\r\n            loc: yyloc,\r\n            expected\r\n          });\r\n        }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\r\n        }\r\n        switch (action[0]) {\r\n          case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer2.yytext);\r\n            lstack.push(lexer2.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n              yyleng = lexer2.yyleng;\r\n              yytext = lexer2.yytext;\r\n              yylineno = lexer2.yylineno;\r\n              yyloc = lexer2.yylloc;\r\n              if (recovering > 0) {\r\n                recovering--;\r\n              }\r\n            } else {\r\n              symbol = preErrorSymbol;\r\n              preErrorSymbol = null;\r\n            }\r\n            break;\r\n          case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n              first_line: lstack[lstack.length - (len || 1)].first_line,\r\n              last_line: lstack[lstack.length - 1].last_line,\r\n              first_column: lstack[lstack.length - (len || 1)].first_column,\r\n              last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n              yyval._$.range = [\r\n                lstack[lstack.length - (len || 1)].range[0],\r\n                lstack[lstack.length - 1].range[1]\r\n              ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n              yytext,\r\n              yyleng,\r\n              yylineno,\r\n              sharedState.yy,\r\n              action[1],\r\n              vstack,\r\n              lstack\r\n            ].concat(args));\r\n            if (typeof r !== \"undefined\") {\r\n              return r;\r\n            }\r\n            if (len) {\r\n              stack = stack.slice(0, -1 * len * 2);\r\n              vstack = vstack.slice(0, -1 * len);\r\n              lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n          case 3:\r\n            return true;\r\n        }\r\n      }\r\n      return true;\r\n    }, \"parse\")\r\n  };\r\n  var lexer = /* @__PURE__ */ function() {\r\n    var lexer2 = {\r\n      EOF: 1,\r\n      parseError: /* @__PURE__ */ __name(function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n          this.yy.parser.parseError(str, hash);\r\n        } else {\r\n          throw new Error(str);\r\n        }\r\n      }, \"parseError\"),\r\n      // resets the lexer, sets new input\r\n      setInput: /* @__PURE__ */ __name(function(input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = \"\";\r\n        this.conditionStack = [\"INITIAL\"];\r\n        this.yylloc = {\r\n          first_line: 1,\r\n          first_column: 0,\r\n          last_line: 1,\r\n          last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [0, 0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n      }, \"setInput\"),\r\n      // consumes and returns one char from the input\r\n      input: /* @__PURE__ */ __name(function() {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n          this.yylineno++;\r\n          this.yylloc.last_line++;\r\n        } else {\r\n          this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n          this.yylloc.range[1]++;\r\n        }\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n      }, \"input\"),\r\n      // unshifts one char (or a string) into the input\r\n      unput: /* @__PURE__ */ __name(function(ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n        if (lines.length - 1) {\r\n          this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n        this.yylloc = {\r\n          first_line: this.yylloc.first_line,\r\n          last_line: this.yylineno + 1,\r\n          first_column: this.yylloc.first_column,\r\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\r\n        };\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n      }, \"unput\"),\r\n      // When called from action, caches matched text and appends it on next action\r\n      more: /* @__PURE__ */ __name(function() {\r\n        this._more = true;\r\n        return this;\r\n      }, \"more\"),\r\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n      reject: /* @__PURE__ */ __name(function() {\r\n        if (this.options.backtrack_lexer) {\r\n          this._backtrack = true;\r\n        } else {\r\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\r\n            text: \"\",\r\n            token: null,\r\n            line: this.yylineno\r\n          });\r\n        }\r\n        return this;\r\n      }, \"reject\"),\r\n      // retain first n characters of the match\r\n      less: /* @__PURE__ */ __name(function(n) {\r\n        this.unput(this.match.slice(n));\r\n      }, \"less\"),\r\n      // displays already matched input, i.e. for error messages\r\n      pastInput: /* @__PURE__ */ __name(function() {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\r\n      }, \"pastInput\"),\r\n      // displays upcoming input, i.e. for error messages\r\n      upcomingInput: /* @__PURE__ */ __name(function() {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n          next += this._input.substr(0, 20 - next.length);\r\n        }\r\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\r\n      }, \"upcomingInput\"),\r\n      // displays the character position where the lexing error occurred, i.e. for error messages\r\n      showPosition: /* @__PURE__ */ __name(function() {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n      }, \"showPosition\"),\r\n      // test the lexed token: return FALSE when not a match, otherwise return token\r\n      test_match: /* @__PURE__ */ __name(function(match, indexed_rule) {\r\n        var token, lines, backup;\r\n        if (this.options.backtrack_lexer) {\r\n          backup = {\r\n            yylineno: this.yylineno,\r\n            yylloc: {\r\n              first_line: this.yylloc.first_line,\r\n              last_line: this.last_line,\r\n              first_column: this.yylloc.first_column,\r\n              last_column: this.yylloc.last_column\r\n            },\r\n            yytext: this.yytext,\r\n            match: this.match,\r\n            matches: this.matches,\r\n            matched: this.matched,\r\n            yyleng: this.yyleng,\r\n            offset: this.offset,\r\n            _more: this._more,\r\n            _input: this._input,\r\n            yy: this.yy,\r\n            conditionStack: this.conditionStack.slice(0),\r\n            done: this.done\r\n          };\r\n          if (this.options.ranges) {\r\n            backup.yylloc.range = this.yylloc.range.slice(0);\r\n          }\r\n        }\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n          this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n          first_line: this.yylloc.last_line,\r\n          last_line: this.yylineno + 1,\r\n          first_column: this.yylloc.last_column,\r\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n          this.done = false;\r\n        }\r\n        if (token) {\r\n          return token;\r\n        } else if (this._backtrack) {\r\n          for (var k in backup) {\r\n            this[k] = backup[k];\r\n          }\r\n          return false;\r\n        }\r\n        return false;\r\n      }, \"test_match\"),\r\n      // return next match in input\r\n      next: /* @__PURE__ */ __name(function() {\r\n        if (this.done) {\r\n          return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n          this.done = true;\r\n        }\r\n        var token, match, tempMatch, index;\r\n        if (!this._more) {\r\n          this.yytext = \"\";\r\n          this.match = \"\";\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n          tempMatch = this._input.match(this.rules[rules[i]]);\r\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n            match = tempMatch;\r\n            index = i;\r\n            if (this.options.backtrack_lexer) {\r\n              token = this.test_match(tempMatch, rules[i]);\r\n              if (token !== false) {\r\n                return token;\r\n              } else if (this._backtrack) {\r\n                match = false;\r\n                continue;\r\n              } else {\r\n                return false;\r\n              }\r\n            } else if (!this.options.flex) {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (match) {\r\n          token = this.test_match(match, rules[index]);\r\n          if (token !== false) {\r\n            return token;\r\n          }\r\n          return false;\r\n        }\r\n        if (this._input === \"\") {\r\n          return this.EOF;\r\n        } else {\r\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\r\n            text: \"\",\r\n            token: null,\r\n            line: this.yylineno\r\n          });\r\n        }\r\n      }, \"next\"),\r\n      // return next match that has a token\r\n      lex: /* @__PURE__ */ __name(function lex() {\r\n        var r = this.next();\r\n        if (r) {\r\n          return r;\r\n        } else {\r\n          return this.lex();\r\n        }\r\n      }, \"lex\"),\r\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n      begin: /* @__PURE__ */ __name(function begin(condition) {\r\n        this.conditionStack.push(condition);\r\n      }, \"begin\"),\r\n      // pop the previously active lexer condition state off the condition stack\r\n      popState: /* @__PURE__ */ __name(function popState() {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n          return this.conditionStack.pop();\r\n        } else {\r\n          return this.conditionStack[0];\r\n        }\r\n      }, \"popState\"),\r\n      // produce the lexer rule set which is active for the currently active lexer condition state\r\n      _currentRules: /* @__PURE__ */ __name(function _currentRules() {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n          return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n      }, \"_currentRules\"),\r\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n      topState: /* @__PURE__ */ __name(function topState(n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n          return this.conditionStack[n];\r\n        } else {\r\n          return \"INITIAL\";\r\n        }\r\n      }, \"topState\"),\r\n      // alias for begin(condition)\r\n      pushState: /* @__PURE__ */ __name(function pushState(condition) {\r\n        this.begin(condition);\r\n      }, \"pushState\"),\r\n      // return the number of states currently on the stack\r\n      stateStackSize: /* @__PURE__ */ __name(function stateStackSize() {\r\n        return this.conditionStack.length;\r\n      }, \"stateStackSize\"),\r\n      options: {},\r\n      performAction: /* @__PURE__ */ __name(function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\r\n        var YYSTATE = YY_START;\r\n        switch ($avoiding_name_collisions) {\r\n          case 0:\r\n            return 10;\r\n            break;\r\n          case 1:\r\n            yy.getLogger().debug(\"Found space-block\");\r\n            return 31;\r\n            break;\r\n          case 2:\r\n            yy.getLogger().debug(\"Found nl-block\");\r\n            return 31;\r\n            break;\r\n          case 3:\r\n            yy.getLogger().debug(\"Found space-block\");\r\n            return 29;\r\n            break;\r\n          case 4:\r\n            yy.getLogger().debug(\".\", yy_.yytext);\r\n            break;\r\n          case 5:\r\n            yy.getLogger().debug(\"_\", yy_.yytext);\r\n            break;\r\n          case 6:\r\n            return 5;\r\n            break;\r\n          case 7:\r\n            yy_.yytext = -1;\r\n            return 28;\r\n            break;\r\n          case 8:\r\n            yy_.yytext = yy_.yytext.replace(/columns\\s+/, \"\");\r\n            yy.getLogger().debug(\"COLUMNS (LEX)\", yy_.yytext);\r\n            return 28;\r\n            break;\r\n          case 9:\r\n            this.pushState(\"md_string\");\r\n            break;\r\n          case 10:\r\n            return \"MD_STR\";\r\n            break;\r\n          case 11:\r\n            this.popState();\r\n            break;\r\n          case 12:\r\n            this.pushState(\"string\");\r\n            break;\r\n          case 13:\r\n            yy.getLogger().debug(\"LEX: POPPING STR:\", yy_.yytext);\r\n            this.popState();\r\n            break;\r\n          case 14:\r\n            yy.getLogger().debug(\"LEX: STR end:\", yy_.yytext);\r\n            return \"STR\";\r\n            break;\r\n          case 15:\r\n            yy_.yytext = yy_.yytext.replace(/space\\:/, \"\");\r\n            yy.getLogger().debug(\"SPACE NUM (LEX)\", yy_.yytext);\r\n            return 21;\r\n            break;\r\n          case 16:\r\n            yy_.yytext = \"1\";\r\n            yy.getLogger().debug(\"COLUMNS (LEX)\", yy_.yytext);\r\n            return 21;\r\n            break;\r\n          case 17:\r\n            return 43;\r\n            break;\r\n          case 18:\r\n            return \"LINKSTYLE\";\r\n            break;\r\n          case 19:\r\n            return \"INTERPOLATE\";\r\n            break;\r\n          case 20:\r\n            this.pushState(\"CLASSDEF\");\r\n            return 40;\r\n            break;\r\n          case 21:\r\n            this.popState();\r\n            this.pushState(\"CLASSDEFID\");\r\n            return \"DEFAULT_CLASSDEF_ID\";\r\n            break;\r\n          case 22:\r\n            this.popState();\r\n            this.pushState(\"CLASSDEFID\");\r\n            return 41;\r\n            break;\r\n          case 23:\r\n            this.popState();\r\n            return 42;\r\n            break;\r\n          case 24:\r\n            this.pushState(\"CLASS\");\r\n            return 44;\r\n            break;\r\n          case 25:\r\n            this.popState();\r\n            this.pushState(\"CLASS_STYLE\");\r\n            return 45;\r\n            break;\r\n          case 26:\r\n            this.popState();\r\n            return 46;\r\n            break;\r\n          case 27:\r\n            this.pushState(\"STYLE_STMNT\");\r\n            return 47;\r\n            break;\r\n          case 28:\r\n            this.popState();\r\n            this.pushState(\"STYLE_DEFINITION\");\r\n            return 48;\r\n            break;\r\n          case 29:\r\n            this.popState();\r\n            return 49;\r\n            break;\r\n          case 30:\r\n            this.pushState(\"acc_title\");\r\n            return \"acc_title\";\r\n            break;\r\n          case 31:\r\n            this.popState();\r\n            return \"acc_title_value\";\r\n            break;\r\n          case 32:\r\n            this.pushState(\"acc_descr\");\r\n            return \"acc_descr\";\r\n            break;\r\n          case 33:\r\n            this.popState();\r\n            return \"acc_descr_value\";\r\n            break;\r\n          case 34:\r\n            this.pushState(\"acc_descr_multiline\");\r\n            break;\r\n          case 35:\r\n            this.popState();\r\n            break;\r\n          case 36:\r\n            return \"acc_descr_multiline_value\";\r\n            break;\r\n          case 37:\r\n            return 30;\r\n            break;\r\n          case 38:\r\n            this.popState();\r\n            yy.getLogger().debug(\"Lex: ((\");\r\n            return \"NODE_DEND\";\r\n            break;\r\n          case 39:\r\n            this.popState();\r\n            yy.getLogger().debug(\"Lex: ((\");\r\n            return \"NODE_DEND\";\r\n            break;\r\n          case 40:\r\n            this.popState();\r\n            yy.getLogger().debug(\"Lex: ))\");\r\n            return \"NODE_DEND\";\r\n            break;\r\n          case 41:\r\n            this.popState();\r\n            yy.getLogger().debug(\"Lex: ((\");\r\n            return \"NODE_DEND\";\r\n            break;\r\n          case 42:\r\n            this.popState();\r\n            yy.getLogger().debug(\"Lex: ((\");\r\n            return \"NODE_DEND\";\r\n            break;\r\n          case 43:\r\n            this.popState();\r\n            yy.getLogger().debug(\"Lex: (-\");\r\n            return \"NODE_DEND\";\r\n            break;\r\n          case 44:\r\n            this.popState();\r\n            yy.getLogger().debug(\"Lex: -)\");\r\n            return \"NODE_DEND\";\r\n            break;\r\n          case 45:\r\n            this.popState();\r\n            yy.getLogger().debug(\"Lex: ((\");\r\n            return \"NODE_DEND\";\r\n            break;\r\n          case 46:\r\n            this.popState();\r\n            yy.getLogger().debug(\"Lex: ]]\");\r\n            return \"NODE_DEND\";\r\n            break;\r\n          case 47:\r\n            this.popState();\r\n            yy.getLogger().debug(\"Lex: (\");\r\n            return \"NODE_DEND\";\r\n            break;\r\n          case 48:\r\n            this.popState();\r\n            yy.getLogger().debug(\"Lex: ])\");\r\n            return \"NODE_DEND\";\r\n            break;\r\n          case 49:\r\n            this.popState();\r\n            yy.getLogger().debug(\"Lex: /]\");\r\n            return \"NODE_DEND\";\r\n            break;\r\n          case 50:\r\n            this.popState();\r\n            yy.getLogger().debug(\"Lex: /]\");\r\n            return \"NODE_DEND\";\r\n            break;\r\n          case 51:\r\n            this.popState();\r\n            yy.getLogger().debug(\"Lex: )]\");\r\n            return \"NODE_DEND\";\r\n            break;\r\n          case 52:\r\n            this.popState();\r\n            yy.getLogger().debug(\"Lex: )\");\r\n            return \"NODE_DEND\";\r\n            break;\r\n          case 53:\r\n            this.popState();\r\n            yy.getLogger().debug(\"Lex: ]>\");\r\n            return \"NODE_DEND\";\r\n            break;\r\n          case 54:\r\n            this.popState();\r\n            yy.getLogger().debug(\"Lex: ]\");\r\n            return \"NODE_DEND\";\r\n            break;\r\n          case 55:\r\n            yy.getLogger().debug(\"Lexa: -)\");\r\n            this.pushState(\"NODE\");\r\n            return 36;\r\n            break;\r\n          case 56:\r\n            yy.getLogger().debug(\"Lexa: (-\");\r\n            this.pushState(\"NODE\");\r\n            return 36;\r\n            break;\r\n          case 57:\r\n            yy.getLogger().debug(\"Lexa: ))\");\r\n            this.pushState(\"NODE\");\r\n            return 36;\r\n            break;\r\n          case 58:\r\n            yy.getLogger().debug(\"Lexa: )\");\r\n            this.pushState(\"NODE\");\r\n            return 36;\r\n            break;\r\n          case 59:\r\n            yy.getLogger().debug(\"Lex: (((\");\r\n            this.pushState(\"NODE\");\r\n            return 36;\r\n            break;\r\n          case 60:\r\n            yy.getLogger().debug(\"Lexa: )\");\r\n            this.pushState(\"NODE\");\r\n            return 36;\r\n            break;\r\n          case 61:\r\n            yy.getLogger().debug(\"Lexa: )\");\r\n            this.pushState(\"NODE\");\r\n            return 36;\r\n            break;\r\n          case 62:\r\n            yy.getLogger().debug(\"Lexa: )\");\r\n            this.pushState(\"NODE\");\r\n            return 36;\r\n            break;\r\n          case 63:\r\n            yy.getLogger().debug(\"Lexc: >\");\r\n            this.pushState(\"NODE\");\r\n            return 36;\r\n            break;\r\n          case 64:\r\n            yy.getLogger().debug(\"Lexa: ([\");\r\n            this.pushState(\"NODE\");\r\n            return 36;\r\n            break;\r\n          case 65:\r\n            yy.getLogger().debug(\"Lexa: )\");\r\n            this.pushState(\"NODE\");\r\n            return 36;\r\n            break;\r\n          case 66:\r\n            this.pushState(\"NODE\");\r\n            return 36;\r\n            break;\r\n          case 67:\r\n            this.pushState(\"NODE\");\r\n            return 36;\r\n            break;\r\n          case 68:\r\n            this.pushState(\"NODE\");\r\n            return 36;\r\n            break;\r\n          case 69:\r\n            this.pushState(\"NODE\");\r\n            return 36;\r\n            break;\r\n          case 70:\r\n            this.pushState(\"NODE\");\r\n            return 36;\r\n            break;\r\n          case 71:\r\n            this.pushState(\"NODE\");\r\n            return 36;\r\n            break;\r\n          case 72:\r\n            this.pushState(\"NODE\");\r\n            return 36;\r\n            break;\r\n          case 73:\r\n            yy.getLogger().debug(\"Lexa: [\");\r\n            this.pushState(\"NODE\");\r\n            return 36;\r\n            break;\r\n          case 74:\r\n            this.pushState(\"BLOCK_ARROW\");\r\n            yy.getLogger().debug(\"LEX ARR START\");\r\n            return 38;\r\n            break;\r\n          case 75:\r\n            yy.getLogger().debug(\"Lex: NODE_ID\", yy_.yytext);\r\n            return 32;\r\n            break;\r\n          case 76:\r\n            yy.getLogger().debug(\"Lex: EOF\", yy_.yytext);\r\n            return 8;\r\n            break;\r\n          case 77:\r\n            this.pushState(\"md_string\");\r\n            break;\r\n          case 78:\r\n            this.pushState(\"md_string\");\r\n            break;\r\n          case 79:\r\n            return \"NODE_DESCR\";\r\n            break;\r\n          case 80:\r\n            this.popState();\r\n            break;\r\n          case 81:\r\n            yy.getLogger().debug(\"Lex: Starting string\");\r\n            this.pushState(\"string\");\r\n            break;\r\n          case 82:\r\n            yy.getLogger().debug(\"LEX ARR: Starting string\");\r\n            this.pushState(\"string\");\r\n            break;\r\n          case 83:\r\n            yy.getLogger().debug(\"LEX: NODE_DESCR:\", yy_.yytext);\r\n            return \"NODE_DESCR\";\r\n            break;\r\n          case 84:\r\n            yy.getLogger().debug(\"LEX POPPING\");\r\n            this.popState();\r\n            break;\r\n          case 85:\r\n            yy.getLogger().debug(\"Lex: =>BAE\");\r\n            this.pushState(\"ARROW_DIR\");\r\n            break;\r\n          case 86:\r\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, \"\");\r\n            yy.getLogger().debug(\"Lex (right): dir:\", yy_.yytext);\r\n            return \"DIR\";\r\n            break;\r\n          case 87:\r\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, \"\");\r\n            yy.getLogger().debug(\"Lex (left):\", yy_.yytext);\r\n            return \"DIR\";\r\n            break;\r\n          case 88:\r\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, \"\");\r\n            yy.getLogger().debug(\"Lex (x):\", yy_.yytext);\r\n            return \"DIR\";\r\n            break;\r\n          case 89:\r\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, \"\");\r\n            yy.getLogger().debug(\"Lex (y):\", yy_.yytext);\r\n            return \"DIR\";\r\n            break;\r\n          case 90:\r\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, \"\");\r\n            yy.getLogger().debug(\"Lex (up):\", yy_.yytext);\r\n            return \"DIR\";\r\n            break;\r\n          case 91:\r\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, \"\");\r\n            yy.getLogger().debug(\"Lex (down):\", yy_.yytext);\r\n            return \"DIR\";\r\n            break;\r\n          case 92:\r\n            yy_.yytext = \"]>\";\r\n            yy.getLogger().debug(\"Lex (ARROW_DIR end):\", yy_.yytext);\r\n            this.popState();\r\n            this.popState();\r\n            return \"BLOCK_ARROW_END\";\r\n            break;\r\n          case 93:\r\n            yy.getLogger().debug(\"Lex: LINK\", \"#\" + yy_.yytext + \"#\");\r\n            return 15;\r\n            break;\r\n          case 94:\r\n            yy.getLogger().debug(\"Lex: LINK\", yy_.yytext);\r\n            return 15;\r\n            break;\r\n          case 95:\r\n            yy.getLogger().debug(\"Lex: LINK\", yy_.yytext);\r\n            return 15;\r\n            break;\r\n          case 96:\r\n            yy.getLogger().debug(\"Lex: LINK\", yy_.yytext);\r\n            return 15;\r\n            break;\r\n          case 97:\r\n            yy.getLogger().debug(\"Lex: START_LINK\", yy_.yytext);\r\n            this.pushState(\"LLABEL\");\r\n            return 16;\r\n            break;\r\n          case 98:\r\n            yy.getLogger().debug(\"Lex: START_LINK\", yy_.yytext);\r\n            this.pushState(\"LLABEL\");\r\n            return 16;\r\n            break;\r\n          case 99:\r\n            yy.getLogger().debug(\"Lex: START_LINK\", yy_.yytext);\r\n            this.pushState(\"LLABEL\");\r\n            return 16;\r\n            break;\r\n          case 100:\r\n            this.pushState(\"md_string\");\r\n            break;\r\n          case 101:\r\n            yy.getLogger().debug(\"Lex: Starting string\");\r\n            this.pushState(\"string\");\r\n            return \"LINK_LABEL\";\r\n            break;\r\n          case 102:\r\n            this.popState();\r\n            yy.getLogger().debug(\"Lex: LINK\", \"#\" + yy_.yytext + \"#\");\r\n            return 15;\r\n            break;\r\n          case 103:\r\n            this.popState();\r\n            yy.getLogger().debug(\"Lex: LINK\", yy_.yytext);\r\n            return 15;\r\n            break;\r\n          case 104:\r\n            this.popState();\r\n            yy.getLogger().debug(\"Lex: LINK\", yy_.yytext);\r\n            return 15;\r\n            break;\r\n          case 105:\r\n            yy.getLogger().debug(\"Lex: COLON\", yy_.yytext);\r\n            yy_.yytext = yy_.yytext.slice(1);\r\n            return 27;\r\n            break;\r\n        }\r\n      }, \"anonymous\"),\r\n      rules: [/^(?:block-beta\\b)/, /^(?:block\\s+)/, /^(?:block\\n+)/, /^(?:block:)/, /^(?:[\\s]+)/, /^(?:[\\n]+)/, /^(?:((\\u000D\\u000A)|(\\u000A)))/, /^(?:columns\\s+auto\\b)/, /^(?:columns\\s+[\\d]+)/, /^(?:[\"][`])/, /^(?:[^`\"]+)/, /^(?:[`][\"])/, /^(?:[\"])/, /^(?:[\"])/, /^(?:[^\"]*)/, /^(?:space[:]\\d+)/, /^(?:space\\b)/, /^(?:default\\b)/, /^(?:linkStyle\\b)/, /^(?:interpolate\\b)/, /^(?:classDef\\s+)/, /^(?:DEFAULT\\s+)/, /^(?:\\w+\\s+)/, /^(?:[^\\n]*)/, /^(?:class\\s+)/, /^(?:(\\w+)+((,\\s*\\w+)*))/, /^(?:[^\\n]*)/, /^(?:style\\s+)/, /^(?:(\\w+)+((,\\s*\\w+)*))/, /^(?:[^\\n]*)/, /^(?:accTitle\\s*:\\s*)/, /^(?:(?!\\n||)*[^\\n]*)/, /^(?:accDescr\\s*:\\s*)/, /^(?:(?!\\n||)*[^\\n]*)/, /^(?:accDescr\\s*\\{\\s*)/, /^(?:[\\}])/, /^(?:[^\\}]*)/, /^(?:end\\b\\s*)/, /^(?:\\(\\(\\()/, /^(?:\\)\\)\\))/, /^(?:[\\)]\\))/, /^(?:\\}\\})/, /^(?:\\})/, /^(?:\\(-)/, /^(?:-\\))/, /^(?:\\(\\()/, /^(?:\\]\\])/, /^(?:\\()/, /^(?:\\]\\))/, /^(?:\\\\\\])/, /^(?:\\/\\])/, /^(?:\\)\\])/, /^(?:[\\)])/, /^(?:\\]>)/, /^(?:[\\]])/, /^(?:-\\))/, /^(?:\\(-)/, /^(?:\\)\\))/, /^(?:\\))/, /^(?:\\(\\(\\()/, /^(?:\\(\\()/, /^(?:\\{\\{)/, /^(?:\\{)/, /^(?:>)/, /^(?:\\(\\[)/, /^(?:\\()/, /^(?:\\[\\[)/, /^(?:\\[\\|)/, /^(?:\\[\\()/, /^(?:\\)\\)\\))/, /^(?:\\[\\\\)/, /^(?:\\[\\/)/, /^(?:\\[\\\\)/, /^(?:\\[)/, /^(?:<\\[)/, /^(?:[^\\(\\[\\n\\-\\)\\{\\}\\s\\<\\>:]+)/, /^(?:$)/, /^(?:[\"][`])/, /^(?:[\"][`])/, /^(?:[^`\"]+)/, /^(?:[`][\"])/, /^(?:[\"])/, /^(?:[\"])/, /^(?:[^\"]+)/, /^(?:[\"])/, /^(?:\\]>\\s*\\()/, /^(?:,?\\s*right\\s*)/, /^(?:,?\\s*left\\s*)/, /^(?:,?\\s*x\\s*)/, /^(?:,?\\s*y\\s*)/, /^(?:,?\\s*up\\s*)/, /^(?:,?\\s*down\\s*)/, /^(?:\\)\\s*)/, /^(?:\\s*[xo<]?--+[-xo>]\\s*)/, /^(?:\\s*[xo<]?==+[=xo>]\\s*)/, /^(?:\\s*[xo<]?-?\\.+-[xo>]?\\s*)/, /^(?:\\s*~~[\\~]+\\s*)/, /^(?:\\s*[xo<]?--\\s*)/, /^(?:\\s*[xo<]?==\\s*)/, /^(?:\\s*[xo<]?-\\.\\s*)/, /^(?:[\"][`])/, /^(?:[\"])/, /^(?:\\s*[xo<]?--+[-xo>]\\s*)/, /^(?:\\s*[xo<]?==+[=xo>]\\s*)/, /^(?:\\s*[xo<]?-?\\.+-[xo>]?\\s*)/, /^(?::\\d+)/],\r\n      conditions: { \"STYLE_DEFINITION\": { \"rules\": [29], \"inclusive\": false }, \"STYLE_STMNT\": { \"rules\": [28], \"inclusive\": false }, \"CLASSDEFID\": { \"rules\": [23], \"inclusive\": false }, \"CLASSDEF\": { \"rules\": [21, 22], \"inclusive\": false }, \"CLASS_STYLE\": { \"rules\": [26], \"inclusive\": false }, \"CLASS\": { \"rules\": [25], \"inclusive\": false }, \"LLABEL\": { \"rules\": [100, 101, 102, 103, 104], \"inclusive\": false }, \"ARROW_DIR\": { \"rules\": [86, 87, 88, 89, 90, 91, 92], \"inclusive\": false }, \"BLOCK_ARROW\": { \"rules\": [77, 82, 85], \"inclusive\": false }, \"NODE\": { \"rules\": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 78, 81], \"inclusive\": false }, \"md_string\": { \"rules\": [10, 11, 79, 80], \"inclusive\": false }, \"space\": { \"rules\": [], \"inclusive\": false }, \"string\": { \"rules\": [13, 14, 83, 84], \"inclusive\": false }, \"acc_descr_multiline\": { \"rules\": [35, 36], \"inclusive\": false }, \"acc_descr\": { \"rules\": [33], \"inclusive\": false }, \"acc_title\": { \"rules\": [31], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 15, 16, 17, 18, 19, 20, 24, 27, 30, 32, 34, 37, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 93, 94, 95, 96, 97, 98, 99, 105], \"inclusive\": true } }\r\n    };\r\n    return lexer2;\r\n  }();\r\n  parser2.lexer = lexer;\r\n  function Parser() {\r\n    this.yy = {};\r\n  }\r\n  __name(Parser, \"Parser\");\r\n  Parser.prototype = parser2;\r\n  parser2.Parser = Parser;\r\n  return new Parser();\r\n}();\r\nparser.parser = parser;\r\nvar block_default = parser;\r\n\r\n// src/diagrams/block/blockDB.ts\r\nimport clone from \"lodash-es/clone.js\";\r\nvar blockDatabase = /* @__PURE__ */ new Map();\r\nvar edgeList = [];\r\nvar edgeCount = /* @__PURE__ */ new Map();\r\nvar COLOR_KEYWORD = \"color\";\r\nvar FILL_KEYWORD = \"fill\";\r\nvar BG_FILL = \"bgFill\";\r\nvar STYLECLASS_SEP = \",\";\r\nvar config = getConfig2();\r\nvar classes = /* @__PURE__ */ new Map();\r\nvar sanitizeText = /* @__PURE__ */ __name((txt) => common_default.sanitizeText(txt, config), \"sanitizeText\");\r\nvar addStyleClass = /* @__PURE__ */ __name(function(id, styleAttributes = \"\") {\r\n  let foundClass = classes.get(id);\r\n  if (!foundClass) {\r\n    foundClass = { id, styles: [], textStyles: [] };\r\n    classes.set(id, foundClass);\r\n  }\r\n  if (styleAttributes !== void 0 && styleAttributes !== null) {\r\n    styleAttributes.split(STYLECLASS_SEP).forEach((attrib) => {\r\n      const fixedAttrib = attrib.replace(/([^;]*);/, \"$1\").trim();\r\n      if (RegExp(COLOR_KEYWORD).exec(attrib)) {\r\n        const newStyle1 = fixedAttrib.replace(FILL_KEYWORD, BG_FILL);\r\n        const newStyle2 = newStyle1.replace(COLOR_KEYWORD, FILL_KEYWORD);\r\n        foundClass.textStyles.push(newStyle2);\r\n      }\r\n      foundClass.styles.push(fixedAttrib);\r\n    });\r\n  }\r\n}, \"addStyleClass\");\r\nvar addStyle2Node = /* @__PURE__ */ __name(function(id, styles = \"\") {\r\n  const foundBlock = blockDatabase.get(id);\r\n  if (styles !== void 0 && styles !== null) {\r\n    foundBlock.styles = styles.split(STYLECLASS_SEP);\r\n  }\r\n}, \"addStyle2Node\");\r\nvar setCssClass = /* @__PURE__ */ __name(function(itemIds, cssClassName) {\r\n  itemIds.split(\",\").forEach(function(id) {\r\n    let foundBlock = blockDatabase.get(id);\r\n    if (foundBlock === void 0) {\r\n      const trimmedId = id.trim();\r\n      foundBlock = { id: trimmedId, type: \"na\", children: [] };\r\n      blockDatabase.set(trimmedId, foundBlock);\r\n    }\r\n    if (!foundBlock.classes) {\r\n      foundBlock.classes = [];\r\n    }\r\n    foundBlock.classes.push(cssClassName);\r\n  });\r\n}, \"setCssClass\");\r\nvar populateBlockDatabase = /* @__PURE__ */ __name((_blockList, parent) => {\r\n  const blockList = _blockList.flat();\r\n  const children = [];\r\n  for (const block of blockList) {\r\n    if (block.label) {\r\n      block.label = sanitizeText(block.label);\r\n    }\r\n    if (block.type === \"classDef\") {\r\n      addStyleClass(block.id, block.css);\r\n      continue;\r\n    }\r\n    if (block.type === \"applyClass\") {\r\n      setCssClass(block.id, block?.styleClass ?? \"\");\r\n      continue;\r\n    }\r\n    if (block.type === \"applyStyles\") {\r\n      if (block?.stylesStr) {\r\n        addStyle2Node(block.id, block?.stylesStr);\r\n      }\r\n      continue;\r\n    }\r\n    if (block.type === \"column-setting\") {\r\n      parent.columns = block.columns ?? -1;\r\n    } else if (block.type === \"edge\") {\r\n      const count = (edgeCount.get(block.id) ?? 0) + 1;\r\n      edgeCount.set(block.id, count);\r\n      block.id = count + \"-\" + block.id;\r\n      edgeList.push(block);\r\n    } else {\r\n      if (!block.label) {\r\n        if (block.type === \"composite\") {\r\n          block.label = \"\";\r\n        } else {\r\n          block.label = block.id;\r\n        }\r\n      }\r\n      const existingBlock = blockDatabase.get(block.id);\r\n      if (existingBlock === void 0) {\r\n        blockDatabase.set(block.id, block);\r\n      } else {\r\n        if (block.type !== \"na\") {\r\n          existingBlock.type = block.type;\r\n        }\r\n        if (block.label !== block.id) {\r\n          existingBlock.label = block.label;\r\n        }\r\n      }\r\n      if (block.children) {\r\n        populateBlockDatabase(block.children, block);\r\n      }\r\n      if (block.type === \"space\") {\r\n        const w = block.width ?? 1;\r\n        for (let j = 0; j < w; j++) {\r\n          const newBlock = clone(block);\r\n          newBlock.id = newBlock.id + \"-\" + j;\r\n          blockDatabase.set(newBlock.id, newBlock);\r\n          children.push(newBlock);\r\n        }\r\n      } else if (existingBlock === void 0) {\r\n        children.push(block);\r\n      }\r\n    }\r\n  }\r\n  parent.children = children;\r\n}, \"populateBlockDatabase\");\r\nvar blocks = [];\r\nvar rootBlock = { id: \"root\", type: \"composite\", children: [], columns: -1 };\r\nvar clear2 = /* @__PURE__ */ __name(() => {\r\n  log.debug(\"Clear called\");\r\n  clear();\r\n  rootBlock = { id: \"root\", type: \"composite\", children: [], columns: -1 };\r\n  blockDatabase = /* @__PURE__ */ new Map([[\"root\", rootBlock]]);\r\n  blocks = [];\r\n  classes = /* @__PURE__ */ new Map();\r\n  edgeList = [];\r\n  edgeCount = /* @__PURE__ */ new Map();\r\n}, \"clear\");\r\nfunction typeStr2Type(typeStr) {\r\n  log.debug(\"typeStr2Type\", typeStr);\r\n  switch (typeStr) {\r\n    case \"[]\":\r\n      return \"square\";\r\n    case \"()\":\r\n      log.debug(\"we have a round\");\r\n      return \"round\";\r\n    case \"(())\":\r\n      return \"circle\";\r\n    case \">]\":\r\n      return \"rect_left_inv_arrow\";\r\n    case \"{}\":\r\n      return \"diamond\";\r\n    case \"{{}}\":\r\n      return \"hexagon\";\r\n    case \"([])\":\r\n      return \"stadium\";\r\n    case \"[[]]\":\r\n      return \"subroutine\";\r\n    case \"[()]\":\r\n      return \"cylinder\";\r\n    case \"((()))\":\r\n      return \"doublecircle\";\r\n    case \"[//]\":\r\n      return \"lean_right\";\r\n    case \"[\\\\\\\\]\":\r\n      return \"lean_left\";\r\n    case \"[/\\\\]\":\r\n      return \"trapezoid\";\r\n    case \"[\\\\/]\":\r\n      return \"inv_trapezoid\";\r\n    case \"<[]>\":\r\n      return \"block_arrow\";\r\n    default:\r\n      return \"na\";\r\n  }\r\n}\r\n__name(typeStr2Type, \"typeStr2Type\");\r\nfunction edgeTypeStr2Type(typeStr) {\r\n  log.debug(\"typeStr2Type\", typeStr);\r\n  switch (typeStr) {\r\n    case \"==\":\r\n      return \"thick\";\r\n    default:\r\n      return \"normal\";\r\n  }\r\n}\r\n__name(edgeTypeStr2Type, \"edgeTypeStr2Type\");\r\nfunction edgeStrToEdgeData(typeStr) {\r\n  switch (typeStr.trim()) {\r\n    case \"--x\":\r\n      return \"arrow_cross\";\r\n    case \"--o\":\r\n      return \"arrow_circle\";\r\n    default:\r\n      return \"arrow_point\";\r\n  }\r\n}\r\n__name(edgeStrToEdgeData, \"edgeStrToEdgeData\");\r\nvar cnt = 0;\r\nvar generateId = /* @__PURE__ */ __name(() => {\r\n  cnt++;\r\n  return \"id-\" + Math.random().toString(36).substr(2, 12) + \"-\" + cnt;\r\n}, \"generateId\");\r\nvar setHierarchy = /* @__PURE__ */ __name((block) => {\r\n  rootBlock.children = block;\r\n  populateBlockDatabase(block, rootBlock);\r\n  blocks = rootBlock.children;\r\n}, \"setHierarchy\");\r\nvar getColumns = /* @__PURE__ */ __name((blockId) => {\r\n  const block = blockDatabase.get(blockId);\r\n  if (!block) {\r\n    return -1;\r\n  }\r\n  if (block.columns) {\r\n    return block.columns;\r\n  }\r\n  if (!block.children) {\r\n    return -1;\r\n  }\r\n  return block.children.length;\r\n}, \"getColumns\");\r\nvar getBlocksFlat = /* @__PURE__ */ __name(() => {\r\n  return [...blockDatabase.values()];\r\n}, \"getBlocksFlat\");\r\nvar getBlocks = /* @__PURE__ */ __name(() => {\r\n  return blocks || [];\r\n}, \"getBlocks\");\r\nvar getEdges = /* @__PURE__ */ __name(() => {\r\n  return edgeList;\r\n}, \"getEdges\");\r\nvar getBlock = /* @__PURE__ */ __name((id) => {\r\n  return blockDatabase.get(id);\r\n}, \"getBlock\");\r\nvar setBlock = /* @__PURE__ */ __name((block) => {\r\n  blockDatabase.set(block.id, block);\r\n}, \"setBlock\");\r\nvar getLogger = /* @__PURE__ */ __name(() => console, \"getLogger\");\r\nvar getClasses = /* @__PURE__ */ __name(function() {\r\n  return classes;\r\n}, \"getClasses\");\r\nvar db = {\r\n  getConfig: /* @__PURE__ */ __name(() => getConfig().block, \"getConfig\"),\r\n  typeStr2Type,\r\n  edgeTypeStr2Type,\r\n  edgeStrToEdgeData,\r\n  getLogger,\r\n  getBlocksFlat,\r\n  getBlocks,\r\n  getEdges,\r\n  setHierarchy,\r\n  getBlock,\r\n  setBlock,\r\n  getColumns,\r\n  getClasses,\r\n  clear: clear2,\r\n  generateId\r\n};\r\nvar blockDB_default = db;\r\n\r\n// src/diagrams/block/styles.ts\r\nimport * as khroma from \"khroma\";\r\nvar fade = /* @__PURE__ */ __name((color, opacity) => {\r\n  const channel2 = khroma.channel;\r\n  const r = channel2(color, \"r\");\r\n  const g = channel2(color, \"g\");\r\n  const b = channel2(color, \"b\");\r\n  return khroma.rgba(r, g, b, opacity);\r\n}, \"fade\");\r\nvar getStyles = /* @__PURE__ */ __name((options) => `.label {\r\n    font-family: ${options.fontFamily};\r\n    color: ${options.nodeTextColor || options.textColor};\r\n  }\r\n  .cluster-label text {\r\n    fill: ${options.titleColor};\r\n  }\r\n  .cluster-label span,p {\r\n    color: ${options.titleColor};\r\n  }\r\n\r\n\r\n\r\n  .label text,span,p {\r\n    fill: ${options.nodeTextColor || options.textColor};\r\n    color: ${options.nodeTextColor || options.textColor};\r\n  }\r\n\r\n  .node rect,\r\n  .node circle,\r\n  .node ellipse,\r\n  .node polygon,\r\n  .node path {\r\n    fill: ${options.mainBkg};\r\n    stroke: ${options.nodeBorder};\r\n    stroke-width: 1px;\r\n  }\r\n  .flowchart-label text {\r\n    text-anchor: middle;\r\n  }\r\n  // .flowchart-label .text-outer-tspan {\r\n  //   text-anchor: middle;\r\n  // }\r\n  // .flowchart-label .text-inner-tspan {\r\n  //   text-anchor: start;\r\n  // }\r\n\r\n  .node .label {\r\n    text-align: center;\r\n  }\r\n  .node.clickable {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .arrowheadPath {\r\n    fill: ${options.arrowheadColor};\r\n  }\r\n\r\n  .edgePath .path {\r\n    stroke: ${options.lineColor};\r\n    stroke-width: 2.0px;\r\n  }\r\n\r\n  .flowchart-link {\r\n    stroke: ${options.lineColor};\r\n    fill: none;\r\n  }\r\n\r\n  .edgeLabel {\r\n    background-color: ${options.edgeLabelBackground};\r\n    rect {\r\n      opacity: 0.5;\r\n      background-color: ${options.edgeLabelBackground};\r\n      fill: ${options.edgeLabelBackground};\r\n    }\r\n    text-align: center;\r\n  }\r\n\r\n  /* For html labels only */\r\n  .labelBkg {\r\n    background-color: ${fade(options.edgeLabelBackground, 0.5)};\r\n    // background-color:\r\n  }\r\n\r\n  .node .cluster {\r\n    // fill: ${fade(options.mainBkg, 0.5)};\r\n    fill: ${fade(options.clusterBkg, 0.5)};\r\n    stroke: ${fade(options.clusterBorder, 0.2)};\r\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\r\n    stroke-width: 1px;\r\n  }\r\n\r\n  .cluster text {\r\n    fill: ${options.titleColor};\r\n  }\r\n\r\n  .cluster span,p {\r\n    color: ${options.titleColor};\r\n  }\r\n  /* .cluster div {\r\n    color: ${options.titleColor};\r\n  } */\r\n\r\n  div.mermaidTooltip {\r\n    position: absolute;\r\n    text-align: center;\r\n    max-width: 200px;\r\n    padding: 2px;\r\n    font-family: ${options.fontFamily};\r\n    font-size: 12px;\r\n    background: ${options.tertiaryColor};\r\n    border: 1px solid ${options.border2};\r\n    border-radius: 2px;\r\n    pointer-events: none;\r\n    z-index: 100;\r\n  }\r\n\r\n  .flowchartTitleText {\r\n    text-anchor: middle;\r\n    font-size: 18px;\r\n    fill: ${options.textColor};\r\n  }\r\n`, \"getStyles\");\r\nvar styles_default = getStyles;\r\n\r\n// src/diagrams/block/blockRenderer.ts\r\nimport { select as d3select } from \"d3\";\r\n\r\n// src/diagrams/block/layout.ts\r\nvar padding = getConfig2()?.block?.padding ?? 8;\r\nfunction calculateBlockPosition(columns, position) {\r\n  if (columns === 0 || !Number.isInteger(columns)) {\r\n    throw new Error(\"Columns must be an integer !== 0.\");\r\n  }\r\n  if (position < 0 || !Number.isInteger(position)) {\r\n    throw new Error(\"Position must be a non-negative integer.\" + position);\r\n  }\r\n  if (columns < 0) {\r\n    return { px: position, py: 0 };\r\n  }\r\n  if (columns === 1) {\r\n    return { px: 0, py: position };\r\n  }\r\n  const px = position % columns;\r\n  const py = Math.floor(position / columns);\r\n  return { px, py };\r\n}\r\n__name(calculateBlockPosition, \"calculateBlockPosition\");\r\nvar getMaxChildSize = /* @__PURE__ */ __name((block) => {\r\n  let maxWidth = 0;\r\n  let maxHeight = 0;\r\n  for (const child of block.children) {\r\n    const { width, height, x, y } = child.size ?? { width: 0, height: 0, x: 0, y: 0 };\r\n    log.debug(\r\n      \"getMaxChildSize abc95 child:\",\r\n      child.id,\r\n      \"width:\",\r\n      width,\r\n      \"height:\",\r\n      height,\r\n      \"x:\",\r\n      x,\r\n      \"y:\",\r\n      y,\r\n      child.type\r\n    );\r\n    if (child.type === \"space\") {\r\n      continue;\r\n    }\r\n    if (width > maxWidth) {\r\n      maxWidth = width / (block.widthInColumns ?? 1);\r\n    }\r\n    if (height > maxHeight) {\r\n      maxHeight = height;\r\n    }\r\n  }\r\n  return { width: maxWidth, height: maxHeight };\r\n}, \"getMaxChildSize\");\r\nfunction setBlockSizes(block, db2, siblingWidth = 0, siblingHeight = 0) {\r\n  log.debug(\r\n    \"setBlockSizes abc95 (start)\",\r\n    block.id,\r\n    block?.size?.x,\r\n    \"block width =\",\r\n    block?.size,\r\n    \"sieblingWidth\",\r\n    siblingWidth\r\n  );\r\n  if (!block?.size?.width) {\r\n    block.size = {\r\n      width: siblingWidth,\r\n      height: siblingHeight,\r\n      x: 0,\r\n      y: 0\r\n    };\r\n  }\r\n  let maxWidth = 0;\r\n  let maxHeight = 0;\r\n  if (block.children?.length > 0) {\r\n    for (const child of block.children) {\r\n      setBlockSizes(child, db2);\r\n    }\r\n    const childSize = getMaxChildSize(block);\r\n    maxWidth = childSize.width;\r\n    maxHeight = childSize.height;\r\n    log.debug(\"setBlockSizes abc95 maxWidth of\", block.id, \":s children is \", maxWidth, maxHeight);\r\n    for (const child of block.children) {\r\n      if (child.size) {\r\n        log.debug(\r\n          `abc95 Setting size of children of ${block.id} id=${child.id} ${maxWidth} ${maxHeight} ${JSON.stringify(child.size)}`\r\n        );\r\n        child.size.width = maxWidth * (child.widthInColumns ?? 1) + padding * ((child.widthInColumns ?? 1) - 1);\r\n        child.size.height = maxHeight;\r\n        child.size.x = 0;\r\n        child.size.y = 0;\r\n        log.debug(\r\n          `abc95 updating size of ${block.id} children child:${child.id} maxWidth:${maxWidth} maxHeight:${maxHeight}`\r\n        );\r\n      }\r\n    }\r\n    for (const child of block.children) {\r\n      setBlockSizes(child, db2, maxWidth, maxHeight);\r\n    }\r\n    const columns = block.columns ?? -1;\r\n    let numItems = 0;\r\n    for (const child of block.children) {\r\n      numItems += child.widthInColumns ?? 1;\r\n    }\r\n    let xSize = block.children.length;\r\n    if (columns > 0 && columns < numItems) {\r\n      xSize = columns;\r\n    }\r\n    const ySize = Math.ceil(numItems / xSize);\r\n    let width = xSize * (maxWidth + padding) + padding;\r\n    let height = ySize * (maxHeight + padding) + padding;\r\n    if (width < siblingWidth) {\r\n      log.debug(\r\n        `Detected to small siebling: abc95 ${block.id} sieblingWidth ${siblingWidth} sieblingHeight ${siblingHeight} width ${width}`\r\n      );\r\n      width = siblingWidth;\r\n      height = siblingHeight;\r\n      const childWidth = (siblingWidth - xSize * padding - padding) / xSize;\r\n      const childHeight = (siblingHeight - ySize * padding - padding) / ySize;\r\n      log.debug(\"Size indata abc88\", block.id, \"childWidth\", childWidth, \"maxWidth\", maxWidth);\r\n      log.debug(\"Size indata abc88\", block.id, \"childHeight\", childHeight, \"maxHeight\", maxHeight);\r\n      log.debug(\"Size indata abc88 xSize\", xSize, \"padding\", padding);\r\n      for (const child of block.children) {\r\n        if (child.size) {\r\n          child.size.width = childWidth;\r\n          child.size.height = childHeight;\r\n          child.size.x = 0;\r\n          child.size.y = 0;\r\n        }\r\n      }\r\n    }\r\n    log.debug(\r\n      `abc95 (finale calc) ${block.id} xSize ${xSize} ySize ${ySize} columns ${columns}${block.children.length} width=${Math.max(width, block.size?.width || 0)}`\r\n    );\r\n    if (width < (block?.size?.width || 0)) {\r\n      width = block?.size?.width || 0;\r\n      const num = columns > 0 ? Math.min(block.children.length, columns) : block.children.length;\r\n      if (num > 0) {\r\n        const childWidth = (width - num * padding - padding) / num;\r\n        log.debug(\"abc95 (growing to fit) width\", block.id, width, block.size?.width, childWidth);\r\n        for (const child of block.children) {\r\n          if (child.size) {\r\n            child.size.width = childWidth;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    block.size = {\r\n      width,\r\n      height,\r\n      x: 0,\r\n      y: 0\r\n    };\r\n  }\r\n  log.debug(\r\n    \"setBlockSizes abc94 (done)\",\r\n    block.id,\r\n    block?.size?.x,\r\n    block?.size?.width,\r\n    block?.size?.y,\r\n    block?.size?.height\r\n  );\r\n}\r\n__name(setBlockSizes, \"setBlockSizes\");\r\nfunction layoutBlocks(block, db2) {\r\n  log.debug(\r\n    `abc85 layout blocks (=>layoutBlocks) ${block.id} x: ${block?.size?.x} y: ${block?.size?.y} width: ${block?.size?.width}`\r\n  );\r\n  const columns = block.columns ?? -1;\r\n  log.debug(\"layoutBlocks columns abc95\", block.id, \"=>\", columns, block);\r\n  if (block.children && // find max width of children\r\n  block.children.length > 0) {\r\n    const width = block?.children[0]?.size?.width ?? 0;\r\n    const widthOfChildren = block.children.length * width + (block.children.length - 1) * padding;\r\n    log.debug(\"widthOfChildren 88\", widthOfChildren, \"posX\");\r\n    let columnPos = 0;\r\n    log.debug(\"abc91 block?.size?.x\", block.id, block?.size?.x);\r\n    let startingPosX = block?.size?.x ? block?.size?.x + (-block?.size?.width / 2 || 0) : -padding;\r\n    let rowPos = 0;\r\n    for (const child of block.children) {\r\n      const parent = block;\r\n      if (!child.size) {\r\n        continue;\r\n      }\r\n      const { width: width2, height } = child.size;\r\n      const { px, py } = calculateBlockPosition(columns, columnPos);\r\n      if (py != rowPos) {\r\n        rowPos = py;\r\n        startingPosX = block?.size?.x ? block?.size?.x + (-block?.size?.width / 2 || 0) : -padding;\r\n        log.debug(\"New row in layout for block\", block.id, \" and child \", child.id, rowPos);\r\n      }\r\n      log.debug(\r\n        `abc89 layout blocks (child) id: ${child.id} Pos: ${columnPos} (px, py) ${px},${py} (${parent?.size?.x},${parent?.size?.y}) parent: ${parent.id} width: ${width2}${padding}`\r\n      );\r\n      if (parent.size) {\r\n        const halfWidth = width2 / 2;\r\n        child.size.x = startingPosX + padding + halfWidth;\r\n        log.debug(\r\n          `abc91 layout blocks (calc) px, pyid:${child.id} startingPos=X${startingPosX} new startingPosX${child.size.x} ${halfWidth} padding=${padding} width=${width2} halfWidth=${halfWidth} => x:${child.size.x} y:${child.size.y} ${child.widthInColumns} (width * (child?.w || 1)) / 2 ${width2 * (child?.widthInColumns ?? 1) / 2}`\r\n        );\r\n        startingPosX = child.size.x + halfWidth;\r\n        child.size.y = parent.size.y - parent.size.height / 2 + py * (height + padding) + height / 2 + padding;\r\n        log.debug(\r\n          `abc88 layout blocks (calc) px, pyid:${child.id}startingPosX${startingPosX}${padding}${halfWidth}=>x:${child.size.x}y:${child.size.y}${child.widthInColumns}(width * (child?.w || 1)) / 2${width2 * (child?.widthInColumns ?? 1) / 2}`\r\n        );\r\n      }\r\n      if (child.children) {\r\n        layoutBlocks(child, db2);\r\n      }\r\n      columnPos += child?.widthInColumns ?? 1;\r\n      log.debug(\"abc88 columnsPos\", child, columnPos);\r\n    }\r\n  }\r\n  log.debug(\r\n    `layout blocks (<==layoutBlocks) ${block.id} x: ${block?.size?.x} y: ${block?.size?.y} width: ${block?.size?.width}`\r\n  );\r\n}\r\n__name(layoutBlocks, \"layoutBlocks\");\r\nfunction findBounds(block, { minX, minY, maxX, maxY } = { minX: 0, minY: 0, maxX: 0, maxY: 0 }) {\r\n  if (block.size && block.id !== \"root\") {\r\n    const { x, y, width, height } = block.size;\r\n    if (x - width / 2 < minX) {\r\n      minX = x - width / 2;\r\n    }\r\n    if (y - height / 2 < minY) {\r\n      minY = y - height / 2;\r\n    }\r\n    if (x + width / 2 > maxX) {\r\n      maxX = x + width / 2;\r\n    }\r\n    if (y + height / 2 > maxY) {\r\n      maxY = y + height / 2;\r\n    }\r\n  }\r\n  if (block.children) {\r\n    for (const child of block.children) {\r\n      ({ minX, minY, maxX, maxY } = findBounds(child, { minX, minY, maxX, maxY }));\r\n    }\r\n  }\r\n  return { minX, minY, maxX, maxY };\r\n}\r\n__name(findBounds, \"findBounds\");\r\nfunction layout(db2) {\r\n  const root = db2.getBlock(\"root\");\r\n  if (!root) {\r\n    return;\r\n  }\r\n  setBlockSizes(root, db2, 0, 0);\r\n  layoutBlocks(root, db2);\r\n  log.debug(\"getBlocks\", JSON.stringify(root, null, 2));\r\n  const { minX, minY, maxX, maxY } = findBounds(root);\r\n  const height = maxY - minY;\r\n  const width = maxX - minX;\r\n  return { x: minX, y: minY, width, height };\r\n}\r\n__name(layout, \"layout\");\r\n\r\n// src/diagrams/block/renderHelpers.ts\r\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\r\nfunction getNodeFromBlock(block, db2, positioned = false) {\r\n  const vertex = block;\r\n  let classStr = \"default\";\r\n  if ((vertex?.classes?.length || 0) > 0) {\r\n    classStr = (vertex?.classes ?? []).join(\" \");\r\n  }\r\n  classStr = classStr + \" flowchart-label\";\r\n  let radius = 0;\r\n  let shape = \"\";\r\n  let padding2;\r\n  switch (vertex.type) {\r\n    case \"round\":\r\n      radius = 5;\r\n      shape = \"rect\";\r\n      break;\r\n    case \"composite\":\r\n      radius = 0;\r\n      shape = \"composite\";\r\n      padding2 = 0;\r\n      break;\r\n    case \"square\":\r\n      shape = \"rect\";\r\n      break;\r\n    case \"diamond\":\r\n      shape = \"question\";\r\n      break;\r\n    case \"hexagon\":\r\n      shape = \"hexagon\";\r\n      break;\r\n    case \"block_arrow\":\r\n      shape = \"block_arrow\";\r\n      break;\r\n    case \"odd\":\r\n      shape = \"rect_left_inv_arrow\";\r\n      break;\r\n    case \"lean_right\":\r\n      shape = \"lean_right\";\r\n      break;\r\n    case \"lean_left\":\r\n      shape = \"lean_left\";\r\n      break;\r\n    case \"trapezoid\":\r\n      shape = \"trapezoid\";\r\n      break;\r\n    case \"inv_trapezoid\":\r\n      shape = \"inv_trapezoid\";\r\n      break;\r\n    case \"rect_left_inv_arrow\":\r\n      shape = \"rect_left_inv_arrow\";\r\n      break;\r\n    case \"circle\":\r\n      shape = \"circle\";\r\n      break;\r\n    case \"ellipse\":\r\n      shape = \"ellipse\";\r\n      break;\r\n    case \"stadium\":\r\n      shape = \"stadium\";\r\n      break;\r\n    case \"subroutine\":\r\n      shape = \"subroutine\";\r\n      break;\r\n    case \"cylinder\":\r\n      shape = \"cylinder\";\r\n      break;\r\n    case \"group\":\r\n      shape = \"rect\";\r\n      break;\r\n    case \"doublecircle\":\r\n      shape = \"doublecircle\";\r\n      break;\r\n    default:\r\n      shape = \"rect\";\r\n  }\r\n  const styles = getStylesFromArray(vertex?.styles ?? []);\r\n  const vertexText = vertex.label;\r\n  const bounds = vertex.size ?? { width: 0, height: 0, x: 0, y: 0 };\r\n  const node = {\r\n    labelStyle: styles.labelStyle,\r\n    shape,\r\n    labelText: vertexText,\r\n    rx: radius,\r\n    ry: radius,\r\n    class: classStr,\r\n    style: styles.style,\r\n    id: vertex.id,\r\n    directions: vertex.directions,\r\n    width: bounds.width,\r\n    height: bounds.height,\r\n    x: bounds.x,\r\n    y: bounds.y,\r\n    positioned,\r\n    intersect: void 0,\r\n    type: vertex.type,\r\n    padding: padding2 ?? getConfig()?.block?.padding ?? 0\r\n  };\r\n  return node;\r\n}\r\n__name(getNodeFromBlock, \"getNodeFromBlock\");\r\nasync function calculateBlockSize(elem, block, db2) {\r\n  const node = getNodeFromBlock(block, db2, false);\r\n  if (node.type === \"group\") {\r\n    return;\r\n  }\r\n  const config2 = getConfig();\r\n  const nodeEl = await insertNode(elem, node, { config: config2 });\r\n  const boundingBox = nodeEl.node().getBBox();\r\n  const obj = db2.getBlock(node.id);\r\n  obj.size = { width: boundingBox.width, height: boundingBox.height, x: 0, y: 0, node: nodeEl };\r\n  db2.setBlock(obj);\r\n  nodeEl.remove();\r\n}\r\n__name(calculateBlockSize, \"calculateBlockSize\");\r\nasync function insertBlockPositioned(elem, block, db2) {\r\n  const node = getNodeFromBlock(block, db2, true);\r\n  const obj = db2.getBlock(node.id);\r\n  if (obj.type !== \"space\") {\r\n    const config2 = getConfig();\r\n    await insertNode(elem, node, { config: config2 });\r\n    block.intersect = node?.intersect;\r\n    positionNode(node);\r\n  }\r\n}\r\n__name(insertBlockPositioned, \"insertBlockPositioned\");\r\nasync function performOperations(elem, blocks2, db2, operation) {\r\n  for (const block of blocks2) {\r\n    await operation(elem, block, db2);\r\n    if (block.children) {\r\n      await performOperations(elem, block.children, db2, operation);\r\n    }\r\n  }\r\n}\r\n__name(performOperations, \"performOperations\");\r\nasync function calculateBlockSizes(elem, blocks2, db2) {\r\n  await performOperations(elem, blocks2, db2, calculateBlockSize);\r\n}\r\n__name(calculateBlockSizes, \"calculateBlockSizes\");\r\nasync function insertBlocks(elem, blocks2, db2) {\r\n  await performOperations(elem, blocks2, db2, insertBlockPositioned);\r\n}\r\n__name(insertBlocks, \"insertBlocks\");\r\nasync function insertEdges(elem, edges, blocks2, db2, id) {\r\n  const g = new graphlib.Graph({\r\n    multigraph: true,\r\n    compound: true\r\n  });\r\n  g.setGraph({\r\n    rankdir: \"TB\",\r\n    nodesep: 10,\r\n    ranksep: 10,\r\n    marginx: 8,\r\n    marginy: 8\r\n  });\r\n  for (const block of blocks2) {\r\n    if (block.size) {\r\n      g.setNode(block.id, {\r\n        width: block.size.width,\r\n        height: block.size.height,\r\n        intersect: block.intersect\r\n      });\r\n    }\r\n  }\r\n  for (const edge of edges) {\r\n    if (edge.start && edge.end) {\r\n      const startBlock = db2.getBlock(edge.start);\r\n      const endBlock = db2.getBlock(edge.end);\r\n      if (startBlock?.size && endBlock?.size) {\r\n        const start = startBlock.size;\r\n        const end = endBlock.size;\r\n        const points = [\r\n          { x: start.x, y: start.y },\r\n          { x: start.x + (end.x - start.x) / 2, y: start.y + (end.y - start.y) / 2 },\r\n          { x: end.x, y: end.y }\r\n        ];\r\n        insertEdge(\r\n          elem,\r\n          { v: edge.start, w: edge.end, name: edge.id },\r\n          {\r\n            ...edge,\r\n            arrowTypeEnd: edge.arrowTypeEnd,\r\n            arrowTypeStart: edge.arrowTypeStart,\r\n            points,\r\n            classes: \"edge-thickness-normal edge-pattern-solid flowchart-link LS-a1 LE-b1\"\r\n          },\r\n          void 0,\r\n          \"block\",\r\n          g,\r\n          id\r\n        );\r\n        if (edge.label) {\r\n          await insertEdgeLabel(elem, {\r\n            ...edge,\r\n            label: edge.label,\r\n            labelStyle: \"stroke: #333; stroke-width: 1.5px;fill:none;\",\r\n            arrowTypeEnd: edge.arrowTypeEnd,\r\n            arrowTypeStart: edge.arrowTypeStart,\r\n            points,\r\n            classes: \"edge-thickness-normal edge-pattern-solid flowchart-link LS-a1 LE-b1\"\r\n          });\r\n          positionEdgeLabel(\r\n            { ...edge, x: points[1].x, y: points[1].y },\r\n            {\r\n              originalPath: points\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n__name(insertEdges, \"insertEdges\");\r\n\r\n// src/diagrams/block/blockRenderer.ts\r\nvar getClasses2 = /* @__PURE__ */ __name(function(text, diagObj) {\r\n  return diagObj.db.getClasses();\r\n}, \"getClasses\");\r\nvar draw = /* @__PURE__ */ __name(async function(text, id, _version, diagObj) {\r\n  const { securityLevel, block: conf } = getConfig();\r\n  const db2 = diagObj.db;\r\n  let sandboxElement;\r\n  if (securityLevel === \"sandbox\") {\r\n    sandboxElement = d3select(\"#i\" + id);\r\n  }\r\n  const root = securityLevel === \"sandbox\" ? d3select(sandboxElement.nodes()[0].contentDocument.body) : d3select(\"body\");\r\n  const svg = securityLevel === \"sandbox\" ? root.select(`[id=\"${id}\"]`) : d3select(`[id=\"${id}\"]`);\r\n  const markers = [\"point\", \"circle\", \"cross\"];\r\n  markers_default(svg, markers, diagObj.type, id);\r\n  const bl = db2.getBlocks();\r\n  const blArr = db2.getBlocksFlat();\r\n  const edges = db2.getEdges();\r\n  const nodes = svg.insert(\"g\").attr(\"class\", \"block\");\r\n  await calculateBlockSizes(nodes, bl, db2);\r\n  const bounds = layout(db2);\r\n  await insertBlocks(nodes, bl, db2);\r\n  await insertEdges(nodes, edges, blArr, db2, id);\r\n  if (bounds) {\r\n    const bounds2 = bounds;\r\n    const magicFactor = Math.max(1, Math.round(0.125 * (bounds2.width / bounds2.height)));\r\n    const height = bounds2.height + magicFactor + 10;\r\n    const width = bounds2.width + 10;\r\n    const { useMaxWidth } = conf;\r\n    configureSvgSize(svg, height, width, !!useMaxWidth);\r\n    log.debug(\"Here Bounds\", bounds, bounds2);\r\n    svg.attr(\r\n      \"viewBox\",\r\n      `${bounds2.x - 5} ${bounds2.y - 5} ${bounds2.width + 10} ${bounds2.height + 10}`\r\n    );\r\n  }\r\n}, \"draw\");\r\nvar blockRenderer_default = {\r\n  draw,\r\n  getClasses: getClasses2\r\n};\r\n\r\n// src/diagrams/block/blockDiagram.ts\r\nvar diagram = {\r\n  parser: block_default,\r\n  db: blockDB_default,\r\n  renderer: blockRenderer_default,\r\n  styles: styles_default\r\n};\r\nexport {\r\n  diagram\r\n};\r\n"],
  "mappings": "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IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;AAAA,IACjjD,gBAAgB,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE;AAAA,IACpE,YAA4B,OAAO,SAAS,WAAW,KAAK,MAAM;AAChE,UAAI,KAAK,aAAa;AACpB,aAAK,MAAM,GAAG;AAAA,MAChB,OAAO;AACL,YAAI,QAAQ,IAAI,MAAM,GAAG;AACzB,cAAM,OAAO;AACb,cAAM;AAAA,MACR;AAAA,IACF,GAAG,YAAY;AAAA,IACf,OAAuB,OAAO,SAAS,MAAM,OAAO;AAClD,UAAI,OAAO,MAAM,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,GAAG,QAAQ,KAAK,OAAO,SAAS,IAAI,WAAW,GAAG,SAAS,GAAG,aAAa,GAAG,SAAS,GAAG,MAAM;AACtK,UAAI,OAAO,OAAO,MAAM,KAAK,WAAW,CAAC;AACzC,UAAI,SAAS,OAAO,OAAO,KAAK,KAAK;AACrC,UAAI,cAAc,EAAE,IAAI,CAAC,EAAE;AAC3B,eAAS,KAAK,KAAK,IAAI;AACrB,YAAI,OAAO,UAAU,eAAe,KAAK,KAAK,IAAI,CAAC,GAAG;AACpD,sBAAY,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC;AAAA,QAC/B;AAAA,MACF;AACA,aAAO,SAAS,OAAO,YAAY,EAAE;AACrC,kBAAY,GAAG,QAAQ;AACvB,kBAAY,GAAG,SAAS;AACxB,UAAI,OAAO,OAAO,UAAU,aAAa;AACvC,eAAO,SAAS,CAAC;AAAA,MACnB;AACA,UAAI,QAAQ,OAAO;AACnB,aAAO,KAAK,KAAK;AACjB,UAAI,SAAS,OAAO,WAAW,OAAO,QAAQ;AAC9C,UAAI,OAAO,YAAY,GAAG,eAAe,YAAY;AACnD,aAAK,aAAa,YAAY,GAAG;AAAA,MACnC,OAAO;AACL,aAAK,aAAa,OAAO,eAAe,IAAI,EAAE;AAAA,MAChD;AACA,eAAS,SAAS,GAAG;AACnB,cAAM,SAAS,MAAM,SAAS,IAAI;AAClC,eAAO,SAAS,OAAO,SAAS;AAChC,eAAO,SAAS,OAAO,SAAS;AAAA,MAClC;AACA,aAAO,UAAU,UAAU;AAC3B,eAAS,MAAM;AACb,YAAI;AACJ,gBAAQ,OAAO,IAAI,KAAK,OAAO,IAAI,KAAK;AACxC,YAAI,OAAO,UAAU,UAAU;AAC7B,cAAI,iBAAiB,OAAO;AAC1B,qBAAS;AACT,oBAAQ,OAAO,IAAI;AAAA,UACrB;AACA,kBAAQ,KAAK,SAAS,KAAK,KAAK;AAAA,QAClC;AACA,eAAO;AAAA,MACT;AACA,aAAO,KAAK,KAAK;AACjB,UAAI,QAAQ,gBAAgB,OAAO,QAAQ,GAAG,GAAG,QAAQ,CAAC,GAAG,GAAG,KAAK,UAAU;AAC/E,aAAO,MAAM;AACX,gBAAQ,MAAM,MAAM,SAAS,CAAC;AAC9B,YAAI,KAAK,eAAe,KAAK,GAAG;AAC9B,mBAAS,KAAK,eAAe,KAAK;AAAA,QACpC,OAAO;AACL,cAAI,WAAW,QAAQ,OAAO,UAAU,aAAa;AACnD,qBAAS,IAAI;AAAA,UACf;AACA,mBAAS,MAAM,KAAK,KAAK,MAAM,KAAK,EAAE,MAAM;AAAA,QAC9C;AACA,YAAI,OAAO,WAAW,eAAe,CAAC,OAAO,UAAU,CAAC,OAAO,CAAC,GAAG;AACjE,cAAI,SAAS;AACb,qBAAW,CAAC;AACZ,eAAK,KAAK,MAAM,KAAK,GAAG;AACtB,gBAAI,KAAK,WAAW,CAAC,KAAK,IAAI,QAAQ;AACpC,uBAAS,KAAK,MAAM,KAAK,WAAW,CAAC,IAAI,GAAG;AAAA,YAC9C;AAAA,UACF;AACA,cAAI,OAAO,cAAc;AACvB,qBAAS,0BAA0B,WAAW,KAAK,QAAQ,OAAO,aAAa,IAAI,iBAAiB,SAAS,KAAK,IAAI,IAAI,aAAa,KAAK,WAAW,MAAM,KAAK,UAAU;AAAA,UAC9K,OAAO;AACL,qBAAS,0BAA0B,WAAW,KAAK,mBAAmB,UAAU,MAAM,iBAAiB,OAAO,KAAK,WAAW,MAAM,KAAK,UAAU;AAAA,UACrJ;AACA,eAAK,WAAW,QAAQ;AAAA,YACtB,MAAM,OAAO;AAAA,YACb,OAAO,KAAK,WAAW,MAAM,KAAK;AAAA,YAClC,MAAM,OAAO;AAAA,YACb,KAAK;AAAA,YACL;AAAA,UACF,CAAC;AAAA,QACH;AACA,YAAI,OAAO,CAAC,aAAa,SAAS,OAAO,SAAS,GAAG;AACnD,gBAAM,IAAI,MAAM,sDAAsD,QAAQ,cAAc,MAAM;AAAA,QACpG;AACA,gBAAQ,OAAO,CAAC,GAAG;AAAA,UACjB,KAAK;AACH,kBAAM,KAAK,MAAM;AACjB,mBAAO,KAAK,OAAO,MAAM;AACzB,mBAAO,KAAK,OAAO,MAAM;AACzB,kBAAM,KAAK,OAAO,CAAC,CAAC;AACpB,qBAAS;AACT,gBAAI,CAAC,gBAAgB;AACnB,uBAAS,OAAO;AAChB,uBAAS,OAAO;AAChB,yBAAW,OAAO;AAClB,sBAAQ,OAAO;AACf,kBAAI,aAAa,GAAG;AAClB;AAAA,cACF;AAAA,YACF,OAAO;AACL,uBAAS;AACT,+BAAiB;AAAA,YACnB;AACA;AAAA,UACF,KAAK;AACH,kBAAM,KAAK,aAAa,OAAO,CAAC,CAAC,EAAE,CAAC;AACpC,kBAAM,IAAI,OAAO,OAAO,SAAS,GAAG;AACpC,kBAAM,KAAK;AAAA,cACT,YAAY,OAAO,OAAO,UAAU,OAAO,EAAE,EAAE;AAAA,cAC/C,WAAW,OAAO,OAAO,SAAS,CAAC,EAAE;AAAA,cACrC,cAAc,OAAO,OAAO,UAAU,OAAO,EAAE,EAAE;AAAA,cACjD,aAAa,OAAO,OAAO,SAAS,CAAC,EAAE;AAAA,YACzC;AACA,gBAAI,QAAQ;AACV,oBAAM,GAAG,QAAQ;AAAA,gBACf,OAAO,OAAO,UAAU,OAAO,EAAE,EAAE,MAAM,CAAC;AAAA,gBAC1C,OAAO,OAAO,SAAS,CAAC,EAAE,MAAM,CAAC;AAAA,cACnC;AAAA,YACF;AACA,gBAAI,KAAK,cAAc,MAAM,OAAO;AAAA,cAClC;AAAA,cACA;AAAA,cACA;AAAA,cACA,YAAY;AAAA,cACZ,OAAO,CAAC;AAAA,cACR;AAAA,cACA;AAAA,YACF,EAAE,OAAO,IAAI,CAAC;AACd,gBAAI,OAAO,MAAM,aAAa;AAC5B,qBAAO;AAAA,YACT;AACA,gBAAI,KAAK;AACP,sBAAQ,MAAM,MAAM,GAAG,KAAK,MAAM,CAAC;AACnC,uBAAS,OAAO,MAAM,GAAG,KAAK,GAAG;AACjC,uBAAS,OAAO,MAAM,GAAG,KAAK,GAAG;AAAA,YACnC;AACA,kBAAM,KAAK,KAAK,aAAa,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;AAC1C,mBAAO,KAAK,MAAM,CAAC;AACnB,mBAAO,KAAK,MAAM,EAAE;AACpB,uBAAW,MAAM,MAAM,MAAM,SAAS,CAAC,CAAC,EAAE,MAAM,MAAM,SAAS,CAAC,CAAC;AACjE,kBAAM,KAAK,QAAQ;AACnB;AAAA,UACF,KAAK;AACH,mBAAO;AAAA,QACX;AAAA,MACF;AACA,aAAO;AAAA,IACT,GAAG,OAAO;AAAA,EACZ;AACA,MAAI,QAAwB,WAAW;AACrC,QAAI,SAAS;AAAA,MACX,KAAK;AAAA,MACL,YAA4B,OAAO,SAAS,WAAW,KAAK,MAAM;AAChE,YAAI,KAAK,GAAG,QAAQ;AAClB,eAAK,GAAG,OAAO,WAAW,KAAK,IAAI;AAAA,QACrC,OAAO;AACL,gBAAM,IAAI,MAAM,GAAG;AAAA,QACrB;AAAA,MACF,GAAG,YAAY;AAAA;AAAA,MAEf,UAA0B,OAAO,SAAS,OAAO,IAAI;AACnD,aAAK,KAAK,MAAM,KAAK,MAAM,CAAC;AAC5B,aAAK,SAAS;AACd,aAAK,QAAQ,KAAK,aAAa,KAAK,OAAO;AAC3C,aAAK,WAAW,KAAK,SAAS;AAC9B,aAAK,SAAS,KAAK,UAAU,KAAK,QAAQ;AAC1C,aAAK,iBAAiB,CAAC,SAAS;AAChC,aAAK,SAAS;AAAA,UACZ,YAAY;AAAA,UACZ,cAAc;AAAA,UACd,WAAW;AAAA,UACX,aAAa;AAAA,QACf;AACA,YAAI,KAAK,QAAQ,QAAQ;AACvB,eAAK,OAAO,QAAQ,CAAC,GAAG,CAAC;AAAA,QAC3B;AACA,aAAK,SAAS;AACd,eAAO;AAAA,MACT,GAAG,UAAU;AAAA;AAAA,MAEb,OAAuB,OAAO,WAAW;AACvC,YAAI,KAAK,KAAK,OAAO,CAAC;AACtB,aAAK,UAAU;AACf,aAAK;AACL,aAAK;AACL,aAAK,SAAS;AACd,aAAK,WAAW;AAChB,YAAI,QAAQ,GAAG,MAAM,iBAAiB;AACtC,YAAI,OAAO;AACT,eAAK;AACL,eAAK,OAAO;AAAA,QACd,OAAO;AACL,eAAK,OAAO;AAAA,QACd;AACA,YAAI,KAAK,QAAQ,QAAQ;AACvB,eAAK,OAAO,MAAM,CAAC;AAAA,QACrB;AACA,aAAK,SAAS,KAAK,OAAO,MAAM,CAAC;AACjC,eAAO;AAAA,MACT,GAAG,OAAO;AAAA;AAAA,MAEV,OAAuB,OAAO,SAAS,IAAI;AACzC,YAAI,MAAM,GAAG;AACb,YAAI,QAAQ,GAAG,MAAM,eAAe;AACpC,aAAK,SAAS,KAAK,KAAK;AACxB,aAAK,SAAS,KAAK,OAAO,OAAO,GAAG,KAAK,OAAO,SAAS,GAAG;AAC5D,aAAK,UAAU;AACf,YAAI,WAAW,KAAK,MAAM,MAAM,eAAe;AAC/C,aAAK,QAAQ,KAAK,MAAM,OAAO,GAAG,KAAK,MAAM,SAAS,CAAC;AACvD,aAAK,UAAU,KAAK,QAAQ,OAAO,GAAG,KAAK,QAAQ,SAAS,CAAC;AAC7D,YAAI,MAAM,SAAS,GAAG;AACpB,eAAK,YAAY,MAAM,SAAS;AAAA,QAClC;AACA,YAAI,IAAI,KAAK,OAAO;AACpB,aAAK,SAAS;AAAA,UACZ,YAAY,KAAK,OAAO;AAAA,UACxB,WAAW,KAAK,WAAW;AAAA,UAC3B,cAAc,KAAK,OAAO;AAAA,UAC1B,aAAa,SAAS,MAAM,WAAW,SAAS,SAAS,KAAK,OAAO,eAAe,KAAK,SAAS,SAAS,SAAS,MAAM,MAAM,EAAE,SAAS,MAAM,CAAC,EAAE,SAAS,KAAK,OAAO,eAAe;AAAA,QAC1L;AACA,YAAI,KAAK,QAAQ,QAAQ;AACvB,eAAK,OAAO,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,KAAK,SAAS,GAAG;AAAA,QACrD;AACA,aAAK,SAAS,KAAK,OAAO;AAC1B,eAAO;AAAA,MACT,GAAG,OAAO;AAAA;AAAA,MAEV,MAAsB,OAAO,WAAW;AACtC,aAAK,QAAQ;AACb,eAAO;AAAA,MACT,GAAG,MAAM;AAAA;AAAA,MAET,QAAwB,OAAO,WAAW;AACxC,YAAI,KAAK,QAAQ,iBAAiB;AAChC,eAAK,aAAa;AAAA,QACpB,OAAO;AACL,iBAAO,KAAK,WAAW,4BAA4B,KAAK,WAAW,KAAK,qIAAqI,KAAK,aAAa,GAAG;AAAA,YAChO,MAAM;AAAA,YACN,OAAO;AAAA,YACP,MAAM,KAAK;AAAA,UACb,CAAC;AAAA,QACH;AACA,eAAO;AAAA,MACT,GAAG,QAAQ;AAAA;AAAA,MAEX,MAAsB,OAAO,SAAS,GAAG;AACvC,aAAK,MAAM,KAAK,MAAM,MAAM,CAAC,CAAC;AAAA,MAChC,GAAG,MAAM;AAAA;AAAA,MAET,WAA2B,OAAO,WAAW;AAC3C,YAAI,OAAO,KAAK,QAAQ,OAAO,GAAG,KAAK,QAAQ,SAAS,KAAK,MAAM,MAAM;AACzE,gBAAQ,KAAK,SAAS,KAAK,QAAQ,MAAM,KAAK,OAAO,GAAG,EAAE,QAAQ,OAAO,EAAE;AAAA,MAC7E,GAAG,WAAW;AAAA;AAAA,MAEd,eAA+B,OAAO,WAAW;AAC/C,YAAI,OAAO,KAAK;AAChB,YAAI,KAAK,SAAS,IAAI;AACpB,kBAAQ,KAAK,OAAO,OAAO,GAAG,KAAK,KAAK,MAAM;AAAA,QAChD;AACA,gBAAQ,KAAK,OAAO,GAAG,EAAE,KAAK,KAAK,SAAS,KAAK,QAAQ,KAAK,QAAQ,OAAO,EAAE;AAAA,MACjF,GAAG,eAAe;AAAA;AAAA,MAElB,cAA8B,OAAO,WAAW;AAC9C,YAAI,MAAM,KAAK,UAAU;AACzB,YAAI,IAAI,IAAI,MAAM,IAAI,SAAS,CAAC,EAAE,KAAK,GAAG;AAC1C,eAAO,MAAM,KAAK,cAAc,IAAI,OAAO,IAAI;AAAA,MACjD,GAAG,cAAc;AAAA;AAAA,MAEjB,YAA4B,OAAO,SAAS,OAAO,cAAc;AAC/D,YAAI,OAAO,OAAO;AAClB,YAAI,KAAK,QAAQ,iBAAiB;AAChC,mBAAS;AAAA,YACP,UAAU,KAAK;AAAA,YACf,QAAQ;AAAA,cACN,YAAY,KAAK,OAAO;AAAA,cACxB,WAAW,KAAK;AAAA,cAChB,cAAc,KAAK,OAAO;AAAA,cAC1B,aAAa,KAAK,OAAO;AAAA,YAC3B;AAAA,YACA,QAAQ,KAAK;AAAA,YACb,OAAO,KAAK;AAAA,YACZ,SAAS,KAAK;AAAA,YACd,SAAS,KAAK;AAAA,YACd,QAAQ,KAAK;AAAA,YACb,QAAQ,KAAK;AAAA,YACb,OAAO,KAAK;AAAA,YACZ,QAAQ,KAAK;AAAA,YACb,IAAI,KAAK;AAAA,YACT,gBAAgB,KAAK,eAAe,MAAM,CAAC;AAAA,YAC3C,MAAM,KAAK;AAAA,UACb;AACA,cAAI,KAAK,QAAQ,QAAQ;AACvB,mBAAO,OAAO,QAAQ,KAAK,OAAO,MAAM,MAAM,CAAC;AAAA,UACjD;AAAA,QACF;AACA,gBAAQ,MAAM,CAAC,EAAE,MAAM,iBAAiB;AACxC,YAAI,OAAO;AACT,eAAK,YAAY,MAAM;AAAA,QACzB;AACA,aAAK,SAAS;AAAA,UACZ,YAAY,KAAK,OAAO;AAAA,UACxB,WAAW,KAAK,WAAW;AAAA,UAC3B,cAAc,KAAK,OAAO;AAAA,UAC1B,aAAa,QAAQ,MAAM,MAAM,SAAS,CAAC,EAAE,SAAS,MAAM,MAAM,SAAS,CAAC,EAAE,MAAM,QAAQ,EAAE,CAAC,EAAE,SAAS,KAAK,OAAO,cAAc,MAAM,CAAC,EAAE;AAAA,QAC/I;AACA,aAAK,UAAU,MAAM,CAAC;AACtB,aAAK,SAAS,MAAM,CAAC;AACrB,aAAK,UAAU;AACf,aAAK,SAAS,KAAK,OAAO;AAC1B,YAAI,KAAK,QAAQ,QAAQ;AACvB,eAAK,OAAO,QAAQ,CAAC,KAAK,QAAQ,KAAK,UAAU,KAAK,MAAM;AAAA,QAC9D;AACA,aAAK,QAAQ;AACb,aAAK,aAAa;AAClB,aAAK,SAAS,KAAK,OAAO,MAAM,MAAM,CAAC,EAAE,MAAM;AAC/C,aAAK,WAAW,MAAM,CAAC;AACvB,gBAAQ,KAAK,cAAc,KAAK,MAAM,KAAK,IAAI,MAAM,cAAc,KAAK,eAAe,KAAK,eAAe,SAAS,CAAC,CAAC;AACtH,YAAI,KAAK,QAAQ,KAAK,QAAQ;AAC5B,eAAK,OAAO;AAAA,QACd;AACA,YAAI,OAAO;AACT,iBAAO;AAAA,QACT,WAAW,KAAK,YAAY;AAC1B,mBAAS,KAAK,QAAQ;AACpB,iBAAK,CAAC,IAAI,OAAO,CAAC;AAAA,UACpB;AACA,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT,GAAG,YAAY;AAAA;AAAA,MAEf,MAAsB,OAAO,WAAW;AACtC,YAAI,KAAK,MAAM;AACb,iBAAO,KAAK;AAAA,QACd;AACA,YAAI,CAAC,KAAK,QAAQ;AAChB,eAAK,OAAO;AAAA,QACd;AACA,YAAI,OAAO,OAAO,WAAW;AAC7B,YAAI,CAAC,KAAK,OAAO;AACf,eAAK,SAAS;AACd,eAAK,QAAQ;AAAA,QACf;AACA,YAAI,QAAQ,KAAK,cAAc;AAC/B,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,sBAAY,KAAK,OAAO,MAAM,KAAK,MAAM,MAAM,CAAC,CAAC,CAAC;AAClD,cAAI,cAAc,CAAC,SAAS,UAAU,CAAC,EAAE,SAAS,MAAM,CAAC,EAAE,SAAS;AAClE,oBAAQ;AACR,oBAAQ;AACR,gBAAI,KAAK,QAAQ,iBAAiB;AAChC,sBAAQ,KAAK,WAAW,WAAW,MAAM,CAAC,CAAC;AAC3C,kBAAI,UAAU,OAAO;AACnB,uBAAO;AAAA,cACT,WAAW,KAAK,YAAY;AAC1B,wBAAQ;AACR;AAAA,cACF,OAAO;AACL,uBAAO;AAAA,cACT;AAAA,YACF,WAAW,CAAC,KAAK,QAAQ,MAAM;AAC7B;AAAA,YACF;AAAA,UACF;AAAA,QACF;AACA,YAAI,OAAO;AACT,kBAAQ,KAAK,WAAW,OAAO,MAAM,KAAK,CAAC;AAC3C,cAAI,UAAU,OAAO;AACnB,mBAAO;AAAA,UACT;AACA,iBAAO;AAAA,QACT;AACA,YAAI,KAAK,WAAW,IAAI;AACtB,iBAAO,KAAK;AAAA,QACd,OAAO;AACL,iBAAO,KAAK,WAAW,4BAA4B,KAAK,WAAW,KAAK,2BAA2B,KAAK,aAAa,GAAG;AAAA,YACtH,MAAM;AAAA,YACN,OAAO;AAAA,YACP,MAAM,KAAK;AAAA,UACb,CAAC;AAAA,QACH;AAAA,MACF,GAAG,MAAM;AAAA;AAAA,MAET,KAAqB,OAAO,SAAS,MAAM;AACzC,YAAI,IAAI,KAAK,KAAK;AAClB,YAAI,GAAG;AACL,iBAAO;AAAA,QACT,OAAO;AACL,iBAAO,KAAK,IAAI;AAAA,QAClB;AAAA,MACF,GAAG,KAAK;AAAA;AAAA,MAER,OAAuB,OAAO,SAAS,MAAM,WAAW;AACtD,aAAK,eAAe,KAAK,SAAS;AAAA,MACpC,GAAG,OAAO;AAAA;AAAA,MAEV,UAA0B,OAAO,SAAS,WAAW;AACnD,YAAI,IAAI,KAAK,eAAe,SAAS;AACrC,YAAI,IAAI,GAAG;AACT,iBAAO,KAAK,eAAe,IAAI;AAAA,QACjC,OAAO;AACL,iBAAO,KAAK,eAAe,CAAC;AAAA,QAC9B;AAAA,MACF,GAAG,UAAU;AAAA;AAAA,MAEb,eAA+B,OAAO,SAAS,gBAAgB;AAC7D,YAAI,KAAK,eAAe,UAAU,KAAK,eAAe,KAAK,eAAe,SAAS,CAAC,GAAG;AACrF,iBAAO,KAAK,WAAW,KAAK,eAAe,KAAK,eAAe,SAAS,CAAC,CAAC,EAAE;AAAA,QAC9E,OAAO;AACL,iBAAO,KAAK,WAAW,SAAS,EAAE;AAAA,QACpC;AAAA,MACF,GAAG,eAAe;AAAA;AAAA,MAElB,UAA0B,OAAO,SAAS,SAAS,GAAG;AACpD,YAAI,KAAK,eAAe,SAAS,IAAI,KAAK,IAAI,KAAK,CAAC;AACpD,YAAI,KAAK,GAAG;AACV,iBAAO,KAAK,eAAe,CAAC;AAAA,QAC9B,OAAO;AACL,iBAAO;AAAA,QACT;AAAA,MACF,GAAG,UAAU;AAAA;AAAA,MAEb,WAA2B,OAAO,SAAS,UAAU,WAAW;AAC9D,aAAK,MAAM,SAAS;AAAA,MACtB,GAAG,WAAW;AAAA;AAAA,MAEd,gBAAgC,OAAO,SAAS,iBAAiB;AAC/D,eAAO,KAAK,eAAe;AAAA,MAC7B,GAAG,gBAAgB;AAAA,MACnB,SAAS,CAAC;AAAA,MACV,eAA+B,OAAO,SAAS,UAAU,IAAI,KAAK,2BAA2B,UAAU;AACrG,YAAI,UAAU;AACd,gBAAQ,2BAA2B;AAAA,UACjC,KAAK;AACH,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,mBAAmB;AACxC,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,gBAAgB;AACrC,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,mBAAmB;AACxC,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,KAAK,IAAI,MAAM;AACpC;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,KAAK,IAAI,MAAM;AACpC;AAAA,UACF,KAAK;AACH,mBAAO;AACP;AAAA,UACF,KAAK;AACH,gBAAI,SAAS;AACb,mBAAO;AACP;AAAA,UACF,KAAK;AACH,gBAAI,SAAS,IAAI,OAAO,QAAQ,cAAc,EAAE;AAChD,eAAG,UAAU,EAAE,MAAM,iBAAiB,IAAI,MAAM;AAChD,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,UAAU,WAAW;AAC1B;AAAA,UACF,KAAK;AACH,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd;AAAA,UACF,KAAK;AACH,iBAAK,UAAU,QAAQ;AACvB;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,qBAAqB,IAAI,MAAM;AACpD,iBAAK,SAAS;AACd;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,iBAAiB,IAAI,MAAM;AAChD,mBAAO;AACP;AAAA,UACF,KAAK;AACH,gBAAI,SAAS,IAAI,OAAO,QAAQ,WAAW,EAAE;AAC7C,eAAG,UAAU,EAAE,MAAM,mBAAmB,IAAI,MAAM;AAClD,mBAAO;AACP;AAAA,UACF,KAAK;AACH,gBAAI,SAAS;AACb,eAAG,UAAU,EAAE,MAAM,iBAAiB,IAAI,MAAM;AAChD,mBAAO;AACP;AAAA,UACF,KAAK;AACH,mBAAO;AACP;AAAA,UACF,KAAK;AACH,mBAAO;AACP;AAAA,UACF,KAAK;AACH,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,UAAU,UAAU;AACzB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,iBAAK,UAAU,YAAY;AAC3B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,iBAAK,UAAU,YAAY;AAC3B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,UAAU,OAAO;AACtB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,iBAAK,UAAU,aAAa;AAC5B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,UAAU,aAAa;AAC5B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,iBAAK,UAAU,kBAAkB;AACjC,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,UAAU,WAAW;AAC1B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,UAAU,WAAW;AAC1B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,UAAU,qBAAqB;AACpC;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd;AAAA,UACF,KAAK;AACH,mBAAO;AACP;AAAA,UACF,KAAK;AACH,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,eAAG,UAAU,EAAE,MAAM,SAAS;AAC9B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,eAAG,UAAU,EAAE,MAAM,SAAS;AAC9B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,eAAG,UAAU,EAAE,MAAM,SAAS;AAC9B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,eAAG,UAAU,EAAE,MAAM,SAAS;AAC9B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,eAAG,UAAU,EAAE,MAAM,SAAS;AAC9B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,eAAG,UAAU,EAAE,MAAM,SAAS;AAC9B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,eAAG,UAAU,EAAE,MAAM,SAAS;AAC9B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,eAAG,UAAU,EAAE,MAAM,SAAS;AAC9B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,eAAG,UAAU,EAAE,MAAM,SAAS;AAC9B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,eAAG,UAAU,EAAE,MAAM,QAAQ;AAC7B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,eAAG,UAAU,EAAE,MAAM,SAAS;AAC9B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,eAAG,UAAU,EAAE,MAAM,SAAS;AAC9B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,eAAG,UAAU,EAAE,MAAM,SAAS;AAC9B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,eAAG,UAAU,EAAE,MAAM,SAAS;AAC9B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,eAAG,UAAU,EAAE,MAAM,QAAQ;AAC7B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,eAAG,UAAU,EAAE,MAAM,SAAS;AAC9B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,eAAG,UAAU,EAAE,MAAM,QAAQ;AAC7B,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,UAAU;AAC/B,iBAAK,UAAU,MAAM;AACrB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,UAAU;AAC/B,iBAAK,UAAU,MAAM;AACrB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,UAAU;AAC/B,iBAAK,UAAU,MAAM;AACrB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,SAAS;AAC9B,iBAAK,UAAU,MAAM;AACrB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,UAAU;AAC/B,iBAAK,UAAU,MAAM;AACrB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,SAAS;AAC9B,iBAAK,UAAU,MAAM;AACrB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,SAAS;AAC9B,iBAAK,UAAU,MAAM;AACrB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,SAAS;AAC9B,iBAAK,UAAU,MAAM;AACrB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,SAAS;AAC9B,iBAAK,UAAU,MAAM;AACrB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,UAAU;AAC/B,iBAAK,UAAU,MAAM;AACrB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,SAAS;AAC9B,iBAAK,UAAU,MAAM;AACrB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,UAAU,MAAM;AACrB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,UAAU,MAAM;AACrB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,UAAU,MAAM;AACrB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,UAAU,MAAM;AACrB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,UAAU,MAAM;AACrB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,UAAU,MAAM;AACrB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,UAAU,MAAM;AACrB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,SAAS;AAC9B,iBAAK,UAAU,MAAM;AACrB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,UAAU,aAAa;AAC5B,eAAG,UAAU,EAAE,MAAM,eAAe;AACpC,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,gBAAgB,IAAI,MAAM;AAC/C,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,YAAY,IAAI,MAAM;AAC3C,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,UAAU,WAAW;AAC1B;AAAA,UACF,KAAK;AACH,iBAAK,UAAU,WAAW;AAC1B;AAAA,UACF,KAAK;AACH,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,sBAAsB;AAC3C,iBAAK,UAAU,QAAQ;AACvB;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,0BAA0B;AAC/C,iBAAK,UAAU,QAAQ;AACvB;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,oBAAoB,IAAI,MAAM;AACnD,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,aAAa;AAClC,iBAAK,SAAS;AACd;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,YAAY;AACjC,iBAAK,UAAU,WAAW;AAC1B;AAAA,UACF,KAAK;AACH,gBAAI,SAAS,IAAI,OAAO,QAAQ,SAAS,EAAE;AAC3C,eAAG,UAAU,EAAE,MAAM,qBAAqB,IAAI,MAAM;AACpD,mBAAO;AACP;AAAA,UACF,KAAK;AACH,gBAAI,SAAS,IAAI,OAAO,QAAQ,SAAS,EAAE;AAC3C,eAAG,UAAU,EAAE,MAAM,eAAe,IAAI,MAAM;AAC9C,mBAAO;AACP;AAAA,UACF,KAAK;AACH,gBAAI,SAAS,IAAI,OAAO,QAAQ,SAAS,EAAE;AAC3C,eAAG,UAAU,EAAE,MAAM,YAAY,IAAI,MAAM;AAC3C,mBAAO;AACP;AAAA,UACF,KAAK;AACH,gBAAI,SAAS,IAAI,OAAO,QAAQ,SAAS,EAAE;AAC3C,eAAG,UAAU,EAAE,MAAM,YAAY,IAAI,MAAM;AAC3C,mBAAO;AACP;AAAA,UACF,KAAK;AACH,gBAAI,SAAS,IAAI,OAAO,QAAQ,SAAS,EAAE;AAC3C,eAAG,UAAU,EAAE,MAAM,aAAa,IAAI,MAAM;AAC5C,mBAAO;AACP;AAAA,UACF,KAAK;AACH,gBAAI,SAAS,IAAI,OAAO,QAAQ,SAAS,EAAE;AAC3C,eAAG,UAAU,EAAE,MAAM,eAAe,IAAI,MAAM;AAC9C,mBAAO;AACP;AAAA,UACF,KAAK;AACH,gBAAI,SAAS;AACb,eAAG,UAAU,EAAE,MAAM,wBAAwB,IAAI,MAAM;AACvD,iBAAK,SAAS;AACd,iBAAK,SAAS;AACd,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,aAAa,MAAM,IAAI,SAAS,GAAG;AACxD,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,aAAa,IAAI,MAAM;AAC5C,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,aAAa,IAAI,MAAM;AAC5C,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,aAAa,IAAI,MAAM;AAC5C,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,mBAAmB,IAAI,MAAM;AAClD,iBAAK,UAAU,QAAQ;AACvB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,mBAAmB,IAAI,MAAM;AAClD,iBAAK,UAAU,QAAQ;AACvB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,mBAAmB,IAAI,MAAM;AAClD,iBAAK,UAAU,QAAQ;AACvB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,UAAU,WAAW;AAC1B;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,sBAAsB;AAC3C,iBAAK,UAAU,QAAQ;AACvB,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,eAAG,UAAU,EAAE,MAAM,aAAa,MAAM,IAAI,SAAS,GAAG;AACxD,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,eAAG,UAAU,EAAE,MAAM,aAAa,IAAI,MAAM;AAC5C,mBAAO;AACP;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd,eAAG,UAAU,EAAE,MAAM,aAAa,IAAI,MAAM;AAC5C,mBAAO;AACP;AAAA,UACF,KAAK;AACH,eAAG,UAAU,EAAE,MAAM,cAAc,IAAI,MAAM;AAC7C,gBAAI,SAAS,IAAI,OAAO,MAAM,CAAC;AAC/B,mBAAO;AACP;AAAA,QACJ;AAAA,MACF,GAAG,WAAW;AAAA,MACd,OAAO,CAAC,qBAAqB,iBAAiB,iBAAiB,eAAe,cAAc,cAAc,kCAAkC,yBAAyB,wBAAwB,eAAe,eAAe,eAAe,YAAY,YAAY,cAAc,oBAAoB,gBAAgB,kBAAkB,oBAAoB,sBAAsB,oBAAoB,mBAAmB,eAAe,eAAe,iBAAiB,2BAA2B,eAAe,iBAAiB,2BAA2B,eAAe,wBAAwB,wBAAwB,wBAAwB,wBAAwB,yBAAyB,aAAa,eAAe,iBAAiB,eAAe,eAAe,eAAe,aAAa,WAAW,YAAY,YAAY,aAAa,aAAa,WAAW,aAAa,aAAa,aAAa,aAAa,aAAa,YAAY,aAAa,YAAY,YAAY,aAAa,WAAW,eAAe,aAAa,aAAa,WAAW,UAAU,aAAa,WAAW,aAAa,aAAa,aAAa,eAAe,aAAa,aAAa,aAAa,WAAW,YAAY,kCAAkC,UAAU,eAAe,eAAe,eAAe,eAAe,YAAY,YAAY,cAAc,YAAY,iBAAiB,sBAAsB,qBAAqB,kBAAkB,kBAAkB,mBAAmB,qBAAqB,cAAc,8BAA8B,8BAA8B,iCAAiC,sBAAsB,uBAAuB,uBAAuB,wBAAwB,eAAe,YAAY,8BAA8B,8BAA8B,iCAAiC,WAAW;AAAA,MACnxD,YAAY,EAAE,oBAAoB,EAAE,SAAS,CAAC,EAAE,GAAG,aAAa,MAAM,GAAG,eAAe,EAAE,SAAS,CAAC,EAAE,GAAG,aAAa,MAAM,GAAG,cAAc,EAAE,SAAS,CAAC,EAAE,GAAG,aAAa,MAAM,GAAG,YAAY,EAAE,SAAS,CAAC,IAAI,EAAE,GAAG,aAAa,MAAM,GAAG,eAAe,EAAE,SAAS,CAAC,EAAE,GAAG,aAAa,MAAM,GAAG,SAAS,EAAE,SAAS,CAAC,EAAE,GAAG,aAAa,MAAM,GAAG,UAAU,EAAE,SAAS,CAAC,KAAK,KAAK,KAAK,KAAK,GAAG,GAAG,aAAa,MAAM,GAAG,aAAa,EAAE,SAAS,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,aAAa,MAAM,GAAG,eAAe,EAAE,SAAS,CAAC,IAAI,IAAI,EAAE,GAAG,aAAa,MAAM,GAAG,QAAQ,EAAE,SAAS,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,aAAa,MAAM,GAAG,aAAa,EAAE,SAAS,CAAC,IAAI,IAAI,IAAI,EAAE,GAAG,aAAa,MAAM,GAAG,SAAS,EAAE,SAAS,CAAC,GAAG,aAAa,MAAM,GAAG,UAAU,EAAE,SAAS,CAAC,IAAI,IAAI,IAAI,EAAE,GAAG,aAAa,MAAM,GAAG,uBAAuB,EAAE,SAAS,CAAC,IAAI,EAAE,GAAG,aAAa,MAAM,GAAG,aAAa,EAAE,SAAS,CAAC,EAAE,GAAG,aAAa,MAAM,GAAG,aAAa,EAAE,SAAS,CAAC,EAAE,GAAG,aAAa,MAAM,GAAG,WAAW,EAAE,SAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,aAAa,KAAK,EAAE;AAAA,IACtuC;AACA,WAAO;AAAA,EACT,EAAE;AACF,UAAQ,QAAQ;AAChB,WAAS,SAAS;AAChB,SAAK,KAAK,CAAC;AAAA,EACb;AACA,SAAO,QAAQ,QAAQ;AACvB,SAAO,YAAY;AACnB,UAAQ,SAAS;AACjB,SAAO,IAAI,OAAO;AACpB,EAAE;AACF,OAAO,SAAS;AAChB,IAAI,gBAAgB;AAIpB,IAAI,gBAAgC,oBAAI,IAAI;AAC5C,IAAI,WAAW,CAAC;AAChB,IAAI,YAA4B,oBAAI,IAAI;AACxC,IAAI,gBAAgB;AACpB,IAAI,eAAe;AACnB,IAAI,UAAU;AACd,IAAI,iBAAiB;AACrB,IAAI,SAAS,WAAW;AACxB,IAAI,UAA0B,oBAAI,IAAI;AACtC,IAAI,eAA+B,OAAO,CAAC,QAAQ,eAAe,aAAa,KAAK,MAAM,GAAG,cAAc;AAC3G,IAAI,gBAAgC,OAAO,SAAS,IAAI,kBAAkB,IAAI;AAC5E,MAAI,aAAa,QAAQ,IAAI,EAAE;AAC/B,MAAI,CAAC,YAAY;AACf,iBAAa,EAAE,IAAI,QAAQ,CAAC,GAAG,YAAY,CAAC,EAAE;AAC9C,YAAQ,IAAI,IAAI,UAAU;AAAA,EAC5B;AACA,MAAI,oBAAoB,UAAU,oBAAoB,MAAM;AAC1D,oBAAgB,MAAM,cAAc,EAAE,QAAQ,CAAC,WAAW;AACxD,YAAM,cAAc,OAAO,QAAQ,YAAY,IAAI,EAAE,KAAK;AAC1D,UAAI,OAAO,aAAa,EAAE,KAAK,MAAM,GAAG;AACtC,cAAM,YAAY,YAAY,QAAQ,cAAc,OAAO;AAC3D,cAAM,YAAY,UAAU,QAAQ,eAAe,YAAY;AAC/D,mBAAW,WAAW,KAAK,SAAS;AAAA,MACtC;AACA,iBAAW,OAAO,KAAK,WAAW;AAAA,IACpC,CAAC;AAAA,EACH;AACF,GAAG,eAAe;AAClB,IAAI,gBAAgC,OAAO,SAAS,IAAI,SAAS,IAAI;AACnE,QAAM,aAAa,cAAc,IAAI,EAAE;AACvC,MAAI,WAAW,UAAU,WAAW,MAAM;AACxC,eAAW,SAAS,OAAO,MAAM,cAAc;AAAA,EACjD;AACF,GAAG,eAAe;AAClB,IAAI,cAA8B,OAAO,SAAS,SAAS,cAAc;AACvE,UAAQ,MAAM,GAAG,EAAE,QAAQ,SAAS,IAAI;AACtC,QAAI,aAAa,cAAc,IAAI,EAAE;AACrC,QAAI,eAAe,QAAQ;AACzB,YAAM,YAAY,GAAG,KAAK;AAC1B,mBAAa,EAAE,IAAI,WAAW,MAAM,MAAM,UAAU,CAAC,EAAE;AACvD,oBAAc,IAAI,WAAW,UAAU;AAAA,IACzC;AACA,QAAI,CAAC,WAAW,SAAS;AACvB,iBAAW,UAAU,CAAC;AAAA,IACxB;AACA,eAAW,QAAQ,KAAK,YAAY;AAAA,EACtC,CAAC;AACH,GAAG,aAAa;AAChB,IAAI,wBAAwC,OAAO,CAAC,YAAY,WAAW;AACzE,QAAM,YAAY,WAAW,KAAK;AAClC,QAAM,WAAW,CAAC;AAClB,aAAW,SAAS,WAAW;AAC7B,QAAI,MAAM,OAAO;AACf,YAAM,QAAQ,aAAa,MAAM,KAAK;AAAA,IACxC;AACA,QAAI,MAAM,SAAS,YAAY;AAC7B,oBAAc,MAAM,IAAI,MAAM,GAAG;AACjC;AAAA,IACF;AACA,QAAI,MAAM,SAAS,cAAc;AAC/B,kBAAY,MAAM,KAAI,+BAAO,eAAc,EAAE;AAC7C;AAAA,IACF;AACA,QAAI,MAAM,SAAS,eAAe;AAChC,UAAI,+BAAO,WAAW;AACpB,sBAAc,MAAM,IAAI,+BAAO,SAAS;AAAA,MAC1C;AACA;AAAA,IACF;AACA,QAAI,MAAM,SAAS,kBAAkB;AACnC,aAAO,UAAU,MAAM,WAAW;AAAA,IACpC,WAAW,MAAM,SAAS,QAAQ;AAChC,YAAM,SAAS,UAAU,IAAI,MAAM,EAAE,KAAK,KAAK;AAC/C,gBAAU,IAAI,MAAM,IAAI,KAAK;AAC7B,YAAM,KAAK,QAAQ,MAAM,MAAM;AAC/B,eAAS,KAAK,KAAK;AAAA,IACrB,OAAO;AACL,UAAI,CAAC,MAAM,OAAO;AAChB,YAAI,MAAM,SAAS,aAAa;AAC9B,gBAAM,QAAQ;AAAA,QAChB,OAAO;AACL,gBAAM,QAAQ,MAAM;AAAA,QACtB;AAAA,MACF;AACA,YAAM,gBAAgB,cAAc,IAAI,MAAM,EAAE;AAChD,UAAI,kBAAkB,QAAQ;AAC5B,sBAAc,IAAI,MAAM,IAAI,KAAK;AAAA,MACnC,OAAO;AACL,YAAI,MAAM,SAAS,MAAM;AACvB,wBAAc,OAAO,MAAM;AAAA,QAC7B;AACA,YAAI,MAAM,UAAU,MAAM,IAAI;AAC5B,wBAAc,QAAQ,MAAM;AAAA,QAC9B;AAAA,MACF;AACA,UAAI,MAAM,UAAU;AAClB,8BAAsB,MAAM,UAAU,KAAK;AAAA,MAC7C;AACA,UAAI,MAAM,SAAS,SAAS;AAC1B,cAAM,IAAI,MAAM,SAAS;AACzB,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,gBAAM,WAAW,cAAM,KAAK;AAC5B,mBAAS,KAAK,SAAS,KAAK,MAAM;AAClC,wBAAc,IAAI,SAAS,IAAI,QAAQ;AACvC,mBAAS,KAAK,QAAQ;AAAA,QACxB;AAAA,MACF,WAAW,kBAAkB,QAAQ;AACnC,iBAAS,KAAK,KAAK;AAAA,MACrB;AAAA,IACF;AAAA,EACF;AACA,SAAO,WAAW;AACpB,GAAG,uBAAuB;AAC1B,IAAI,SAAS,CAAC;AACd,IAAI,YAAY,EAAE,IAAI,QAAQ,MAAM,aAAa,UAAU,CAAC,GAAG,SAAS,GAAG;AAC3E,IAAI,SAAyB,OAAO,MAAM;AACxC,MAAI,MAAM,cAAc;AACxB,QAAM;AACN,cAAY,EAAE,IAAI,QAAQ,MAAM,aAAa,UAAU,CAAC,GAAG,SAAS,GAAG;AACvE,kBAAgC,oBAAI,IAAI,CAAC,CAAC,QAAQ,SAAS,CAAC,CAAC;AAC7D,WAAS,CAAC;AACV,YAA0B,oBAAI,IAAI;AAClC,aAAW,CAAC;AACZ,cAA4B,oBAAI,IAAI;AACtC,GAAG,OAAO;AACV,SAAS,aAAa,SAAS;AAC7B,MAAI,MAAM,gBAAgB,OAAO;AACjC,UAAQ,SAAS;AAAA,IACf,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,UAAI,MAAM,iBAAiB;AAC3B,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT;AACE,aAAO;AAAA,EACX;AACF;AACA,OAAO,cAAc,cAAc;AACnC,SAAS,iBAAiB,SAAS;AACjC,MAAI,MAAM,gBAAgB,OAAO;AACjC,UAAQ,SAAS;AAAA,IACf,KAAK;AACH,aAAO;AAAA,IACT;AACE,aAAO;AAAA,EACX;AACF;AACA,OAAO,kBAAkB,kBAAkB;AAC3C,SAAS,kBAAkB,SAAS;AAClC,UAAQ,QAAQ,KAAK,GAAG;AAAA,IACtB,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT;AACE,aAAO;AAAA,EACX;AACF;AACA,OAAO,mBAAmB,mBAAmB;AAC7C,IAAI,MAAM;AACV,IAAI,aAA6B,OAAO,MAAM;AAC5C;AACA,SAAO,QAAQ,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,OAAO,GAAG,EAAE,IAAI,MAAM;AAClE,GAAG,YAAY;AACf,IAAI,eAA+B,OAAO,CAAC,UAAU;AACnD,YAAU,WAAW;AACrB,wBAAsB,OAAO,SAAS;AACtC,WAAS,UAAU;AACrB,GAAG,cAAc;AACjB,IAAI,aAA6B,OAAO,CAAC,YAAY;AACnD,QAAM,QAAQ,cAAc,IAAI,OAAO;AACvC,MAAI,CAAC,OAAO;AACV,WAAO;AAAA,EACT;AACA,MAAI,MAAM,SAAS;AACjB,WAAO,MAAM;AAAA,EACf;AACA,MAAI,CAAC,MAAM,UAAU;AACnB,WAAO;AAAA,EACT;AACA,SAAO,MAAM,SAAS;AACxB,GAAG,YAAY;AACf,IAAI,gBAAgC,OAAO,MAAM;AAC/C,SAAO,CAAC,GAAG,cAAc,OAAO,CAAC;AACnC,GAAG,eAAe;AAClB,IAAI,YAA4B,OAAO,MAAM;AAC3C,SAAO,UAAU,CAAC;AACpB,GAAG,WAAW;AACd,IAAI,WAA2B,OAAO,MAAM;AAC1C,SAAO;AACT,GAAG,UAAU;AACb,IAAI,WAA2B,OAAO,CAAC,OAAO;AAC5C,SAAO,cAAc,IAAI,EAAE;AAC7B,GAAG,UAAU;AACb,IAAI,WAA2B,OAAO,CAAC,UAAU;AAC/C,gBAAc,IAAI,MAAM,IAAI,KAAK;AACnC,GAAG,UAAU;AACb,IAAI,YAA4B,OAAO,MAAM,SAAS,WAAW;AACjE,IAAI,aAA6B,OAAO,WAAW;AACjD,SAAO;AACT,GAAG,YAAY;AACf,IAAI,KAAK;AAAA,EACP,WAA2B,OAAO,MAAM,UAAU,EAAE,OAAO,WAAW;AAAA,EACtE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,OAAO;AAAA,EACP;AACF;AACA,IAAI,kBAAkB;AAItB,IAAI,OAAuB,OAAO,CAAC,OAAO,YAAY;AACpD,QAAM,WAAkB;AACxB,QAAM,IAAI,SAAS,OAAO,GAAG;AAC7B,QAAM,IAAI,SAAS,OAAO,GAAG;AAC7B,QAAM,IAAI,SAAS,OAAO,GAAG;AAC7B,SAAc,aAAK,GAAG,GAAG,GAAG,OAAO;AACrC,GAAG,MAAM;AACT,IAAI,YAA4B,OAAO,CAAC,YAAY;AAAA,mBACjC,QAAQ,UAAU;AAAA,aACxB,QAAQ,iBAAiB,QAAQ,SAAS;AAAA;AAAA;AAAA,YAG3C,QAAQ,UAAU;AAAA;AAAA;AAAA,aAGjB,QAAQ,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMnB,QAAQ,iBAAiB,QAAQ,SAAS;AAAA,aACzC,QAAQ,iBAAiB,QAAQ,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAQ3C,QAAQ,OAAO;AAAA,cACb,QAAQ,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAqBpB,QAAQ,cAAc;AAAA;AAAA;AAAA;AAAA,cAIpB,QAAQ,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,cAKjB,QAAQ,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,wBAKP,QAAQ,mBAAmB;AAAA;AAAA;AAAA,0BAGzB,QAAQ,mBAAmB;AAAA,cACvC,QAAQ,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAOjB,KAAK,QAAQ,qBAAqB,GAAG,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,eAK/C,KAAK,QAAQ,SAAS,GAAG,CAAC;AAAA,YAC7B,KAAK,QAAQ,YAAY,GAAG,CAAC;AAAA,cAC3B,KAAK,QAAQ,eAAe,GAAG,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMlC,QAAQ,UAAU;AAAA;AAAA;AAAA;AAAA,aAIjB,QAAQ,UAAU;AAAA;AAAA;AAAA,aAGlB,QAAQ,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAQZ,QAAQ,UAAU;AAAA;AAAA,kBAEnB,QAAQ,aAAa;AAAA,wBACf,QAAQ,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAS3B,QAAQ,SAAS;AAAA;AAAA,GAE1B,WAAW;AACd,IAAI,iBAAiB;AA75CrB;AAm6CA,IAAI,YAAU,sBAAW,MAAX,mBAAc,UAAd,mBAAqB,YAAW;AAC9C,SAAS,uBAAuB,SAAS,UAAU;AACjD,MAAI,YAAY,KAAK,CAAC,OAAO,UAAU,OAAO,GAAG;AAC/C,UAAM,IAAI,MAAM,mCAAmC;AAAA,EACrD;AACA,MAAI,WAAW,KAAK,CAAC,OAAO,UAAU,QAAQ,GAAG;AAC/C,UAAM,IAAI,MAAM,6CAA6C,QAAQ;AAAA,EACvE;AACA,MAAI,UAAU,GAAG;AACf,WAAO,EAAE,IAAI,UAAU,IAAI,EAAE;AAAA,EAC/B;AACA,MAAI,YAAY,GAAG;AACjB,WAAO,EAAE,IAAI,GAAG,IAAI,SAAS;AAAA,EAC/B;AACA,QAAM,KAAK,WAAW;AACtB,QAAM,KAAK,KAAK,MAAM,WAAW,OAAO;AACxC,SAAO,EAAE,IAAI,GAAG;AAClB;AACA,OAAO,wBAAwB,wBAAwB;AACvD,IAAI,kBAAkC,OAAO,CAAC,UAAU;AACtD,MAAI,WAAW;AACf,MAAI,YAAY;AAChB,aAAW,SAAS,MAAM,UAAU;AAClC,UAAM,EAAE,OAAO,QAAQ,GAAG,EAAE,IAAI,MAAM,QAAQ,EAAE,OAAO,GAAG,QAAQ,GAAG,GAAG,GAAG,GAAG,EAAE;AAChF,QAAI;AAAA,MACF;AAAA,MACA,MAAM;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,MAAM;AAAA,IACR;AACA,QAAI,MAAM,SAAS,SAAS;AAC1B;AAAA,IACF;AACA,QAAI,QAAQ,UAAU;AACpB,iBAAW,SAAS,MAAM,kBAAkB;AAAA,IAC9C;AACA,QAAI,SAAS,WAAW;AACtB,kBAAY;AAAA,IACd;AAAA,EACF;AACA,SAAO,EAAE,OAAO,UAAU,QAAQ,UAAU;AAC9C,GAAG,iBAAiB;AACpB,SAAS,cAAc,OAAO,KAAK,eAAe,GAAG,gBAAgB,GAAG;AAp9CxE,MAAAA,KAAAC,KAAA;AAq9CE,MAAI;AAAA,IACF;AAAA,IACA,MAAM;AAAA,KACND,MAAA,+BAAO,SAAP,gBAAAA,IAAa;AAAA,IACb;AAAA,IACA,+BAAO;AAAA,IACP;AAAA,IACA;AAAA,EACF;AACA,MAAI,GAACC,MAAA,+BAAO,SAAP,gBAAAA,IAAa,QAAO;AACvB,UAAM,OAAO;AAAA,MACX,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,GAAG;AAAA,MACH,GAAG;AAAA,IACL;AAAA,EACF;AACA,MAAI,WAAW;AACf,MAAI,YAAY;AAChB,QAAI,WAAM,aAAN,mBAAgB,UAAS,GAAG;AAC9B,eAAW,SAAS,MAAM,UAAU;AAClC,oBAAc,OAAO,GAAG;AAAA,IAC1B;AACA,UAAM,YAAY,gBAAgB,KAAK;AACvC,eAAW,UAAU;AACrB,gBAAY,UAAU;AACtB,QAAI,MAAM,mCAAmC,MAAM,IAAI,mBAAmB,UAAU,SAAS;AAC7F,eAAW,SAAS,MAAM,UAAU;AAClC,UAAI,MAAM,MAAM;AACd,YAAI;AAAA,UACF,qCAAqC,MAAM,EAAE,OAAO,MAAM,EAAE,IAAI,QAAQ,IAAI,SAAS,IAAI,KAAK,UAAU,MAAM,IAAI,CAAC;AAAA,QACrH;AACA,cAAM,KAAK,QAAQ,YAAY,MAAM,kBAAkB,KAAK,YAAY,MAAM,kBAAkB,KAAK;AACrG,cAAM,KAAK,SAAS;AACpB,cAAM,KAAK,IAAI;AACf,cAAM,KAAK,IAAI;AACf,YAAI;AAAA,UACF,0BAA0B,MAAM,EAAE,mBAAmB,MAAM,EAAE,aAAa,QAAQ,cAAc,SAAS;AAAA,QAC3G;AAAA,MACF;AAAA,IACF;AACA,eAAW,SAAS,MAAM,UAAU;AAClC,oBAAc,OAAO,KAAK,UAAU,SAAS;AAAA,IAC/C;AACA,UAAM,UAAU,MAAM,WAAW;AACjC,QAAI,WAAW;AACf,eAAW,SAAS,MAAM,UAAU;AAClC,kBAAY,MAAM,kBAAkB;AAAA,IACtC;AACA,QAAI,QAAQ,MAAM,SAAS;AAC3B,QAAI,UAAU,KAAK,UAAU,UAAU;AACrC,cAAQ;AAAA,IACV;AACA,UAAM,QAAQ,KAAK,KAAK,WAAW,KAAK;AACxC,QAAI,QAAQ,SAAS,WAAW,WAAW;AAC3C,QAAI,SAAS,SAAS,YAAY,WAAW;AAC7C,QAAI,QAAQ,cAAc;AACxB,UAAI;AAAA,QACF,qCAAqC,MAAM,EAAE,kBAAkB,YAAY,mBAAmB,aAAa,UAAU,KAAK;AAAA,MAC5H;AACA,cAAQ;AACR,eAAS;AACT,YAAM,cAAc,eAAe,QAAQ,UAAU,WAAW;AAChE,YAAM,eAAe,gBAAgB,QAAQ,UAAU,WAAW;AAClE,UAAI,MAAM,qBAAqB,MAAM,IAAI,cAAc,YAAY,YAAY,QAAQ;AACvF,UAAI,MAAM,qBAAqB,MAAM,IAAI,eAAe,aAAa,aAAa,SAAS;AAC3F,UAAI,MAAM,2BAA2B,OAAO,WAAW,OAAO;AAC9D,iBAAW,SAAS,MAAM,UAAU;AAClC,YAAI,MAAM,MAAM;AACd,gBAAM,KAAK,QAAQ;AACnB,gBAAM,KAAK,SAAS;AACpB,gBAAM,KAAK,IAAI;AACf,gBAAM,KAAK,IAAI;AAAA,QACjB;AAAA,MACF;AAAA,IACF;AACA,QAAI;AAAA,MACF,uBAAuB,MAAM,EAAE,UAAU,KAAK,UAAU,KAAK,YAAY,OAAO,GAAG,MAAM,SAAS,MAAM,UAAU,KAAK,IAAI,SAAO,WAAM,SAAN,mBAAY,UAAS,CAAC,CAAC;AAAA,IAC3J;AACA,QAAI,WAAS,oCAAO,SAAP,mBAAa,UAAS,IAAI;AACrC,gBAAQ,oCAAO,SAAP,mBAAa,UAAS;AAC9B,YAAM,MAAM,UAAU,IAAI,KAAK,IAAI,MAAM,SAAS,QAAQ,OAAO,IAAI,MAAM,SAAS;AACpF,UAAI,MAAM,GAAG;AACX,cAAM,cAAc,QAAQ,MAAM,UAAU,WAAW;AACvD,YAAI,MAAM,gCAAgC,MAAM,IAAI,QAAO,WAAM,SAAN,mBAAY,OAAO,UAAU;AACxF,mBAAW,SAAS,MAAM,UAAU;AAClC,cAAI,MAAM,MAAM;AACd,kBAAM,KAAK,QAAQ;AAAA,UACrB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,UAAM,OAAO;AAAA,MACX;AAAA,MACA;AAAA,MACA,GAAG;AAAA,MACH,GAAG;AAAA,IACL;AAAA,EACF;AACA,MAAI;AAAA,IACF;AAAA,IACA,MAAM;AAAA,KACN,oCAAO,SAAP,mBAAa;AAAA,KACb,oCAAO,SAAP,mBAAa;AAAA,KACb,oCAAO,SAAP,mBAAa;AAAA,KACb,oCAAO,SAAP,mBAAa;AAAA,EACf;AACF;AACA,OAAO,eAAe,eAAe;AACrC,SAAS,aAAa,OAAO,KAAK;AAlkDlC,MAAAD,KAAAC,KAAA;AAmkDE,MAAI;AAAA,IACF,wCAAwC,MAAM,EAAE,QAAOD,MAAA,+BAAO,SAAP,gBAAAA,IAAa,CAAC,QAAOC,MAAA,+BAAO,SAAP,gBAAAA,IAAa,CAAC,YAAW,oCAAO,SAAP,mBAAa,KAAK;AAAA,EACzH;AACA,QAAM,UAAU,MAAM,WAAW;AACjC,MAAI,MAAM,8BAA8B,MAAM,IAAI,MAAM,SAAS,KAAK;AACtE,MAAI,MAAM;AAAA,EACV,MAAM,SAAS,SAAS,GAAG;AACzB,UAAM,UAAQ,0CAAO,SAAS,OAAhB,mBAAoB,SAApB,mBAA0B,UAAS;AACjD,UAAM,kBAAkB,MAAM,SAAS,SAAS,SAAS,MAAM,SAAS,SAAS,KAAK;AACtF,QAAI,MAAM,sBAAsB,iBAAiB,MAAM;AACvD,QAAI,YAAY;AAChB,QAAI,MAAM,wBAAwB,MAAM,KAAI,oCAAO,SAAP,mBAAa,CAAC;AAC1D,QAAI,iBAAe,oCAAO,SAAP,mBAAa,OAAI,oCAAO,SAAP,mBAAa,MAAK,GAAC,oCAAO,SAAP,mBAAa,SAAQ,KAAK,KAAK,CAAC;AACvF,QAAI,SAAS;AACb,eAAW,SAAS,MAAM,UAAU;AAClC,YAAM,SAAS;AACf,UAAI,CAAC,MAAM,MAAM;AACf;AAAA,MACF;AACA,YAAM,EAAE,OAAO,QAAQ,OAAO,IAAI,MAAM;AACxC,YAAM,EAAE,IAAI,GAAG,IAAI,uBAAuB,SAAS,SAAS;AAC5D,UAAI,MAAM,QAAQ;AAChB,iBAAS;AACT,yBAAe,oCAAO,SAAP,mBAAa,OAAI,oCAAO,SAAP,mBAAa,MAAK,GAAC,oCAAO,SAAP,mBAAa,SAAQ,KAAK,KAAK,CAAC;AACnF,YAAI,MAAM,+BAA+B,MAAM,IAAI,eAAe,MAAM,IAAI,MAAM;AAAA,MACpF;AACA,UAAI;AAAA,QACF,mCAAmC,MAAM,EAAE,SAAS,SAAS,aAAa,EAAE,IAAI,EAAE,MAAK,sCAAQ,SAAR,mBAAc,CAAC,KAAI,sCAAQ,SAAR,mBAAc,CAAC,aAAa,OAAO,EAAE,WAAW,MAAM,GAAG,OAAO;AAAA,MAC5K;AACA,UAAI,OAAO,MAAM;AACf,cAAM,YAAY,SAAS;AAC3B,cAAM,KAAK,IAAI,eAAe,UAAU;AACxC,YAAI;AAAA,UACF,uCAAuC,MAAM,EAAE,iBAAiB,YAAY,oBAAoB,MAAM,KAAK,CAAC,IAAI,SAAS,YAAY,OAAO,UAAU,MAAM,cAAc,SAAS,SAAS,MAAM,KAAK,CAAC,MAAM,MAAM,KAAK,CAAC,IAAI,MAAM,cAAc,kCAAkC,WAAU,+BAAO,mBAAkB,KAAK,CAAC;AAAA,QAC/T;AACA,uBAAe,MAAM,KAAK,IAAI;AAC9B,cAAM,KAAK,IAAI,OAAO,KAAK,IAAI,OAAO,KAAK,SAAS,IAAI,MAAM,SAAS,WAAW,SAAS,IAAI;AAC/F,YAAI;AAAA,UACF,uCAAuC,MAAM,EAAE,eAAe,YAAY,GAAG,OAAO,GAAG,SAAS,OAAO,MAAM,KAAK,CAAC,KAAK,MAAM,KAAK,CAAC,GAAG,MAAM,cAAc,gCAAgC,WAAU,+BAAO,mBAAkB,KAAK,CAAC;AAAA,QACtO;AAAA,MACF;AACA,UAAI,MAAM,UAAU;AAClB,qBAAa,OAAO,GAAG;AAAA,MACzB;AACA,oBAAa,+BAAO,mBAAkB;AACtC,UAAI,MAAM,oBAAoB,OAAO,SAAS;AAAA,IAChD;AAAA,EACF;AACA,MAAI;AAAA,IACF,mCAAmC,MAAM,EAAE,QAAO,oCAAO,SAAP,mBAAa,CAAC,QAAO,oCAAO,SAAP,mBAAa,CAAC,YAAW,oCAAO,SAAP,mBAAa,KAAK;AAAA,EACpH;AACF;AACA,OAAO,cAAc,cAAc;AACnC,SAAS,WAAW,OAAO,EAAE,MAAM,MAAM,MAAM,KAAK,IAAI,EAAE,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,EAAE,GAAG;AAC9F,MAAI,MAAM,QAAQ,MAAM,OAAO,QAAQ;AACrC,UAAM,EAAE,GAAG,GAAG,OAAO,OAAO,IAAI,MAAM;AACtC,QAAI,IAAI,QAAQ,IAAI,MAAM;AACxB,aAAO,IAAI,QAAQ;AAAA,IACrB;AACA,QAAI,IAAI,SAAS,IAAI,MAAM;AACzB,aAAO,IAAI,SAAS;AAAA,IACtB;AACA,QAAI,IAAI,QAAQ,IAAI,MAAM;AACxB,aAAO,IAAI,QAAQ;AAAA,IACrB;AACA,QAAI,IAAI,SAAS,IAAI,MAAM;AACzB,aAAO,IAAI,SAAS;AAAA,IACtB;AAAA,EACF;AACA,MAAI,MAAM,UAAU;AAClB,eAAW,SAAS,MAAM,UAAU;AAClC,OAAC,EAAE,MAAM,MAAM,MAAM,KAAK,IAAI,WAAW,OAAO,EAAE,MAAM,MAAM,MAAM,KAAK,CAAC;AAAA,IAC5E;AAAA,EACF;AACA,SAAO,EAAE,MAAM,MAAM,MAAM,KAAK;AAClC;AACA,OAAO,YAAY,YAAY;AAC/B,SAAS,OAAO,KAAK;AACnB,QAAM,OAAO,IAAI,SAAS,MAAM;AAChC,MAAI,CAAC,MAAM;AACT;AAAA,EACF;AACA,gBAAc,MAAM,KAAK,GAAG,CAAC;AAC7B,eAAa,MAAM,GAAG;AACtB,MAAI,MAAM,aAAa,KAAK,UAAU,MAAM,MAAM,CAAC,CAAC;AACpD,QAAM,EAAE,MAAM,MAAM,MAAM,KAAK,IAAI,WAAW,IAAI;AAClD,QAAM,SAAS,OAAO;AACtB,QAAM,QAAQ,OAAO;AACrB,SAAO,EAAE,GAAG,MAAM,GAAG,MAAM,OAAO,OAAO;AAC3C;AACA,OAAO,QAAQ,QAAQ;AAIvB,SAAS,iBAAiB,OAAO,KAAK,aAAa,OAAO;AAjqD1D,MAAAD,KAAAC,KAAA;AAkqDE,QAAM,SAAS;AACf,MAAI,WAAW;AACf,SAAKD,MAAA,iCAAQ,YAAR,gBAAAA,IAAiB,WAAU,KAAK,GAAG;AACtC,iBAAY,iCAAQ,YAAW,CAAC,GAAG,KAAK,GAAG;AAAA,EAC7C;AACA,aAAW,WAAW;AACtB,MAAI,SAAS;AACb,MAAI,QAAQ;AACZ,MAAI;AACJ,UAAQ,OAAO,MAAM;AAAA,IACnB,KAAK;AACH,eAAS;AACT,cAAQ;AACR;AAAA,IACF,KAAK;AACH,eAAS;AACT,cAAQ;AACR,iBAAW;AACX;AAAA,IACF,KAAK;AACH,cAAQ;AACR;AAAA,IACF,KAAK;AACH,cAAQ;AACR;AAAA,IACF,KAAK;AACH,cAAQ;AACR;AAAA,IACF,KAAK;AACH,cAAQ;AACR;AAAA,IACF,KAAK;AACH,cAAQ;AACR;AAAA,IACF,KAAK;AACH,cAAQ;AACR;AAAA,IACF,KAAK;AACH,cAAQ;AACR;AAAA,IACF,KAAK;AACH,cAAQ;AACR;AAAA,IACF,KAAK;AACH,cAAQ;AACR;AAAA,IACF,KAAK;AACH,cAAQ;AACR;AAAA,IACF,KAAK;AACH,cAAQ;AACR;AAAA,IACF,KAAK;AACH,cAAQ;AACR;AAAA,IACF,KAAK;AACH,cAAQ;AACR;AAAA,IACF,KAAK;AACH,cAAQ;AACR;AAAA,IACF,KAAK;AACH,cAAQ;AACR;AAAA,IACF,KAAK;AACH,cAAQ;AACR;AAAA,IACF,KAAK;AACH,cAAQ;AACR;AAAA,IACF;AACE,cAAQ;AAAA,EACZ;AACA,QAAM,SAAS,oBAAmB,iCAAQ,WAAU,CAAC,CAAC;AACtD,QAAM,aAAa,OAAO;AAC1B,QAAM,SAAS,OAAO,QAAQ,EAAE,OAAO,GAAG,QAAQ,GAAG,GAAG,GAAG,GAAG,EAAE;AAChE,QAAM,OAAO;AAAA,IACX,YAAY,OAAO;AAAA,IACnB;AAAA,IACA,WAAW;AAAA,IACX,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,OAAO,OAAO;AAAA,IACd,IAAI,OAAO;AAAA,IACX,YAAY,OAAO;AAAA,IACnB,OAAO,OAAO;AAAA,IACd,QAAQ,OAAO;AAAA,IACf,GAAG,OAAO;AAAA,IACV,GAAG,OAAO;AAAA,IACV;AAAA,IACA,WAAW;AAAA,IACX,MAAM,OAAO;AAAA,IACb,SAAS,cAAY,MAAAC,MAAA,UAAU,MAAV,gBAAAA,IAAa,UAAb,mBAAoB,YAAW;AAAA,EACtD;AACA,SAAO;AACT;AACA,OAAO,kBAAkB,kBAAkB;AAC3C,eAAe,mBAAmB,MAAM,OAAO,KAAK;AAClD,QAAM,OAAO,iBAAiB,OAAO,KAAK,KAAK;AAC/C,MAAI,KAAK,SAAS,SAAS;AACzB;AAAA,EACF;AACA,QAAM,UAAU,UAAU;AAC1B,QAAM,SAAS,MAAM,WAAW,MAAM,MAAM,EAAE,QAAQ,QAAQ,CAAC;AAC/D,QAAM,cAAc,OAAO,KAAK,EAAE,QAAQ;AAC1C,QAAM,MAAM,IAAI,SAAS,KAAK,EAAE;AAChC,MAAI,OAAO,EAAE,OAAO,YAAY,OAAO,QAAQ,YAAY,QAAQ,GAAG,GAAG,GAAG,GAAG,MAAM,OAAO;AAC5F,MAAI,SAAS,GAAG;AAChB,SAAO,OAAO;AAChB;AACA,OAAO,oBAAoB,oBAAoB;AAC/C,eAAe,sBAAsB,MAAM,OAAO,KAAK;AACrD,QAAM,OAAO,iBAAiB,OAAO,KAAK,IAAI;AAC9C,QAAM,MAAM,IAAI,SAAS,KAAK,EAAE;AAChC,MAAI,IAAI,SAAS,SAAS;AACxB,UAAM,UAAU,UAAU;AAC1B,UAAM,WAAW,MAAM,MAAM,EAAE,QAAQ,QAAQ,CAAC;AAChD,UAAM,YAAY,6BAAM;AACxB,iBAAa,IAAI;AAAA,EACnB;AACF;AACA,OAAO,uBAAuB,uBAAuB;AACrD,eAAe,kBAAkB,MAAM,SAAS,KAAK,WAAW;AAC9D,aAAW,SAAS,SAAS;AAC3B,UAAM,UAAU,MAAM,OAAO,GAAG;AAChC,QAAI,MAAM,UAAU;AAClB,YAAM,kBAAkB,MAAM,MAAM,UAAU,KAAK,SAAS;AAAA,IAC9D;AAAA,EACF;AACF;AACA,OAAO,mBAAmB,mBAAmB;AAC7C,eAAe,oBAAoB,MAAM,SAAS,KAAK;AACrD,QAAM,kBAAkB,MAAM,SAAS,KAAK,kBAAkB;AAChE;AACA,OAAO,qBAAqB,qBAAqB;AACjD,eAAe,aAAa,MAAM,SAAS,KAAK;AAC9C,QAAM,kBAAkB,MAAM,SAAS,KAAK,qBAAqB;AACnE;AACA,OAAO,cAAc,cAAc;AACnC,eAAe,YAAY,MAAM,OAAO,SAAS,KAAK,IAAI;AACxD,QAAM,IAAI,IAAa,MAAM;AAAA,IAC3B,YAAY;AAAA,IACZ,UAAU;AAAA,EACZ,CAAC;AACD,IAAE,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,EACX,CAAC;AACD,aAAW,SAAS,SAAS;AAC3B,QAAI,MAAM,MAAM;AACd,QAAE,QAAQ,MAAM,IAAI;AAAA,QAClB,OAAO,MAAM,KAAK;AAAA,QAClB,QAAQ,MAAM,KAAK;AAAA,QACnB,WAAW,MAAM;AAAA,MACnB,CAAC;AAAA,IACH;AAAA,EACF;AACA,aAAW,QAAQ,OAAO;AACxB,QAAI,KAAK,SAAS,KAAK,KAAK;AAC1B,YAAM,aAAa,IAAI,SAAS,KAAK,KAAK;AAC1C,YAAM,WAAW,IAAI,SAAS,KAAK,GAAG;AACtC,WAAI,yCAAY,UAAQ,qCAAU,OAAM;AACtC,cAAM,QAAQ,WAAW;AACzB,cAAM,MAAM,SAAS;AACrB,cAAM,SAAS;AAAA,UACb,EAAE,GAAG,MAAM,GAAG,GAAG,MAAM,EAAE;AAAA,UACzB,EAAE,GAAG,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,GAAG,GAAG,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,EAAE;AAAA,UACzE,EAAE,GAAG,IAAI,GAAG,GAAG,IAAI,EAAE;AAAA,QACvB;AACA;AAAA,UACE;AAAA,UACA,EAAE,GAAG,KAAK,OAAO,GAAG,KAAK,KAAK,MAAM,KAAK,GAAG;AAAA,UAC5C;AAAA,YACE,GAAG;AAAA,YACH,cAAc,KAAK;AAAA,YACnB,gBAAgB,KAAK;AAAA,YACrB;AAAA,YACA,SAAS;AAAA,UACX;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AACA,YAAI,KAAK,OAAO;AACd,gBAAM,gBAAgB,MAAM;AAAA,YAC1B,GAAG;AAAA,YACH,OAAO,KAAK;AAAA,YACZ,YAAY;AAAA,YACZ,cAAc,KAAK;AAAA,YACnB,gBAAgB,KAAK;AAAA,YACrB;AAAA,YACA,SAAS;AAAA,UACX,CAAC;AACD;AAAA,YACE,EAAE,GAAG,MAAM,GAAG,OAAO,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE;AAAA,YAC1C;AAAA,cACE,cAAc;AAAA,YAChB;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AACA,OAAO,aAAa,aAAa;AAGjC,IAAI,cAA8B,OAAO,SAAS,MAAM,SAAS;AAC/D,SAAO,QAAQ,GAAG,WAAW;AAC/B,GAAG,YAAY;AACf,IAAI,OAAuB,OAAO,eAAe,MAAM,IAAI,UAAU,SAAS;AAC5E,QAAM,EAAE,eAAe,OAAO,KAAK,IAAI,UAAU;AACjD,QAAM,MAAM,QAAQ;AACpB,MAAI;AACJ,MAAI,kBAAkB,WAAW;AAC/B,qBAAiB,eAAS,OAAO,EAAE;AAAA,EACrC;AACA,QAAM,OAAO,kBAAkB,YAAY,eAAS,eAAe,MAAM,EAAE,CAAC,EAAE,gBAAgB,IAAI,IAAI,eAAS,MAAM;AACrH,QAAM,MAAM,kBAAkB,YAAY,KAAK,OAAO,QAAQ,EAAE,IAAI,IAAI,eAAS,QAAQ,EAAE,IAAI;AAC/F,QAAM,UAAU,CAAC,SAAS,UAAU,OAAO;AAC3C,kBAAgB,KAAK,SAAS,QAAQ,MAAM,EAAE;AAC9C,QAAM,KAAK,IAAI,UAAU;AACzB,QAAM,QAAQ,IAAI,cAAc;AAChC,QAAM,QAAQ,IAAI,SAAS;AAC3B,QAAM,QAAQ,IAAI,OAAO,GAAG,EAAE,KAAK,SAAS,OAAO;AACnD,QAAM,oBAAoB,OAAO,IAAI,GAAG;AACxC,QAAM,SAAS,OAAO,GAAG;AACzB,QAAM,aAAa,OAAO,IAAI,GAAG;AACjC,QAAM,YAAY,OAAO,OAAO,OAAO,KAAK,EAAE;AAC9C,MAAI,QAAQ;AACV,UAAM,UAAU;AAChB,UAAM,cAAc,KAAK,IAAI,GAAG,KAAK,MAAM,SAAS,QAAQ,QAAQ,QAAQ,OAAO,CAAC;AACpF,UAAM,SAAS,QAAQ,SAAS,cAAc;AAC9C,UAAM,QAAQ,QAAQ,QAAQ;AAC9B,UAAM,EAAE,YAAY,IAAI;AACxB,qBAAiB,KAAK,QAAQ,OAAO,CAAC,CAAC,WAAW;AAClD,QAAI,MAAM,eAAe,QAAQ,OAAO;AACxC,QAAI;AAAA,MACF;AAAA,MACA,GAAG,QAAQ,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,IAAI,QAAQ,QAAQ,EAAE,IAAI,QAAQ,SAAS,EAAE;AAAA,IAChF;AAAA,EACF;AACF,GAAG,MAAM;AACT,IAAI,wBAAwB;AAAA,EAC1B;AAAA,EACA,YAAY;AACd;AAGA,IAAI,UAAU;AAAA,EACZ,QAAQ;AAAA,EACR,IAAI;AAAA,EACJ,UAAU;AAAA,EACV,QAAQ;AACV;",
  "names": ["_a", "_b"]
}
