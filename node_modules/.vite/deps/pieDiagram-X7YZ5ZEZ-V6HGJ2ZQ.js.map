{
  "version": 3,
  "sources": ["../../mermaid/dist/chunks/mermaid.core/pieDiagram-X7YZ5ZEZ.mjs"],
  "sourcesContent": ["import {\r\n  populateCommonDb\r\n} from \"./chunk-RYO7GUH3.mjs\";\r\nimport {\r\n  cleanAndMerge,\r\n  parseFontSize\r\n} from \"./chunk-TLUHKHBO.mjs\";\r\nimport {\r\n  selectSvgElement\r\n} from \"./chunk-OBAELV6Q.mjs\";\r\nimport {\r\n  __name,\r\n  clear,\r\n  configureSvgSize,\r\n  defaultConfig_default,\r\n  getAccDescription,\r\n  getAccTitle,\r\n  getConfig2 as getConfig,\r\n  getDiagramTitle,\r\n  log,\r\n  setAccDescription,\r\n  setAccTitle,\r\n  setDiagramTitle\r\n} from \"./chunk-S24QXQKS.mjs\";\r\n\r\n// src/diagrams/pie/pieParser.ts\r\nimport { parse } from \"@mermaid-js/parser\";\r\n\r\n// src/diagrams/pie/pieDb.ts\r\nvar DEFAULT_PIE_CONFIG = defaultConfig_default.pie;\r\nvar DEFAULT_PIE_DB = {\r\n  sections: /* @__PURE__ */ new Map(),\r\n  showData: false,\r\n  config: DEFAULT_PIE_CONFIG\r\n};\r\nvar sections = DEFAULT_PIE_DB.sections;\r\nvar showData = DEFAULT_PIE_DB.showData;\r\nvar config = structuredClone(DEFAULT_PIE_CONFIG);\r\nvar getConfig2 = /* @__PURE__ */ __name(() => structuredClone(config), \"getConfig\");\r\nvar clear2 = /* @__PURE__ */ __name(() => {\r\n  sections = /* @__PURE__ */ new Map();\r\n  showData = DEFAULT_PIE_DB.showData;\r\n  clear();\r\n}, \"clear\");\r\nvar addSection = /* @__PURE__ */ __name(({ label, value }) => {\r\n  if (!sections.has(label)) {\r\n    sections.set(label, value);\r\n    log.debug(`added new section: ${label}, with value: ${value}`);\r\n  }\r\n}, \"addSection\");\r\nvar getSections = /* @__PURE__ */ __name(() => sections, \"getSections\");\r\nvar setShowData = /* @__PURE__ */ __name((toggle) => {\r\n  showData = toggle;\r\n}, \"setShowData\");\r\nvar getShowData = /* @__PURE__ */ __name(() => showData, \"getShowData\");\r\nvar db = {\r\n  getConfig: getConfig2,\r\n  clear: clear2,\r\n  setDiagramTitle,\r\n  getDiagramTitle,\r\n  setAccTitle,\r\n  getAccTitle,\r\n  setAccDescription,\r\n  getAccDescription,\r\n  addSection,\r\n  getSections,\r\n  setShowData,\r\n  getShowData\r\n};\r\n\r\n// src/diagrams/pie/pieParser.ts\r\nvar populateDb = /* @__PURE__ */ __name((ast, db2) => {\r\n  populateCommonDb(ast, db2);\r\n  db2.setShowData(ast.showData);\r\n  ast.sections.map(db2.addSection);\r\n}, \"populateDb\");\r\nvar parser = {\r\n  parse: /* @__PURE__ */ __name(async (input) => {\r\n    const ast = await parse(\"pie\", input);\r\n    log.debug(ast);\r\n    populateDb(ast, db);\r\n  }, \"parse\")\r\n};\r\n\r\n// src/diagrams/pie/pieStyles.ts\r\nvar getStyles = /* @__PURE__ */ __name((options) => `\r\n  .pieCircle{\r\n    stroke: ${options.pieStrokeColor};\r\n    stroke-width : ${options.pieStrokeWidth};\r\n    opacity : ${options.pieOpacity};\r\n  }\r\n  .pieOuterCircle{\r\n    stroke: ${options.pieOuterStrokeColor};\r\n    stroke-width: ${options.pieOuterStrokeWidth};\r\n    fill: none;\r\n  }\r\n  .pieTitleText {\r\n    text-anchor: middle;\r\n    font-size: ${options.pieTitleTextSize};\r\n    fill: ${options.pieTitleTextColor};\r\n    font-family: ${options.fontFamily};\r\n  }\r\n  .slice {\r\n    font-family: ${options.fontFamily};\r\n    fill: ${options.pieSectionTextColor};\r\n    font-size:${options.pieSectionTextSize};\r\n    // fill: white;\r\n  }\r\n  .legend text {\r\n    fill: ${options.pieLegendTextColor};\r\n    font-family: ${options.fontFamily};\r\n    font-size: ${options.pieLegendTextSize};\r\n  }\r\n`, \"getStyles\");\r\nvar pieStyles_default = getStyles;\r\n\r\n// src/diagrams/pie/pieRenderer.ts\r\nimport { arc, pie as d3pie, scaleOrdinal } from \"d3\";\r\nvar createPieArcs = /* @__PURE__ */ __name((sections2) => {\r\n  const pieData = [...sections2.entries()].map((element) => {\r\n    return {\r\n      label: element[0],\r\n      value: element[1]\r\n    };\r\n  }).sort((a, b) => {\r\n    return b.value - a.value;\r\n  });\r\n  const pie = d3pie().value(\r\n    (d3Section) => d3Section.value\r\n  );\r\n  return pie(pieData);\r\n}, \"createPieArcs\");\r\nvar draw = /* @__PURE__ */ __name((text, id, _version, diagObj) => {\r\n  log.debug(\"rendering pie chart\\n\" + text);\r\n  const db2 = diagObj.db;\r\n  const globalConfig = getConfig();\r\n  const pieConfig = cleanAndMerge(db2.getConfig(), globalConfig.pie);\r\n  const MARGIN = 40;\r\n  const LEGEND_RECT_SIZE = 18;\r\n  const LEGEND_SPACING = 4;\r\n  const height = 450;\r\n  const pieWidth = height;\r\n  const svg = selectSvgElement(id);\r\n  const group = svg.append(\"g\");\r\n  group.attr(\"transform\", \"translate(\" + pieWidth / 2 + \",\" + height / 2 + \")\");\r\n  const { themeVariables } = globalConfig;\r\n  let [outerStrokeWidth] = parseFontSize(themeVariables.pieOuterStrokeWidth);\r\n  outerStrokeWidth ??= 2;\r\n  const textPosition = pieConfig.textPosition;\r\n  const radius = Math.min(pieWidth, height) / 2 - MARGIN;\r\n  const arcGenerator = arc().innerRadius(0).outerRadius(radius);\r\n  const labelArcGenerator = arc().innerRadius(radius * textPosition).outerRadius(radius * textPosition);\r\n  group.append(\"circle\").attr(\"cx\", 0).attr(\"cy\", 0).attr(\"r\", radius + outerStrokeWidth / 2).attr(\"class\", \"pieOuterCircle\");\r\n  const sections2 = db2.getSections();\r\n  const arcs = createPieArcs(sections2);\r\n  const myGeneratedColors = [\r\n    themeVariables.pie1,\r\n    themeVariables.pie2,\r\n    themeVariables.pie3,\r\n    themeVariables.pie4,\r\n    themeVariables.pie5,\r\n    themeVariables.pie6,\r\n    themeVariables.pie7,\r\n    themeVariables.pie8,\r\n    themeVariables.pie9,\r\n    themeVariables.pie10,\r\n    themeVariables.pie11,\r\n    themeVariables.pie12\r\n  ];\r\n  const color = scaleOrdinal(myGeneratedColors);\r\n  group.selectAll(\"mySlices\").data(arcs).enter().append(\"path\").attr(\"d\", arcGenerator).attr(\"fill\", (datum) => {\r\n    return color(datum.data.label);\r\n  }).attr(\"class\", \"pieCircle\");\r\n  let sum = 0;\r\n  sections2.forEach((section) => {\r\n    sum += section;\r\n  });\r\n  group.selectAll(\"mySlices\").data(arcs).enter().append(\"text\").text((datum) => {\r\n    return (datum.data.value / sum * 100).toFixed(0) + \"%\";\r\n  }).attr(\"transform\", (datum) => {\r\n    return \"translate(\" + labelArcGenerator.centroid(datum) + \")\";\r\n  }).style(\"text-anchor\", \"middle\").attr(\"class\", \"slice\");\r\n  group.append(\"text\").text(db2.getDiagramTitle()).attr(\"x\", 0).attr(\"y\", -(height - 50) / 2).attr(\"class\", \"pieTitleText\");\r\n  const legend = group.selectAll(\".legend\").data(color.domain()).enter().append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", (_datum, index) => {\r\n    const height2 = LEGEND_RECT_SIZE + LEGEND_SPACING;\r\n    const offset = height2 * color.domain().length / 2;\r\n    const horizontal = 12 * LEGEND_RECT_SIZE;\r\n    const vertical = index * height2 - offset;\r\n    return \"translate(\" + horizontal + \",\" + vertical + \")\";\r\n  });\r\n  legend.append(\"rect\").attr(\"width\", LEGEND_RECT_SIZE).attr(\"height\", LEGEND_RECT_SIZE).style(\"fill\", color).style(\"stroke\", color);\r\n  legend.data(arcs).append(\"text\").attr(\"x\", LEGEND_RECT_SIZE + LEGEND_SPACING).attr(\"y\", LEGEND_RECT_SIZE - LEGEND_SPACING).text((datum) => {\r\n    const { label, value } = datum.data;\r\n    if (db2.getShowData()) {\r\n      return `${label} [${value}]`;\r\n    }\r\n    return label;\r\n  });\r\n  const longestTextWidth = Math.max(\r\n    ...legend.selectAll(\"text\").nodes().map((node) => node?.getBoundingClientRect().width ?? 0)\r\n  );\r\n  const totalWidth = pieWidth + MARGIN + LEGEND_RECT_SIZE + LEGEND_SPACING + longestTextWidth;\r\n  svg.attr(\"viewBox\", `0 0 ${totalWidth} ${height}`);\r\n  configureSvgSize(svg, height, totalWidth, pieConfig.useMaxWidth);\r\n}, \"draw\");\r\nvar renderer = { draw };\r\n\r\n// src/diagrams/pie/pieDiagram.ts\r\nvar diagram = {\r\n  parser,\r\n  db,\r\n  renderer,\r\n  styles: pieStyles_default\r\n};\r\nexport {\r\n  diagram\r\n};\r\n"],
  "mappings": "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",
  "names": ["getConfig2"]
}
