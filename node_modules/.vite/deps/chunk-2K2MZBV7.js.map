{
  "version": 3,
  "sources": ["../../mermaid/dist/chunks/mermaid.core/chunk-5RIWM3LS.mjs"],
  "sourcesContent": ["import {\r\n  getDiagramElement,\r\n  setupViewPortForSVG\r\n} from \"./chunk-4LC2V6XN.mjs\";\r\nimport {\r\n  render\r\n} from \"./chunk-U2OMI7UW.mjs\";\r\nimport {\r\n  generateId,\r\n  utils_default\r\n} from \"./chunk-TLUHKHBO.mjs\";\r\nimport {\r\n  __name,\r\n  clear,\r\n  common_default,\r\n  getAccDescription,\r\n  getAccTitle,\r\n  getConfig2 as getConfig,\r\n  getDiagramTitle,\r\n  log,\r\n  setAccDescription,\r\n  setAccTitle,\r\n  setDiagramTitle\r\n} from \"./chunk-S24QXQKS.mjs\";\r\n\r\n// src/diagrams/state/parser/stateDiagram.jison\r\nvar parser = function() {\r\n  var o = /* @__PURE__ */ __name(function(k, v, o2, l) {\r\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v) ;\r\n    return o2;\r\n  }, \"o\"), $V0 = [1, 2], $V1 = [1, 3], $V2 = [1, 4], $V3 = [2, 4], $V4 = [1, 9], $V5 = [1, 11], $V6 = [1, 16], $V7 = [1, 17], $V8 = [1, 18], $V9 = [1, 19], $Va = [1, 32], $Vb = [1, 20], $Vc = [1, 21], $Vd = [1, 22], $Ve = [1, 23], $Vf = [1, 24], $Vg = [1, 26], $Vh = [1, 27], $Vi = [1, 28], $Vj = [1, 29], $Vk = [1, 30], $Vl = [1, 31], $Vm = [1, 34], $Vn = [1, 35], $Vo = [1, 36], $Vp = [1, 37], $Vq = [1, 33], $Vr = [1, 4, 5, 16, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 33, 35, 37, 38, 42, 45, 48, 49, 50, 51, 54], $Vs = [1, 4, 5, 14, 15, 16, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 33, 35, 37, 38, 42, 45, 48, 49, 50, 51, 54], $Vt = [4, 5, 16, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 33, 35, 37, 38, 42, 45, 48, 49, 50, 51, 54];\r\n  var parser2 = {\r\n    trace: /* @__PURE__ */ __name(function trace() {\r\n    }, \"trace\"),\r\n    yy: {},\r\n    symbols_: { \"error\": 2, \"start\": 3, \"SPACE\": 4, \"NL\": 5, \"SD\": 6, \"document\": 7, \"line\": 8, \"statement\": 9, \"classDefStatement\": 10, \"styleStatement\": 11, \"cssClassStatement\": 12, \"idStatement\": 13, \"DESCR\": 14, \"-->\": 15, \"HIDE_EMPTY\": 16, \"scale\": 17, \"WIDTH\": 18, \"COMPOSIT_STATE\": 19, \"STRUCT_START\": 20, \"STRUCT_STOP\": 21, \"STATE_DESCR\": 22, \"AS\": 23, \"ID\": 24, \"FORK\": 25, \"JOIN\": 26, \"CHOICE\": 27, \"CONCURRENT\": 28, \"note\": 29, \"notePosition\": 30, \"NOTE_TEXT\": 31, \"direction\": 32, \"acc_title\": 33, \"acc_title_value\": 34, \"acc_descr\": 35, \"acc_descr_value\": 36, \"acc_descr_multiline_value\": 37, \"classDef\": 38, \"CLASSDEF_ID\": 39, \"CLASSDEF_STYLEOPTS\": 40, \"DEFAULT\": 41, \"style\": 42, \"STYLE_IDS\": 43, \"STYLEDEF_STYLEOPTS\": 44, \"class\": 45, \"CLASSENTITY_IDS\": 46, \"STYLECLASS\": 47, \"direction_tb\": 48, \"direction_bt\": 49, \"direction_rl\": 50, \"direction_lr\": 51, \"eol\": 52, \";\": 53, \"EDGE_STATE\": 54, \"STYLE_SEPARATOR\": 55, \"left_of\": 56, \"right_of\": 57, \"$accept\": 0, \"$end\": 1 },\r\n    terminals_: { 2: \"error\", 4: \"SPACE\", 5: \"NL\", 6: \"SD\", 14: \"DESCR\", 15: \"-->\", 16: \"HIDE_EMPTY\", 17: \"scale\", 18: \"WIDTH\", 19: \"COMPOSIT_STATE\", 20: \"STRUCT_START\", 21: \"STRUCT_STOP\", 22: \"STATE_DESCR\", 23: \"AS\", 24: \"ID\", 25: \"FORK\", 26: \"JOIN\", 27: \"CHOICE\", 28: \"CONCURRENT\", 29: \"note\", 31: \"NOTE_TEXT\", 33: \"acc_title\", 34: \"acc_title_value\", 35: \"acc_descr\", 36: \"acc_descr_value\", 37: \"acc_descr_multiline_value\", 38: \"classDef\", 39: \"CLASSDEF_ID\", 40: \"CLASSDEF_STYLEOPTS\", 41: \"DEFAULT\", 42: \"style\", 43: \"STYLE_IDS\", 44: \"STYLEDEF_STYLEOPTS\", 45: \"class\", 46: \"CLASSENTITY_IDS\", 47: \"STYLECLASS\", 48: \"direction_tb\", 49: \"direction_bt\", 50: \"direction_rl\", 51: \"direction_lr\", 53: \";\", 54: \"EDGE_STATE\", 55: \"STYLE_SEPARATOR\", 56: \"left_of\", 57: \"right_of\" },\r\n    productions_: [0, [3, 2], [3, 2], [3, 2], [7, 0], [7, 2], [8, 2], [8, 1], [8, 1], [9, 1], [9, 1], [9, 1], [9, 1], [9, 2], [9, 3], [9, 4], [9, 1], [9, 2], [9, 1], [9, 4], [9, 3], [9, 6], [9, 1], [9, 1], [9, 1], [9, 1], [9, 4], [9, 4], [9, 1], [9, 2], [9, 2], [9, 1], [10, 3], [10, 3], [11, 3], [12, 3], [32, 1], [32, 1], [32, 1], [32, 1], [52, 1], [52, 1], [13, 1], [13, 1], [13, 3], [13, 3], [30, 1], [30, 1]],\r\n    performAction: /* @__PURE__ */ __name(function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\r\n      var $0 = $$.length - 1;\r\n      switch (yystate) {\r\n        case 3:\r\n          yy.setRootDoc($$[$0]);\r\n          return $$[$0];\r\n          break;\r\n        case 4:\r\n          this.$ = [];\r\n          break;\r\n        case 5:\r\n          if ($$[$0] != \"nl\") {\r\n            $$[$0 - 1].push($$[$0]);\r\n            this.$ = $$[$0 - 1];\r\n          }\r\n          break;\r\n        case 6:\r\n        case 7:\r\n          this.$ = $$[$0];\r\n          break;\r\n        case 8:\r\n          this.$ = \"nl\";\r\n          break;\r\n        case 12:\r\n          this.$ = $$[$0];\r\n          break;\r\n        case 13:\r\n          const stateStmt = $$[$0 - 1];\r\n          stateStmt.description = yy.trimColon($$[$0]);\r\n          this.$ = stateStmt;\r\n          break;\r\n        case 14:\r\n          this.$ = { stmt: \"relation\", state1: $$[$0 - 2], state2: $$[$0] };\r\n          break;\r\n        case 15:\r\n          const relDescription = yy.trimColon($$[$0]);\r\n          this.$ = { stmt: \"relation\", state1: $$[$0 - 3], state2: $$[$0 - 1], description: relDescription };\r\n          break;\r\n        case 19:\r\n          this.$ = { stmt: \"state\", id: $$[$0 - 3], type: \"default\", description: \"\", doc: $$[$0 - 1] };\r\n          break;\r\n        case 20:\r\n          var id = $$[$0];\r\n          var description = $$[$0 - 2].trim();\r\n          if ($$[$0].match(\":\")) {\r\n            var parts = $$[$0].split(\":\");\r\n            id = parts[0];\r\n            description = [description, parts[1]];\r\n          }\r\n          this.$ = { stmt: \"state\", id, type: \"default\", description };\r\n          break;\r\n        case 21:\r\n          this.$ = { stmt: \"state\", id: $$[$0 - 3], type: \"default\", description: $$[$0 - 5], doc: $$[$0 - 1] };\r\n          break;\r\n        case 22:\r\n          this.$ = { stmt: \"state\", id: $$[$0], type: \"fork\" };\r\n          break;\r\n        case 23:\r\n          this.$ = { stmt: \"state\", id: $$[$0], type: \"join\" };\r\n          break;\r\n        case 24:\r\n          this.$ = { stmt: \"state\", id: $$[$0], type: \"choice\" };\r\n          break;\r\n        case 25:\r\n          this.$ = { stmt: \"state\", id: yy.getDividerId(), type: \"divider\" };\r\n          break;\r\n        case 26:\r\n          this.$ = { stmt: \"state\", id: $$[$0 - 1].trim(), note: { position: $$[$0 - 2].trim(), text: $$[$0].trim() } };\r\n          break;\r\n        case 29:\r\n          this.$ = $$[$0].trim();\r\n          yy.setAccTitle(this.$);\r\n          break;\r\n        case 30:\r\n        case 31:\r\n          this.$ = $$[$0].trim();\r\n          yy.setAccDescription(this.$);\r\n          break;\r\n        case 32:\r\n        case 33:\r\n          this.$ = { stmt: \"classDef\", id: $$[$0 - 1].trim(), classes: $$[$0].trim() };\r\n          break;\r\n        case 34:\r\n          this.$ = { stmt: \"style\", id: $$[$0 - 1].trim(), styleClass: $$[$0].trim() };\r\n          break;\r\n        case 35:\r\n          this.$ = { stmt: \"applyClass\", id: $$[$0 - 1].trim(), styleClass: $$[$0].trim() };\r\n          break;\r\n        case 36:\r\n          yy.setDirection(\"TB\");\r\n          this.$ = { stmt: \"dir\", value: \"TB\" };\r\n          break;\r\n        case 37:\r\n          yy.setDirection(\"BT\");\r\n          this.$ = { stmt: \"dir\", value: \"BT\" };\r\n          break;\r\n        case 38:\r\n          yy.setDirection(\"RL\");\r\n          this.$ = { stmt: \"dir\", value: \"RL\" };\r\n          break;\r\n        case 39:\r\n          yy.setDirection(\"LR\");\r\n          this.$ = { stmt: \"dir\", value: \"LR\" };\r\n          break;\r\n        case 42:\r\n        case 43:\r\n          this.$ = { stmt: \"state\", id: $$[$0].trim(), type: \"default\", description: \"\" };\r\n          break;\r\n        case 44:\r\n          this.$ = { stmt: \"state\", id: $$[$0 - 2].trim(), classes: [$$[$0].trim()], type: \"default\", description: \"\" };\r\n          break;\r\n        case 45:\r\n          this.$ = { stmt: \"state\", id: $$[$0 - 2].trim(), classes: [$$[$0].trim()], type: \"default\", description: \"\" };\r\n          break;\r\n      }\r\n    }, \"anonymous\"),\r\n    table: [{ 3: 1, 4: $V0, 5: $V1, 6: $V2 }, { 1: [3] }, { 3: 5, 4: $V0, 5: $V1, 6: $V2 }, { 3: 6, 4: $V0, 5: $V1, 6: $V2 }, o([1, 4, 5, 16, 17, 19, 22, 24, 25, 26, 27, 28, 29, 33, 35, 37, 38, 42, 45, 48, 49, 50, 51, 54], $V3, { 7: 7 }), { 1: [2, 1] }, { 1: [2, 2] }, { 1: [2, 3], 4: $V4, 5: $V5, 8: 8, 9: 10, 10: 12, 11: 13, 12: 14, 13: 15, 16: $V6, 17: $V7, 19: $V8, 22: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: $Vd, 28: $Ve, 29: $Vf, 32: 25, 33: $Vg, 35: $Vh, 37: $Vi, 38: $Vj, 42: $Vk, 45: $Vl, 48: $Vm, 49: $Vn, 50: $Vo, 51: $Vp, 54: $Vq }, o($Vr, [2, 5]), { 9: 38, 10: 12, 11: 13, 12: 14, 13: 15, 16: $V6, 17: $V7, 19: $V8, 22: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: $Vd, 28: $Ve, 29: $Vf, 32: 25, 33: $Vg, 35: $Vh, 37: $Vi, 38: $Vj, 42: $Vk, 45: $Vl, 48: $Vm, 49: $Vn, 50: $Vo, 51: $Vp, 54: $Vq }, o($Vr, [2, 7]), o($Vr, [2, 8]), o($Vr, [2, 9]), o($Vr, [2, 10]), o($Vr, [2, 11]), o($Vr, [2, 12], { 14: [1, 39], 15: [1, 40] }), o($Vr, [2, 16]), { 18: [1, 41] }, o($Vr, [2, 18], { 20: [1, 42] }), { 23: [1, 43] }, o($Vr, [2, 22]), o($Vr, [2, 23]), o($Vr, [2, 24]), o($Vr, [2, 25]), { 30: 44, 31: [1, 45], 56: [1, 46], 57: [1, 47] }, o($Vr, [2, 28]), { 34: [1, 48] }, { 36: [1, 49] }, o($Vr, [2, 31]), { 39: [1, 50], 41: [1, 51] }, { 43: [1, 52] }, { 46: [1, 53] }, o($Vs, [2, 42], { 55: [1, 54] }), o($Vs, [2, 43], { 55: [1, 55] }), o($Vr, [2, 36]), o($Vr, [2, 37]), o($Vr, [2, 38]), o($Vr, [2, 39]), o($Vr, [2, 6]), o($Vr, [2, 13]), { 13: 56, 24: $Va, 54: $Vq }, o($Vr, [2, 17]), o($Vt, $V3, { 7: 57 }), { 24: [1, 58] }, { 24: [1, 59] }, { 23: [1, 60] }, { 24: [2, 46] }, { 24: [2, 47] }, o($Vr, [2, 29]), o($Vr, [2, 30]), { 40: [1, 61] }, { 40: [1, 62] }, { 44: [1, 63] }, { 47: [1, 64] }, { 24: [1, 65] }, { 24: [1, 66] }, o($Vr, [2, 14], { 14: [1, 67] }), { 4: $V4, 5: $V5, 8: 8, 9: 10, 10: 12, 11: 13, 12: 14, 13: 15, 16: $V6, 17: $V7, 19: $V8, 21: [1, 68], 22: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: $Vd, 28: $Ve, 29: $Vf, 32: 25, 33: $Vg, 35: $Vh, 37: $Vi, 38: $Vj, 42: $Vk, 45: $Vl, 48: $Vm, 49: $Vn, 50: $Vo, 51: $Vp, 54: $Vq }, o($Vr, [2, 20], { 20: [1, 69] }), { 31: [1, 70] }, { 24: [1, 71] }, o($Vr, [2, 32]), o($Vr, [2, 33]), o($Vr, [2, 34]), o($Vr, [2, 35]), o($Vs, [2, 44]), o($Vs, [2, 45]), o($Vr, [2, 15]), o($Vr, [2, 19]), o($Vt, $V3, { 7: 72 }), o($Vr, [2, 26]), o($Vr, [2, 27]), { 4: $V4, 5: $V5, 8: 8, 9: 10, 10: 12, 11: 13, 12: 14, 13: 15, 16: $V6, 17: $V7, 19: $V8, 21: [1, 73], 22: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: $Vd, 28: $Ve, 29: $Vf, 32: 25, 33: $Vg, 35: $Vh, 37: $Vi, 38: $Vj, 42: $Vk, 45: $Vl, 48: $Vm, 49: $Vn, 50: $Vo, 51: $Vp, 54: $Vq }, o($Vr, [2, 21])],\r\n    defaultActions: { 5: [2, 1], 6: [2, 2], 46: [2, 46], 47: [2, 47] },\r\n    parseError: /* @__PURE__ */ __name(function parseError(str, hash) {\r\n      if (hash.recoverable) {\r\n        this.trace(str);\r\n      } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n      }\r\n    }, \"parseError\"),\r\n    parse: /* @__PURE__ */ __name(function parse(input) {\r\n      var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n      var args = lstack.slice.call(arguments, 1);\r\n      var lexer2 = Object.create(this.lexer);\r\n      var sharedState = { yy: {} };\r\n      for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n          sharedState.yy[k] = this.yy[k];\r\n        }\r\n      }\r\n      lexer2.setInput(input, sharedState.yy);\r\n      sharedState.yy.lexer = lexer2;\r\n      sharedState.yy.parser = this;\r\n      if (typeof lexer2.yylloc == \"undefined\") {\r\n        lexer2.yylloc = {};\r\n      }\r\n      var yyloc = lexer2.yylloc;\r\n      lstack.push(yyloc);\r\n      var ranges = lexer2.options && lexer2.options.ranges;\r\n      if (typeof sharedState.yy.parseError === \"function\") {\r\n        this.parseError = sharedState.yy.parseError;\r\n      } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n      }\r\n      function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n      }\r\n      __name(popStack, \"popStack\");\r\n      function lex() {\r\n        var token;\r\n        token = tstack.pop() || lexer2.lex() || EOF;\r\n        if (typeof token !== \"number\") {\r\n          if (token instanceof Array) {\r\n            tstack = token;\r\n            token = tstack.pop();\r\n          }\r\n          token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n      }\r\n      __name(lex, \"lex\");\r\n      var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n      while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n          action = this.defaultActions[state];\r\n        } else {\r\n          if (symbol === null || typeof symbol == \"undefined\") {\r\n            symbol = lex();\r\n          }\r\n          action = table[state] && table[state][symbol];\r\n        }\r\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\r\n          var errStr = \"\";\r\n          expected = [];\r\n          for (p in table[state]) {\r\n            if (this.terminals_[p] && p > TERROR) {\r\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\r\n            }\r\n          }\r\n          if (lexer2.showPosition) {\r\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\r\n          } else {\r\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\r\n          }\r\n          this.parseError(errStr, {\r\n            text: lexer2.match,\r\n            token: this.terminals_[symbol] || symbol,\r\n            line: lexer2.yylineno,\r\n            loc: yyloc,\r\n            expected\r\n          });\r\n        }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\r\n        }\r\n        switch (action[0]) {\r\n          case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer2.yytext);\r\n            lstack.push(lexer2.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n              yyleng = lexer2.yyleng;\r\n              yytext = lexer2.yytext;\r\n              yylineno = lexer2.yylineno;\r\n              yyloc = lexer2.yylloc;\r\n              if (recovering > 0) {\r\n                recovering--;\r\n              }\r\n            } else {\r\n              symbol = preErrorSymbol;\r\n              preErrorSymbol = null;\r\n            }\r\n            break;\r\n          case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n              first_line: lstack[lstack.length - (len || 1)].first_line,\r\n              last_line: lstack[lstack.length - 1].last_line,\r\n              first_column: lstack[lstack.length - (len || 1)].first_column,\r\n              last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n              yyval._$.range = [\r\n                lstack[lstack.length - (len || 1)].range[0],\r\n                lstack[lstack.length - 1].range[1]\r\n              ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n              yytext,\r\n              yyleng,\r\n              yylineno,\r\n              sharedState.yy,\r\n              action[1],\r\n              vstack,\r\n              lstack\r\n            ].concat(args));\r\n            if (typeof r !== \"undefined\") {\r\n              return r;\r\n            }\r\n            if (len) {\r\n              stack = stack.slice(0, -1 * len * 2);\r\n              vstack = vstack.slice(0, -1 * len);\r\n              lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n          case 3:\r\n            return true;\r\n        }\r\n      }\r\n      return true;\r\n    }, \"parse\")\r\n  };\r\n  var lexer = /* @__PURE__ */ function() {\r\n    var lexer2 = {\r\n      EOF: 1,\r\n      parseError: /* @__PURE__ */ __name(function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n          this.yy.parser.parseError(str, hash);\r\n        } else {\r\n          throw new Error(str);\r\n        }\r\n      }, \"parseError\"),\r\n      // resets the lexer, sets new input\r\n      setInput: /* @__PURE__ */ __name(function(input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = \"\";\r\n        this.conditionStack = [\"INITIAL\"];\r\n        this.yylloc = {\r\n          first_line: 1,\r\n          first_column: 0,\r\n          last_line: 1,\r\n          last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [0, 0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n      }, \"setInput\"),\r\n      // consumes and returns one char from the input\r\n      input: /* @__PURE__ */ __name(function() {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n          this.yylineno++;\r\n          this.yylloc.last_line++;\r\n        } else {\r\n          this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n          this.yylloc.range[1]++;\r\n        }\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n      }, \"input\"),\r\n      // unshifts one char (or a string) into the input\r\n      unput: /* @__PURE__ */ __name(function(ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n        if (lines.length - 1) {\r\n          this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n        this.yylloc = {\r\n          first_line: this.yylloc.first_line,\r\n          last_line: this.yylineno + 1,\r\n          first_column: this.yylloc.first_column,\r\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\r\n        };\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n      }, \"unput\"),\r\n      // When called from action, caches matched text and appends it on next action\r\n      more: /* @__PURE__ */ __name(function() {\r\n        this._more = true;\r\n        return this;\r\n      }, \"more\"),\r\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n      reject: /* @__PURE__ */ __name(function() {\r\n        if (this.options.backtrack_lexer) {\r\n          this._backtrack = true;\r\n        } else {\r\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\r\n            text: \"\",\r\n            token: null,\r\n            line: this.yylineno\r\n          });\r\n        }\r\n        return this;\r\n      }, \"reject\"),\r\n      // retain first n characters of the match\r\n      less: /* @__PURE__ */ __name(function(n) {\r\n        this.unput(this.match.slice(n));\r\n      }, \"less\"),\r\n      // displays already matched input, i.e. for error messages\r\n      pastInput: /* @__PURE__ */ __name(function() {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\r\n      }, \"pastInput\"),\r\n      // displays upcoming input, i.e. for error messages\r\n      upcomingInput: /* @__PURE__ */ __name(function() {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n          next += this._input.substr(0, 20 - next.length);\r\n        }\r\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\r\n      }, \"upcomingInput\"),\r\n      // displays the character position where the lexing error occurred, i.e. for error messages\r\n      showPosition: /* @__PURE__ */ __name(function() {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n      }, \"showPosition\"),\r\n      // test the lexed token: return FALSE when not a match, otherwise return token\r\n      test_match: /* @__PURE__ */ __name(function(match, indexed_rule) {\r\n        var token, lines, backup;\r\n        if (this.options.backtrack_lexer) {\r\n          backup = {\r\n            yylineno: this.yylineno,\r\n            yylloc: {\r\n              first_line: this.yylloc.first_line,\r\n              last_line: this.last_line,\r\n              first_column: this.yylloc.first_column,\r\n              last_column: this.yylloc.last_column\r\n            },\r\n            yytext: this.yytext,\r\n            match: this.match,\r\n            matches: this.matches,\r\n            matched: this.matched,\r\n            yyleng: this.yyleng,\r\n            offset: this.offset,\r\n            _more: this._more,\r\n            _input: this._input,\r\n            yy: this.yy,\r\n            conditionStack: this.conditionStack.slice(0),\r\n            done: this.done\r\n          };\r\n          if (this.options.ranges) {\r\n            backup.yylloc.range = this.yylloc.range.slice(0);\r\n          }\r\n        }\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n          this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n          first_line: this.yylloc.last_line,\r\n          last_line: this.yylineno + 1,\r\n          first_column: this.yylloc.last_column,\r\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n          this.done = false;\r\n        }\r\n        if (token) {\r\n          return token;\r\n        } else if (this._backtrack) {\r\n          for (var k in backup) {\r\n            this[k] = backup[k];\r\n          }\r\n          return false;\r\n        }\r\n        return false;\r\n      }, \"test_match\"),\r\n      // return next match in input\r\n      next: /* @__PURE__ */ __name(function() {\r\n        if (this.done) {\r\n          return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n          this.done = true;\r\n        }\r\n        var token, match, tempMatch, index;\r\n        if (!this._more) {\r\n          this.yytext = \"\";\r\n          this.match = \"\";\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n          tempMatch = this._input.match(this.rules[rules[i]]);\r\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n            match = tempMatch;\r\n            index = i;\r\n            if (this.options.backtrack_lexer) {\r\n              token = this.test_match(tempMatch, rules[i]);\r\n              if (token !== false) {\r\n                return token;\r\n              } else if (this._backtrack) {\r\n                match = false;\r\n                continue;\r\n              } else {\r\n                return false;\r\n              }\r\n            } else if (!this.options.flex) {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (match) {\r\n          token = this.test_match(match, rules[index]);\r\n          if (token !== false) {\r\n            return token;\r\n          }\r\n          return false;\r\n        }\r\n        if (this._input === \"\") {\r\n          return this.EOF;\r\n        } else {\r\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\r\n            text: \"\",\r\n            token: null,\r\n            line: this.yylineno\r\n          });\r\n        }\r\n      }, \"next\"),\r\n      // return next match that has a token\r\n      lex: /* @__PURE__ */ __name(function lex() {\r\n        var r = this.next();\r\n        if (r) {\r\n          return r;\r\n        } else {\r\n          return this.lex();\r\n        }\r\n      }, \"lex\"),\r\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n      begin: /* @__PURE__ */ __name(function begin(condition) {\r\n        this.conditionStack.push(condition);\r\n      }, \"begin\"),\r\n      // pop the previously active lexer condition state off the condition stack\r\n      popState: /* @__PURE__ */ __name(function popState() {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n          return this.conditionStack.pop();\r\n        } else {\r\n          return this.conditionStack[0];\r\n        }\r\n      }, \"popState\"),\r\n      // produce the lexer rule set which is active for the currently active lexer condition state\r\n      _currentRules: /* @__PURE__ */ __name(function _currentRules() {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n          return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n      }, \"_currentRules\"),\r\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n      topState: /* @__PURE__ */ __name(function topState(n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n          return this.conditionStack[n];\r\n        } else {\r\n          return \"INITIAL\";\r\n        }\r\n      }, \"topState\"),\r\n      // alias for begin(condition)\r\n      pushState: /* @__PURE__ */ __name(function pushState(condition) {\r\n        this.begin(condition);\r\n      }, \"pushState\"),\r\n      // return the number of states currently on the stack\r\n      stateStackSize: /* @__PURE__ */ __name(function stateStackSize() {\r\n        return this.conditionStack.length;\r\n      }, \"stateStackSize\"),\r\n      options: { \"case-insensitive\": true },\r\n      performAction: /* @__PURE__ */ __name(function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\r\n        var YYSTATE = YY_START;\r\n        switch ($avoiding_name_collisions) {\r\n          case 0:\r\n            return 41;\r\n            break;\r\n          case 1:\r\n            return 48;\r\n            break;\r\n          case 2:\r\n            return 49;\r\n            break;\r\n          case 3:\r\n            return 50;\r\n            break;\r\n          case 4:\r\n            return 51;\r\n            break;\r\n          case 5:\r\n            break;\r\n          case 6:\r\n            {\r\n            }\r\n            break;\r\n          case 7:\r\n            return 5;\r\n            break;\r\n          case 8:\r\n            break;\r\n          case 9:\r\n            break;\r\n          case 10:\r\n            break;\r\n          case 11:\r\n            break;\r\n          case 12:\r\n            this.pushState(\"SCALE\");\r\n            return 17;\r\n            break;\r\n          case 13:\r\n            return 18;\r\n            break;\r\n          case 14:\r\n            this.popState();\r\n            break;\r\n          case 15:\r\n            this.begin(\"acc_title\");\r\n            return 33;\r\n            break;\r\n          case 16:\r\n            this.popState();\r\n            return \"acc_title_value\";\r\n            break;\r\n          case 17:\r\n            this.begin(\"acc_descr\");\r\n            return 35;\r\n            break;\r\n          case 18:\r\n            this.popState();\r\n            return \"acc_descr_value\";\r\n            break;\r\n          case 19:\r\n            this.begin(\"acc_descr_multiline\");\r\n            break;\r\n          case 20:\r\n            this.popState();\r\n            break;\r\n          case 21:\r\n            return \"acc_descr_multiline_value\";\r\n            break;\r\n          case 22:\r\n            this.pushState(\"CLASSDEF\");\r\n            return 38;\r\n            break;\r\n          case 23:\r\n            this.popState();\r\n            this.pushState(\"CLASSDEFID\");\r\n            return \"DEFAULT_CLASSDEF_ID\";\r\n            break;\r\n          case 24:\r\n            this.popState();\r\n            this.pushState(\"CLASSDEFID\");\r\n            return 39;\r\n            break;\r\n          case 25:\r\n            this.popState();\r\n            return 40;\r\n            break;\r\n          case 26:\r\n            this.pushState(\"CLASS\");\r\n            return 45;\r\n            break;\r\n          case 27:\r\n            this.popState();\r\n            this.pushState(\"CLASS_STYLE\");\r\n            return 46;\r\n            break;\r\n          case 28:\r\n            this.popState();\r\n            return 47;\r\n            break;\r\n          case 29:\r\n            this.pushState(\"STYLE\");\r\n            return 42;\r\n            break;\r\n          case 30:\r\n            this.popState();\r\n            this.pushState(\"STYLEDEF_STYLES\");\r\n            return 43;\r\n            break;\r\n          case 31:\r\n            this.popState();\r\n            return 44;\r\n            break;\r\n          case 32:\r\n            this.pushState(\"SCALE\");\r\n            return 17;\r\n            break;\r\n          case 33:\r\n            return 18;\r\n            break;\r\n          case 34:\r\n            this.popState();\r\n            break;\r\n          case 35:\r\n            this.pushState(\"STATE\");\r\n            break;\r\n          case 36:\r\n            this.popState();\r\n            yy_.yytext = yy_.yytext.slice(0, -8).trim();\r\n            return 25;\r\n            break;\r\n          case 37:\r\n            this.popState();\r\n            yy_.yytext = yy_.yytext.slice(0, -8).trim();\r\n            return 26;\r\n            break;\r\n          case 38:\r\n            this.popState();\r\n            yy_.yytext = yy_.yytext.slice(0, -10).trim();\r\n            return 27;\r\n            break;\r\n          case 39:\r\n            this.popState();\r\n            yy_.yytext = yy_.yytext.slice(0, -8).trim();\r\n            return 25;\r\n            break;\r\n          case 40:\r\n            this.popState();\r\n            yy_.yytext = yy_.yytext.slice(0, -8).trim();\r\n            return 26;\r\n            break;\r\n          case 41:\r\n            this.popState();\r\n            yy_.yytext = yy_.yytext.slice(0, -10).trim();\r\n            return 27;\r\n            break;\r\n          case 42:\r\n            return 48;\r\n            break;\r\n          case 43:\r\n            return 49;\r\n            break;\r\n          case 44:\r\n            return 50;\r\n            break;\r\n          case 45:\r\n            return 51;\r\n            break;\r\n          case 46:\r\n            this.pushState(\"STATE_STRING\");\r\n            break;\r\n          case 47:\r\n            this.pushState(\"STATE_ID\");\r\n            return \"AS\";\r\n            break;\r\n          case 48:\r\n            this.popState();\r\n            return \"ID\";\r\n            break;\r\n          case 49:\r\n            this.popState();\r\n            break;\r\n          case 50:\r\n            return \"STATE_DESCR\";\r\n            break;\r\n          case 51:\r\n            return 19;\r\n            break;\r\n          case 52:\r\n            this.popState();\r\n            break;\r\n          case 53:\r\n            this.popState();\r\n            this.pushState(\"struct\");\r\n            return 20;\r\n            break;\r\n          case 54:\r\n            break;\r\n          case 55:\r\n            this.popState();\r\n            return 21;\r\n            break;\r\n          case 56:\r\n            break;\r\n          case 57:\r\n            this.begin(\"NOTE\");\r\n            return 29;\r\n            break;\r\n          case 58:\r\n            this.popState();\r\n            this.pushState(\"NOTE_ID\");\r\n            return 56;\r\n            break;\r\n          case 59:\r\n            this.popState();\r\n            this.pushState(\"NOTE_ID\");\r\n            return 57;\r\n            break;\r\n          case 60:\r\n            this.popState();\r\n            this.pushState(\"FLOATING_NOTE\");\r\n            break;\r\n          case 61:\r\n            this.popState();\r\n            this.pushState(\"FLOATING_NOTE_ID\");\r\n            return \"AS\";\r\n            break;\r\n          case 62:\r\n            break;\r\n          case 63:\r\n            return \"NOTE_TEXT\";\r\n            break;\r\n          case 64:\r\n            this.popState();\r\n            return \"ID\";\r\n            break;\r\n          case 65:\r\n            this.popState();\r\n            this.pushState(\"NOTE_TEXT\");\r\n            return 24;\r\n            break;\r\n          case 66:\r\n            this.popState();\r\n            yy_.yytext = yy_.yytext.substr(2).trim();\r\n            return 31;\r\n            break;\r\n          case 67:\r\n            this.popState();\r\n            yy_.yytext = yy_.yytext.slice(0, -8).trim();\r\n            return 31;\r\n            break;\r\n          case 68:\r\n            return 6;\r\n            break;\r\n          case 69:\r\n            return 6;\r\n            break;\r\n          case 70:\r\n            return 16;\r\n            break;\r\n          case 71:\r\n            return 54;\r\n            break;\r\n          case 72:\r\n            return 24;\r\n            break;\r\n          case 73:\r\n            yy_.yytext = yy_.yytext.trim();\r\n            return 14;\r\n            break;\r\n          case 74:\r\n            return 15;\r\n            break;\r\n          case 75:\r\n            return 28;\r\n            break;\r\n          case 76:\r\n            return 55;\r\n            break;\r\n          case 77:\r\n            return 5;\r\n            break;\r\n          case 78:\r\n            return \"INVALID\";\r\n            break;\r\n        }\r\n      }, \"anonymous\"),\r\n      rules: [/^(?:default\\b)/i, /^(?:.*direction\\s+TB[^\\n]*)/i, /^(?:.*direction\\s+BT[^\\n]*)/i, /^(?:.*direction\\s+RL[^\\n]*)/i, /^(?:.*direction\\s+LR[^\\n]*)/i, /^(?:%%(?!\\{)[^\\n]*)/i, /^(?:[^\\}]%%[^\\n]*)/i, /^(?:[\\n]+)/i, /^(?:[\\s]+)/i, /^(?:((?!\\n)\\s)+)/i, /^(?:#[^\\n]*)/i, /^(?:%[^\\n]*)/i, /^(?:scale\\s+)/i, /^(?:\\d+)/i, /^(?:\\s+width\\b)/i, /^(?:accTitle\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*\\{\\s*)/i, /^(?:[\\}])/i, /^(?:[^\\}]*)/i, /^(?:classDef\\s+)/i, /^(?:DEFAULT\\s+)/i, /^(?:\\w+\\s+)/i, /^(?:[^\\n]*)/i, /^(?:class\\s+)/i, /^(?:(\\w+)+((,\\s*\\w+)*))/i, /^(?:[^\\n]*)/i, /^(?:style\\s+)/i, /^(?:[\\w,]+\\s+)/i, /^(?:[^\\n]*)/i, /^(?:scale\\s+)/i, /^(?:\\d+)/i, /^(?:\\s+width\\b)/i, /^(?:state\\s+)/i, /^(?:.*<<fork>>)/i, /^(?:.*<<join>>)/i, /^(?:.*<<choice>>)/i, /^(?:.*\\[\\[fork\\]\\])/i, /^(?:.*\\[\\[join\\]\\])/i, /^(?:.*\\[\\[choice\\]\\])/i, /^(?:.*direction\\s+TB[^\\n]*)/i, /^(?:.*direction\\s+BT[^\\n]*)/i, /^(?:.*direction\\s+RL[^\\n]*)/i, /^(?:.*direction\\s+LR[^\\n]*)/i, /^(?:[\"])/i, /^(?:\\s*as\\s+)/i, /^(?:[^\\n\\{]*)/i, /^(?:[\"])/i, /^(?:[^\"]*)/i, /^(?:[^\\n\\s\\{]+)/i, /^(?:\\n)/i, /^(?:\\{)/i, /^(?:%%(?!\\{)[^\\n]*)/i, /^(?:\\})/i, /^(?:[\\n])/i, /^(?:note\\s+)/i, /^(?:left of\\b)/i, /^(?:right of\\b)/i, /^(?:\")/i, /^(?:\\s*as\\s*)/i, /^(?:[\"])/i, /^(?:[^\"]*)/i, /^(?:[^\\n]*)/i, /^(?:\\s*[^:\\n\\s\\-]+)/i, /^(?:\\s*:[^:\\n;]+)/i, /^(?:[\\s\\S]*?end note\\b)/i, /^(?:stateDiagram\\s+)/i, /^(?:stateDiagram-v2\\s+)/i, /^(?:hide empty description\\b)/i, /^(?:\\[\\*\\])/i, /^(?:[^:\\n\\s\\-\\{]+)/i, /^(?:\\s*:[^:\\n;]+)/i, /^(?:-->)/i, /^(?:--)/i, /^(?::::)/i, /^(?:$)/i, /^(?:.)/i],\r\n      conditions: { \"LINE\": { \"rules\": [9, 10], \"inclusive\": false }, \"struct\": { \"rules\": [9, 10, 22, 26, 29, 35, 42, 43, 44, 45, 54, 55, 56, 57, 71, 72, 73, 74, 75], \"inclusive\": false }, \"FLOATING_NOTE_ID\": { \"rules\": [64], \"inclusive\": false }, \"FLOATING_NOTE\": { \"rules\": [61, 62, 63], \"inclusive\": false }, \"NOTE_TEXT\": { \"rules\": [66, 67], \"inclusive\": false }, \"NOTE_ID\": { \"rules\": [65], \"inclusive\": false }, \"NOTE\": { \"rules\": [58, 59, 60], \"inclusive\": false }, \"STYLEDEF_STYLEOPTS\": { \"rules\": [], \"inclusive\": false }, \"STYLEDEF_STYLES\": { \"rules\": [31], \"inclusive\": false }, \"STYLE_IDS\": { \"rules\": [], \"inclusive\": false }, \"STYLE\": { \"rules\": [30], \"inclusive\": false }, \"CLASS_STYLE\": { \"rules\": [28], \"inclusive\": false }, \"CLASS\": { \"rules\": [27], \"inclusive\": false }, \"CLASSDEFID\": { \"rules\": [25], \"inclusive\": false }, \"CLASSDEF\": { \"rules\": [23, 24], \"inclusive\": false }, \"acc_descr_multiline\": { \"rules\": [20, 21], \"inclusive\": false }, \"acc_descr\": { \"rules\": [18], \"inclusive\": false }, \"acc_title\": { \"rules\": [16], \"inclusive\": false }, \"SCALE\": { \"rules\": [13, 14, 33, 34], \"inclusive\": false }, \"ALIAS\": { \"rules\": [], \"inclusive\": false }, \"STATE_ID\": { \"rules\": [48], \"inclusive\": false }, \"STATE_STRING\": { \"rules\": [49, 50], \"inclusive\": false }, \"FORK_STATE\": { \"rules\": [], \"inclusive\": false }, \"STATE\": { \"rules\": [9, 10, 36, 37, 38, 39, 40, 41, 46, 47, 51, 52, 53], \"inclusive\": false }, \"ID\": { \"rules\": [9, 10], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 17, 19, 22, 26, 29, 32, 35, 53, 57, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78], \"inclusive\": true } }\r\n    };\r\n    return lexer2;\r\n  }();\r\n  parser2.lexer = lexer;\r\n  function Parser() {\r\n    this.yy = {};\r\n  }\r\n  __name(Parser, \"Parser\");\r\n  Parser.prototype = parser2;\r\n  parser2.Parser = Parser;\r\n  return new Parser();\r\n}();\r\nparser.parser = parser;\r\nvar stateDiagram_default = parser;\r\n\r\n// src/diagrams/state/stateCommon.ts\r\nvar DEFAULT_DIAGRAM_DIRECTION = \"LR\";\r\nvar DEFAULT_NESTED_DOC_DIR = \"TB\";\r\nvar STMT_STATE = \"state\";\r\nvar STMT_RELATION = \"relation\";\r\nvar STMT_CLASSDEF = \"classDef\";\r\nvar STMT_STYLEDEF = \"style\";\r\nvar STMT_APPLYCLASS = \"applyClass\";\r\nvar DEFAULT_STATE_TYPE = \"default\";\r\nvar DIVIDER_TYPE = \"divider\";\r\nvar G_EDGE_STYLE = \"fill:none\";\r\nvar G_EDGE_ARROWHEADSTYLE = \"fill: #333\";\r\nvar G_EDGE_LABELPOS = \"c\";\r\nvar G_EDGE_LABELTYPE = \"text\";\r\nvar G_EDGE_THICKNESS = \"normal\";\r\nvar SHAPE_STATE = \"rect\";\r\nvar SHAPE_STATE_WITH_DESC = \"rectWithTitle\";\r\nvar SHAPE_START = \"stateStart\";\r\nvar SHAPE_END = \"stateEnd\";\r\nvar SHAPE_DIVIDER = \"divider\";\r\nvar SHAPE_GROUP = \"roundedWithTitle\";\r\nvar SHAPE_NOTE = \"note\";\r\nvar SHAPE_NOTEGROUP = \"noteGroup\";\r\nvar CSS_DIAGRAM = \"statediagram\";\r\nvar CSS_STATE = \"state\";\r\nvar CSS_DIAGRAM_STATE = `${CSS_DIAGRAM}-${CSS_STATE}`;\r\nvar CSS_EDGE = \"transition\";\r\nvar CSS_NOTE = \"note\";\r\nvar CSS_NOTE_EDGE = \"note-edge\";\r\nvar CSS_EDGE_NOTE_EDGE = `${CSS_EDGE} ${CSS_NOTE_EDGE}`;\r\nvar CSS_DIAGRAM_NOTE = `${CSS_DIAGRAM}-${CSS_NOTE}`;\r\nvar CSS_CLUSTER = \"cluster\";\r\nvar CSS_DIAGRAM_CLUSTER = `${CSS_DIAGRAM}-${CSS_CLUSTER}`;\r\nvar CSS_CLUSTER_ALT = \"cluster-alt\";\r\nvar CSS_DIAGRAM_CLUSTER_ALT = `${CSS_DIAGRAM}-${CSS_CLUSTER_ALT}`;\r\nvar PARENT = \"parent\";\r\nvar NOTE = \"note\";\r\nvar DOMID_STATE = \"state\";\r\nvar DOMID_TYPE_SPACER = \"----\";\r\nvar NOTE_ID = `${DOMID_TYPE_SPACER}${NOTE}`;\r\nvar PARENT_ID = `${DOMID_TYPE_SPACER}${PARENT}`;\r\n\r\n// src/diagrams/state/stateRenderer-v3-unified.ts\r\nvar getDir = /* @__PURE__ */ __name((parsedItem, defaultDir = DEFAULT_NESTED_DOC_DIR) => {\r\n  if (!parsedItem.doc) {\r\n    return defaultDir;\r\n  }\r\n  let dir = defaultDir;\r\n  for (const parsedItemDoc of parsedItem.doc) {\r\n    if (parsedItemDoc.stmt === \"dir\") {\r\n      dir = parsedItemDoc.value;\r\n    }\r\n  }\r\n  return dir;\r\n}, \"getDir\");\r\nvar getClasses = /* @__PURE__ */ __name(function(text, diagramObj) {\r\n  diagramObj.db.extract(diagramObj.db.getRootDocV2());\r\n  return diagramObj.db.getClasses();\r\n}, \"getClasses\");\r\nvar draw = /* @__PURE__ */ __name(async function(text, id, _version, diag) {\r\n  log.info(\"REF0:\");\r\n  log.info(\"Drawing state diagram (v2)\", id);\r\n  const { securityLevel, state: conf, layout } = getConfig();\r\n  diag.db.extract(diag.db.getRootDocV2());\r\n  const data4Layout = diag.db.getData();\r\n  const svg = getDiagramElement(id, securityLevel);\r\n  data4Layout.type = diag.type;\r\n  data4Layout.layoutAlgorithm = layout;\r\n  data4Layout.nodeSpacing = conf?.nodeSpacing || 50;\r\n  data4Layout.rankSpacing = conf?.rankSpacing || 50;\r\n  data4Layout.markers = [\"barb\"];\r\n  data4Layout.diagramId = id;\r\n  await render(data4Layout, svg);\r\n  const padding = 8;\r\n  utils_default.insertTitle(\r\n    svg,\r\n    \"statediagramTitleText\",\r\n    conf?.titleTopMargin ?? 25,\r\n    diag.db.getDiagramTitle()\r\n  );\r\n  setupViewPortForSVG(svg, padding, CSS_DIAGRAM, conf?.useMaxWidth ?? true);\r\n}, \"draw\");\r\nvar stateRenderer_v3_unified_default = {\r\n  getClasses,\r\n  draw,\r\n  getDir\r\n};\r\n\r\n// src/diagrams/state/dataFetcher.js\r\nvar nodeDb = /* @__PURE__ */ new Map();\r\nvar graphItemCount = 0;\r\nfunction stateDomId(itemId = \"\", counter = 0, type = \"\", typeSpacer = DOMID_TYPE_SPACER) {\r\n  const typeStr = type !== null && type.length > 0 ? `${typeSpacer}${type}` : \"\";\r\n  return `${DOMID_STATE}-${itemId}${typeStr}-${counter}`;\r\n}\r\n__name(stateDomId, \"stateDomId\");\r\nvar setupDoc = /* @__PURE__ */ __name((parentParsedItem, doc, diagramStates, nodes2, edges2, altFlag, look, classes2) => {\r\n  log.trace(\"items\", doc);\r\n  doc.forEach((item) => {\r\n    switch (item.stmt) {\r\n      case STMT_STATE:\r\n        dataFetcher(parentParsedItem, item, diagramStates, nodes2, edges2, altFlag, look, classes2);\r\n        break;\r\n      case DEFAULT_STATE_TYPE:\r\n        dataFetcher(parentParsedItem, item, diagramStates, nodes2, edges2, altFlag, look, classes2);\r\n        break;\r\n      case STMT_RELATION:\r\n        {\r\n          dataFetcher(\r\n            parentParsedItem,\r\n            item.state1,\r\n            diagramStates,\r\n            nodes2,\r\n            edges2,\r\n            altFlag,\r\n            look,\r\n            classes2\r\n          );\r\n          dataFetcher(\r\n            parentParsedItem,\r\n            item.state2,\r\n            diagramStates,\r\n            nodes2,\r\n            edges2,\r\n            altFlag,\r\n            look,\r\n            classes2\r\n          );\r\n          const edgeData = {\r\n            id: \"edge\" + graphItemCount,\r\n            start: item.state1.id,\r\n            end: item.state2.id,\r\n            arrowhead: \"normal\",\r\n            arrowTypeEnd: \"arrow_barb\",\r\n            style: G_EDGE_STYLE,\r\n            labelStyle: \"\",\r\n            label: common_default.sanitizeText(item.description, getConfig()),\r\n            arrowheadStyle: G_EDGE_ARROWHEADSTYLE,\r\n            labelpos: G_EDGE_LABELPOS,\r\n            labelType: G_EDGE_LABELTYPE,\r\n            thickness: G_EDGE_THICKNESS,\r\n            classes: CSS_EDGE,\r\n            look\r\n          };\r\n          edges2.push(edgeData);\r\n          graphItemCount++;\r\n        }\r\n        break;\r\n    }\r\n  });\r\n}, \"setupDoc\");\r\nvar getDir2 = /* @__PURE__ */ __name((parsedItem, defaultDir = DEFAULT_NESTED_DOC_DIR) => {\r\n  let dir = defaultDir;\r\n  if (parsedItem.doc) {\r\n    for (const parsedItemDoc of parsedItem.doc) {\r\n      if (parsedItemDoc.stmt === \"dir\") {\r\n        dir = parsedItemDoc.value;\r\n      }\r\n    }\r\n  }\r\n  return dir;\r\n}, \"getDir\");\r\nfunction insertOrUpdateNode(nodes2, nodeData, classes2) {\r\n  if (!nodeData.id || nodeData.id === \"</join></fork>\" || nodeData.id === \"</choice>\") {\r\n    return;\r\n  }\r\n  if (nodeData.cssClasses) {\r\n    if (!Array.isArray(nodeData.cssCompiledStyles)) {\r\n      nodeData.cssCompiledStyles = [];\r\n    }\r\n    nodeData.cssClasses.split(\" \").forEach((cssClass) => {\r\n      if (classes2.get(cssClass)) {\r\n        const classDef = classes2.get(cssClass);\r\n        nodeData.cssCompiledStyles = [...nodeData.cssCompiledStyles, ...classDef.styles];\r\n      }\r\n    });\r\n  }\r\n  const existingNodeData = nodes2.find((node) => node.id === nodeData.id);\r\n  if (existingNodeData) {\r\n    Object.assign(existingNodeData, nodeData);\r\n  } else {\r\n    nodes2.push(nodeData);\r\n  }\r\n}\r\n__name(insertOrUpdateNode, \"insertOrUpdateNode\");\r\nfunction getClassesFromDbInfo(dbInfoItem) {\r\n  return dbInfoItem?.classes?.join(\" \") ?? \"\";\r\n}\r\n__name(getClassesFromDbInfo, \"getClassesFromDbInfo\");\r\nfunction getStylesFromDbInfo(dbInfoItem) {\r\n  return dbInfoItem?.styles ?? [];\r\n}\r\n__name(getStylesFromDbInfo, \"getStylesFromDbInfo\");\r\nvar dataFetcher = /* @__PURE__ */ __name((parent, parsedItem, diagramStates, nodes2, edges2, altFlag, look, classes2) => {\r\n  const itemId = parsedItem.id;\r\n  const dbState = diagramStates.get(itemId);\r\n  const classStr = getClassesFromDbInfo(dbState);\r\n  const style = getStylesFromDbInfo(dbState);\r\n  log.info(\"dataFetcher parsedItem\", parsedItem, dbState, style);\r\n  if (itemId !== \"root\") {\r\n    let shape = SHAPE_STATE;\r\n    if (parsedItem.start === true) {\r\n      shape = SHAPE_START;\r\n    } else if (parsedItem.start === false) {\r\n      shape = SHAPE_END;\r\n    }\r\n    if (parsedItem.type !== DEFAULT_STATE_TYPE) {\r\n      shape = parsedItem.type;\r\n    }\r\n    if (!nodeDb.get(itemId)) {\r\n      nodeDb.set(itemId, {\r\n        id: itemId,\r\n        shape,\r\n        description: common_default.sanitizeText(itemId, getConfig()),\r\n        cssClasses: `${classStr} ${CSS_DIAGRAM_STATE}`,\r\n        cssStyles: style\r\n      });\r\n    }\r\n    const newNode = nodeDb.get(itemId);\r\n    if (parsedItem.description) {\r\n      if (Array.isArray(newNode.description)) {\r\n        newNode.shape = SHAPE_STATE_WITH_DESC;\r\n        newNode.description.push(parsedItem.description);\r\n      } else {\r\n        if (newNode.description?.length > 0) {\r\n          newNode.shape = SHAPE_STATE_WITH_DESC;\r\n          if (newNode.description === itemId) {\r\n            newNode.description = [parsedItem.description];\r\n          } else {\r\n            newNode.description = [newNode.description, parsedItem.description];\r\n          }\r\n        } else {\r\n          newNode.shape = SHAPE_STATE;\r\n          newNode.description = parsedItem.description;\r\n        }\r\n      }\r\n      newNode.description = common_default.sanitizeTextOrArray(newNode.description, getConfig());\r\n    }\r\n    if (newNode.description?.length === 1 && newNode.shape === SHAPE_STATE_WITH_DESC) {\r\n      if (newNode.type === \"group\") {\r\n        newNode.shape = SHAPE_GROUP;\r\n      } else {\r\n        newNode.shape = SHAPE_STATE;\r\n      }\r\n    }\r\n    if (!newNode.type && parsedItem.doc) {\r\n      log.info(\"Setting cluster for XCX\", itemId, getDir2(parsedItem));\r\n      newNode.type = \"group\";\r\n      newNode.isGroup = true;\r\n      newNode.dir = getDir2(parsedItem);\r\n      newNode.shape = parsedItem.type === DIVIDER_TYPE ? SHAPE_DIVIDER : SHAPE_GROUP;\r\n      newNode.cssClasses = `${newNode.cssClasses} ${CSS_DIAGRAM_CLUSTER} ${altFlag ? CSS_DIAGRAM_CLUSTER_ALT : \"\"}`;\r\n    }\r\n    const nodeData = {\r\n      labelStyle: \"\",\r\n      shape: newNode.shape,\r\n      label: newNode.description,\r\n      cssClasses: newNode.cssClasses,\r\n      cssCompiledStyles: [],\r\n      cssStyles: newNode.cssStyles,\r\n      id: itemId,\r\n      dir: newNode.dir,\r\n      domId: stateDomId(itemId, graphItemCount),\r\n      type: newNode.type,\r\n      isGroup: newNode.type === \"group\",\r\n      padding: 8,\r\n      rx: 10,\r\n      ry: 10,\r\n      look\r\n    };\r\n    if (nodeData.shape === SHAPE_DIVIDER) {\r\n      nodeData.label = \"\";\r\n    }\r\n    if (parent && parent.id !== \"root\") {\r\n      log.trace(\"Setting node \", itemId, \" to be child of its parent \", parent.id);\r\n      nodeData.parentId = parent.id;\r\n    }\r\n    nodeData.centerLabel = true;\r\n    if (parsedItem.note) {\r\n      const noteData = {\r\n        labelStyle: \"\",\r\n        shape: SHAPE_NOTE,\r\n        label: parsedItem.note.text,\r\n        cssClasses: CSS_DIAGRAM_NOTE,\r\n        // useHtmlLabels: false,\r\n        cssStyles: [],\r\n        cssCompilesStyles: [],\r\n        id: itemId + NOTE_ID + \"-\" + graphItemCount,\r\n        domId: stateDomId(itemId, graphItemCount, NOTE),\r\n        type: newNode.type,\r\n        isGroup: newNode.type === \"group\",\r\n        padding: getConfig().flowchart.padding,\r\n        look,\r\n        position: parsedItem.note.position\r\n      };\r\n      const parentNodeId = itemId + PARENT_ID;\r\n      const groupData = {\r\n        labelStyle: \"\",\r\n        shape: SHAPE_NOTEGROUP,\r\n        label: parsedItem.note.text,\r\n        cssClasses: newNode.cssClasses,\r\n        cssStyles: [],\r\n        id: itemId + PARENT_ID,\r\n        domId: stateDomId(itemId, graphItemCount, PARENT),\r\n        type: \"group\",\r\n        isGroup: true,\r\n        padding: 16,\r\n        //getConfig().flowchart.padding\r\n        look,\r\n        position: parsedItem.note.position\r\n      };\r\n      graphItemCount++;\r\n      groupData.id = parentNodeId;\r\n      noteData.parentId = parentNodeId;\r\n      insertOrUpdateNode(nodes2, groupData, classes2);\r\n      insertOrUpdateNode(nodes2, noteData, classes2);\r\n      insertOrUpdateNode(nodes2, nodeData, classes2);\r\n      let from = itemId;\r\n      let to = noteData.id;\r\n      if (parsedItem.note.position === \"left of\") {\r\n        from = noteData.id;\r\n        to = itemId;\r\n      }\r\n      edges2.push({\r\n        id: from + \"-\" + to,\r\n        start: from,\r\n        end: to,\r\n        arrowhead: \"none\",\r\n        arrowTypeEnd: \"\",\r\n        style: G_EDGE_STYLE,\r\n        labelStyle: \"\",\r\n        classes: CSS_EDGE_NOTE_EDGE,\r\n        arrowheadStyle: G_EDGE_ARROWHEADSTYLE,\r\n        labelpos: G_EDGE_LABELPOS,\r\n        labelType: G_EDGE_LABELTYPE,\r\n        thickness: G_EDGE_THICKNESS,\r\n        look\r\n      });\r\n    } else {\r\n      insertOrUpdateNode(nodes2, nodeData, classes2);\r\n    }\r\n  }\r\n  if (parsedItem.doc) {\r\n    log.trace(\"Adding nodes children \");\r\n    setupDoc(parsedItem, parsedItem.doc, diagramStates, nodes2, edges2, !altFlag, look, classes2);\r\n  }\r\n}, \"dataFetcher\");\r\nvar reset = /* @__PURE__ */ __name(() => {\r\n  nodeDb.clear();\r\n  graphItemCount = 0;\r\n}, \"reset\");\r\n\r\n// src/diagrams/state/stateDb.js\r\nvar START_NODE = \"[*]\";\r\nvar START_TYPE = \"start\";\r\nvar END_NODE = START_NODE;\r\nvar END_TYPE = \"end\";\r\nvar COLOR_KEYWORD = \"color\";\r\nvar FILL_KEYWORD = \"fill\";\r\nvar BG_FILL = \"bgFill\";\r\nvar STYLECLASS_SEP = \",\";\r\nfunction newClassesList() {\r\n  return /* @__PURE__ */ new Map();\r\n}\r\n__name(newClassesList, \"newClassesList\");\r\nvar nodes = [];\r\nvar edges = [];\r\nvar direction = DEFAULT_DIAGRAM_DIRECTION;\r\nvar rootDoc = [];\r\nvar classes = newClassesList();\r\nvar newDoc = /* @__PURE__ */ __name(() => {\r\n  return {\r\n    /** @type {{ id1: string, id2: string, relationTitle: string }[]} */\r\n    relations: [],\r\n    states: /* @__PURE__ */ new Map(),\r\n    documents: {}\r\n  };\r\n}, \"newDoc\");\r\nvar documents = {\r\n  root: newDoc()\r\n};\r\nvar currentDocument = documents.root;\r\nvar startEndCount = 0;\r\nvar dividerCnt = 0;\r\nvar lineType = {\r\n  LINE: 0,\r\n  DOTTED_LINE: 1\r\n};\r\nvar relationType = {\r\n  AGGREGATION: 0,\r\n  EXTENSION: 1,\r\n  COMPOSITION: 2,\r\n  DEPENDENCY: 3\r\n};\r\nvar clone = /* @__PURE__ */ __name((o) => JSON.parse(JSON.stringify(o)), \"clone\");\r\nvar setRootDoc = /* @__PURE__ */ __name((o) => {\r\n  log.info(\"Setting root doc\", o);\r\n  rootDoc = o;\r\n}, \"setRootDoc\");\r\nvar getRootDoc = /* @__PURE__ */ __name(() => rootDoc, \"getRootDoc\");\r\nvar docTranslator = /* @__PURE__ */ __name((parent, node, first) => {\r\n  if (node.stmt === STMT_RELATION) {\r\n    docTranslator(parent, node.state1, true);\r\n    docTranslator(parent, node.state2, false);\r\n  } else {\r\n    if (node.stmt === STMT_STATE) {\r\n      if (node.id === \"[*]\") {\r\n        node.id = first ? parent.id + \"_start\" : parent.id + \"_end\";\r\n        node.start = first;\r\n      } else {\r\n        node.id = node.id.trim();\r\n      }\r\n    }\r\n    if (node.doc) {\r\n      const doc = [];\r\n      let currentDoc = [];\r\n      let i;\r\n      for (i = 0; i < node.doc.length; i++) {\r\n        if (node.doc[i].type === DIVIDER_TYPE) {\r\n          const newNode = clone(node.doc[i]);\r\n          newNode.doc = clone(currentDoc);\r\n          doc.push(newNode);\r\n          currentDoc = [];\r\n        } else {\r\n          currentDoc.push(node.doc[i]);\r\n        }\r\n      }\r\n      if (doc.length > 0 && currentDoc.length > 0) {\r\n        const newNode = {\r\n          stmt: STMT_STATE,\r\n          id: generateId(),\r\n          type: \"divider\",\r\n          doc: clone(currentDoc)\r\n        };\r\n        doc.push(clone(newNode));\r\n        node.doc = doc;\r\n      }\r\n      node.doc.forEach((docNode) => docTranslator(node, docNode, true));\r\n    }\r\n  }\r\n}, \"docTranslator\");\r\nvar getRootDocV2 = /* @__PURE__ */ __name(() => {\r\n  docTranslator({ id: \"root\" }, { id: \"root\", doc: rootDoc }, true);\r\n  return { id: \"root\", doc: rootDoc };\r\n}, \"getRootDocV2\");\r\nvar extract = /* @__PURE__ */ __name((_doc) => {\r\n  let doc;\r\n  if (_doc.doc) {\r\n    doc = _doc.doc;\r\n  } else {\r\n    doc = _doc;\r\n  }\r\n  log.info(doc);\r\n  clear2(true);\r\n  log.info(\"Extract initial document:\", doc);\r\n  doc.forEach((item) => {\r\n    log.warn(\"Statement\", item.stmt);\r\n    switch (item.stmt) {\r\n      case STMT_STATE:\r\n        addState(\r\n          item.id.trim(),\r\n          item.type,\r\n          item.doc,\r\n          item.description,\r\n          item.note,\r\n          item.classes,\r\n          item.styles,\r\n          item.textStyles\r\n        );\r\n        break;\r\n      case STMT_RELATION:\r\n        addRelation(item.state1, item.state2, item.description);\r\n        break;\r\n      case STMT_CLASSDEF:\r\n        addStyleClass(item.id.trim(), item.classes);\r\n        break;\r\n      case STMT_STYLEDEF:\r\n        {\r\n          const ids = item.id.trim().split(\",\");\r\n          const styles = item.styleClass.split(\",\");\r\n          ids.forEach((id) => {\r\n            let foundState = getState(id);\r\n            if (foundState === void 0) {\r\n              const trimmedId = id.trim();\r\n              addState(trimmedId);\r\n              foundState = getState(trimmedId);\r\n            }\r\n            foundState.styles = styles.map((s) => s.replace(/;/g, \"\")?.trim());\r\n          });\r\n        }\r\n        break;\r\n      case STMT_APPLYCLASS:\r\n        setCssClass(item.id.trim(), item.styleClass);\r\n        break;\r\n    }\r\n  });\r\n  const diagramStates = getStates();\r\n  const config = getConfig();\r\n  const look = config.look;\r\n  reset();\r\n  dataFetcher(void 0, getRootDocV2(), diagramStates, nodes, edges, true, look, classes);\r\n  nodes.forEach((node) => {\r\n    if (Array.isArray(node.label)) {\r\n      node.description = node.label.slice(1);\r\n      if (node.isGroup && node.description.length > 0) {\r\n        throw new Error(\r\n          \"Group nodes can only have label. Remove the additional description for node [\" + node.id + \"]\"\r\n        );\r\n      }\r\n      node.label = node.label[0];\r\n    }\r\n  });\r\n}, \"extract\");\r\nvar addState = /* @__PURE__ */ __name(function(id, type = DEFAULT_STATE_TYPE, doc = null, descr = null, note = null, classes2 = null, styles = null, textStyles = null) {\r\n  const trimmedId = id?.trim();\r\n  if (!currentDocument.states.has(trimmedId)) {\r\n    log.info(\"Adding state \", trimmedId, descr);\r\n    currentDocument.states.set(trimmedId, {\r\n      id: trimmedId,\r\n      descriptions: [],\r\n      type,\r\n      doc,\r\n      note,\r\n      classes: [],\r\n      styles: [],\r\n      textStyles: []\r\n    });\r\n  } else {\r\n    if (!currentDocument.states.get(trimmedId).doc) {\r\n      currentDocument.states.get(trimmedId).doc = doc;\r\n    }\r\n    if (!currentDocument.states.get(trimmedId).type) {\r\n      currentDocument.states.get(trimmedId).type = type;\r\n    }\r\n  }\r\n  if (descr) {\r\n    log.info(\"Setting state description\", trimmedId, descr);\r\n    if (typeof descr === \"string\") {\r\n      addDescription(trimmedId, descr.trim());\r\n    }\r\n    if (typeof descr === \"object\") {\r\n      descr.forEach((des) => addDescription(trimmedId, des.trim()));\r\n    }\r\n  }\r\n  if (note) {\r\n    const doc2 = currentDocument.states.get(trimmedId);\r\n    doc2.note = note;\r\n    doc2.note.text = common_default.sanitizeText(doc2.note.text, getConfig());\r\n  }\r\n  if (classes2) {\r\n    log.info(\"Setting state classes\", trimmedId, classes2);\r\n    const classesList = typeof classes2 === \"string\" ? [classes2] : classes2;\r\n    classesList.forEach((cssClass) => setCssClass(trimmedId, cssClass.trim()));\r\n  }\r\n  if (styles) {\r\n    log.info(\"Setting state styles\", trimmedId, styles);\r\n    const stylesList = typeof styles === \"string\" ? [styles] : styles;\r\n    stylesList.forEach((style) => setStyle(trimmedId, style.trim()));\r\n  }\r\n  if (textStyles) {\r\n    log.info(\"Setting state styles\", trimmedId, styles);\r\n    const textStylesList = typeof textStyles === \"string\" ? [textStyles] : textStyles;\r\n    textStylesList.forEach((textStyle) => setTextStyle(trimmedId, textStyle.trim()));\r\n  }\r\n}, \"addState\");\r\nvar clear2 = /* @__PURE__ */ __name(function(saveCommon) {\r\n  nodes = [];\r\n  edges = [];\r\n  documents = {\r\n    root: newDoc()\r\n  };\r\n  currentDocument = documents.root;\r\n  startEndCount = 0;\r\n  classes = newClassesList();\r\n  if (!saveCommon) {\r\n    clear();\r\n  }\r\n}, \"clear\");\r\nvar getState = /* @__PURE__ */ __name(function(id) {\r\n  return currentDocument.states.get(id);\r\n}, \"getState\");\r\nvar getStates = /* @__PURE__ */ __name(function() {\r\n  return currentDocument.states;\r\n}, \"getStates\");\r\nvar logDocuments = /* @__PURE__ */ __name(function() {\r\n  log.info(\"Documents = \", documents);\r\n}, \"logDocuments\");\r\nvar getRelations = /* @__PURE__ */ __name(function() {\r\n  return currentDocument.relations;\r\n}, \"getRelations\");\r\nfunction startIdIfNeeded(id = \"\") {\r\n  let fixedId = id;\r\n  if (id === START_NODE) {\r\n    startEndCount++;\r\n    fixedId = `${START_TYPE}${startEndCount}`;\r\n  }\r\n  return fixedId;\r\n}\r\n__name(startIdIfNeeded, \"startIdIfNeeded\");\r\nfunction startTypeIfNeeded(id = \"\", type = DEFAULT_STATE_TYPE) {\r\n  return id === START_NODE ? START_TYPE : type;\r\n}\r\n__name(startTypeIfNeeded, \"startTypeIfNeeded\");\r\nfunction endIdIfNeeded(id = \"\") {\r\n  let fixedId = id;\r\n  if (id === END_NODE) {\r\n    startEndCount++;\r\n    fixedId = `${END_TYPE}${startEndCount}`;\r\n  }\r\n  return fixedId;\r\n}\r\n__name(endIdIfNeeded, \"endIdIfNeeded\");\r\nfunction endTypeIfNeeded(id = \"\", type = DEFAULT_STATE_TYPE) {\r\n  return id === END_NODE ? END_TYPE : type;\r\n}\r\n__name(endTypeIfNeeded, \"endTypeIfNeeded\");\r\nfunction addRelationObjs(item1, item2, relationTitle) {\r\n  let id1 = startIdIfNeeded(item1.id.trim());\r\n  let type1 = startTypeIfNeeded(item1.id.trim(), item1.type);\r\n  let id2 = startIdIfNeeded(item2.id.trim());\r\n  let type2 = startTypeIfNeeded(item2.id.trim(), item2.type);\r\n  addState(\r\n    id1,\r\n    type1,\r\n    item1.doc,\r\n    item1.description,\r\n    item1.note,\r\n    item1.classes,\r\n    item1.styles,\r\n    item1.textStyles\r\n  );\r\n  addState(\r\n    id2,\r\n    type2,\r\n    item2.doc,\r\n    item2.description,\r\n    item2.note,\r\n    item2.classes,\r\n    item2.styles,\r\n    item2.textStyles\r\n  );\r\n  currentDocument.relations.push({\r\n    id1,\r\n    id2,\r\n    relationTitle: common_default.sanitizeText(relationTitle, getConfig())\r\n  });\r\n}\r\n__name(addRelationObjs, \"addRelationObjs\");\r\nvar addRelation = /* @__PURE__ */ __name(function(item1, item2, title) {\r\n  if (typeof item1 === \"object\") {\r\n    addRelationObjs(item1, item2, title);\r\n  } else {\r\n    const id1 = startIdIfNeeded(item1.trim());\r\n    const type1 = startTypeIfNeeded(item1);\r\n    const id2 = endIdIfNeeded(item2.trim());\r\n    const type2 = endTypeIfNeeded(item2);\r\n    addState(id1, type1);\r\n    addState(id2, type2);\r\n    currentDocument.relations.push({\r\n      id1,\r\n      id2,\r\n      title: common_default.sanitizeText(title, getConfig())\r\n    });\r\n  }\r\n}, \"addRelation\");\r\nvar addDescription = /* @__PURE__ */ __name(function(id, descr) {\r\n  const theState = currentDocument.states.get(id);\r\n  const _descr = descr.startsWith(\":\") ? descr.replace(\":\", \"\").trim() : descr;\r\n  theState.descriptions.push(common_default.sanitizeText(_descr, getConfig()));\r\n}, \"addDescription\");\r\nvar cleanupLabel = /* @__PURE__ */ __name(function(label) {\r\n  if (label.substring(0, 1) === \":\") {\r\n    return label.substr(2).trim();\r\n  } else {\r\n    return label.trim();\r\n  }\r\n}, \"cleanupLabel\");\r\nvar getDividerId = /* @__PURE__ */ __name(() => {\r\n  dividerCnt++;\r\n  return \"divider-id-\" + dividerCnt;\r\n}, \"getDividerId\");\r\nvar addStyleClass = /* @__PURE__ */ __name(function(id, styleAttributes = \"\") {\r\n  if (!classes.has(id)) {\r\n    classes.set(id, { id, styles: [], textStyles: [] });\r\n  }\r\n  const foundClass = classes.get(id);\r\n  if (styleAttributes !== void 0 && styleAttributes !== null) {\r\n    styleAttributes.split(STYLECLASS_SEP).forEach((attrib) => {\r\n      const fixedAttrib = attrib.replace(/([^;]*);/, \"$1\").trim();\r\n      if (RegExp(COLOR_KEYWORD).exec(attrib)) {\r\n        const newStyle1 = fixedAttrib.replace(FILL_KEYWORD, BG_FILL);\r\n        const newStyle2 = newStyle1.replace(COLOR_KEYWORD, FILL_KEYWORD);\r\n        foundClass.textStyles.push(newStyle2);\r\n      }\r\n      foundClass.styles.push(fixedAttrib);\r\n    });\r\n  }\r\n}, \"addStyleClass\");\r\nvar getClasses2 = /* @__PURE__ */ __name(function() {\r\n  return classes;\r\n}, \"getClasses\");\r\nvar setCssClass = /* @__PURE__ */ __name(function(itemIds, cssClassName) {\r\n  itemIds.split(\",\").forEach(function(id) {\r\n    let foundState = getState(id);\r\n    if (foundState === void 0) {\r\n      const trimmedId = id.trim();\r\n      addState(trimmedId);\r\n      foundState = getState(trimmedId);\r\n    }\r\n    foundState.classes.push(cssClassName);\r\n  });\r\n}, \"setCssClass\");\r\nvar setStyle = /* @__PURE__ */ __name(function(itemId, styleText) {\r\n  const item = getState(itemId);\r\n  if (item !== void 0) {\r\n    item.styles.push(styleText);\r\n  }\r\n}, \"setStyle\");\r\nvar setTextStyle = /* @__PURE__ */ __name(function(itemId, cssClassName) {\r\n  const item = getState(itemId);\r\n  if (item !== void 0) {\r\n    item.textStyles.push(cssClassName);\r\n  }\r\n}, \"setTextStyle\");\r\nvar getDirection = /* @__PURE__ */ __name(() => direction, \"getDirection\");\r\nvar setDirection = /* @__PURE__ */ __name((dir) => {\r\n  direction = dir;\r\n}, \"setDirection\");\r\nvar trimColon = /* @__PURE__ */ __name((str) => str && str[0] === \":\" ? str.substr(1).trim() : str.trim(), \"trimColon\");\r\nvar getData = /* @__PURE__ */ __name(() => {\r\n  const config = getConfig();\r\n  return { nodes, edges, other: {}, config, direction: getDir(getRootDocV2()) };\r\n}, \"getData\");\r\nvar stateDb_default = {\r\n  getConfig: /* @__PURE__ */ __name(() => getConfig().state, \"getConfig\"),\r\n  getData,\r\n  addState,\r\n  clear: clear2,\r\n  getState,\r\n  getStates,\r\n  getRelations,\r\n  getClasses: getClasses2,\r\n  getDirection,\r\n  addRelation,\r\n  getDividerId,\r\n  setDirection,\r\n  cleanupLabel,\r\n  lineType,\r\n  relationType,\r\n  logDocuments,\r\n  getRootDoc,\r\n  setRootDoc,\r\n  getRootDocV2,\r\n  extract,\r\n  trimColon,\r\n  getAccTitle,\r\n  setAccTitle,\r\n  getAccDescription,\r\n  setAccDescription,\r\n  addStyleClass,\r\n  setCssClass,\r\n  addDescription,\r\n  setDiagramTitle,\r\n  getDiagramTitle\r\n};\r\n\r\n// src/diagrams/state/styles.js\r\nvar getStyles = /* @__PURE__ */ __name((options) => `\r\ndefs #statediagram-barbEnd {\r\n    fill: ${options.transitionColor};\r\n    stroke: ${options.transitionColor};\r\n  }\r\ng.stateGroup text {\r\n  fill: ${options.nodeBorder};\r\n  stroke: none;\r\n  font-size: 10px;\r\n}\r\ng.stateGroup text {\r\n  fill: ${options.textColor};\r\n  stroke: none;\r\n  font-size: 10px;\r\n\r\n}\r\ng.stateGroup .state-title {\r\n  font-weight: bolder;\r\n  fill: ${options.stateLabelColor};\r\n}\r\n\r\ng.stateGroup rect {\r\n  fill: ${options.mainBkg};\r\n  stroke: ${options.nodeBorder};\r\n}\r\n\r\ng.stateGroup line {\r\n  stroke: ${options.lineColor};\r\n  stroke-width: 1;\r\n}\r\n\r\n.transition {\r\n  stroke: ${options.transitionColor};\r\n  stroke-width: 1;\r\n  fill: none;\r\n}\r\n\r\n.stateGroup .composit {\r\n  fill: ${options.background};\r\n  border-bottom: 1px\r\n}\r\n\r\n.stateGroup .alt-composit {\r\n  fill: #e0e0e0;\r\n  border-bottom: 1px\r\n}\r\n\r\n.state-note {\r\n  stroke: ${options.noteBorderColor};\r\n  fill: ${options.noteBkgColor};\r\n\r\n  text {\r\n    fill: ${options.noteTextColor};\r\n    stroke: none;\r\n    font-size: 10px;\r\n  }\r\n}\r\n\r\n.stateLabel .box {\r\n  stroke: none;\r\n  stroke-width: 0;\r\n  fill: ${options.mainBkg};\r\n  opacity: 0.5;\r\n}\r\n\r\n.edgeLabel .label rect {\r\n  fill: ${options.labelBackgroundColor};\r\n  opacity: 0.5;\r\n}\r\n.edgeLabel {\r\n  background-color: ${options.edgeLabelBackground};\r\n  p {\r\n    background-color: ${options.edgeLabelBackground};\r\n  }\r\n  rect {\r\n    opacity: 0.5;\r\n    background-color: ${options.edgeLabelBackground};\r\n    fill: ${options.edgeLabelBackground};\r\n  }\r\n  text-align: center;\r\n}\r\n.edgeLabel .label text {\r\n  fill: ${options.transitionLabelColor || options.tertiaryTextColor};\r\n}\r\n.label div .edgeLabel {\r\n  color: ${options.transitionLabelColor || options.tertiaryTextColor};\r\n}\r\n\r\n.stateLabel text {\r\n  fill: ${options.stateLabelColor};\r\n  font-size: 10px;\r\n  font-weight: bold;\r\n}\r\n\r\n.node circle.state-start {\r\n  fill: ${options.specialStateColor};\r\n  stroke: ${options.specialStateColor};\r\n}\r\n\r\n.node .fork-join {\r\n  fill: ${options.specialStateColor};\r\n  stroke: ${options.specialStateColor};\r\n}\r\n\r\n.node circle.state-end {\r\n  fill: ${options.innerEndBackground};\r\n  stroke: ${options.background};\r\n  stroke-width: 1.5\r\n}\r\n.end-state-inner {\r\n  fill: ${options.compositeBackground || options.background};\r\n  // stroke: ${options.background};\r\n  stroke-width: 1.5\r\n}\r\n\r\n.node rect {\r\n  fill: ${options.stateBkg || options.mainBkg};\r\n  stroke: ${options.stateBorder || options.nodeBorder};\r\n  stroke-width: 1px;\r\n}\r\n.node polygon {\r\n  fill: ${options.mainBkg};\r\n  stroke: ${options.stateBorder || options.nodeBorder};;\r\n  stroke-width: 1px;\r\n}\r\n#statediagram-barbEnd {\r\n  fill: ${options.lineColor};\r\n}\r\n\r\n.statediagram-cluster rect {\r\n  fill: ${options.compositeTitleBackground};\r\n  stroke: ${options.stateBorder || options.nodeBorder};\r\n  stroke-width: 1px;\r\n}\r\n\r\n.cluster-label, .nodeLabel {\r\n  color: ${options.stateLabelColor};\r\n  // line-height: 1;\r\n}\r\n\r\n.statediagram-cluster rect.outer {\r\n  rx: 5px;\r\n  ry: 5px;\r\n}\r\n.statediagram-state .divider {\r\n  stroke: ${options.stateBorder || options.nodeBorder};\r\n}\r\n\r\n.statediagram-state .title-state {\r\n  rx: 5px;\r\n  ry: 5px;\r\n}\r\n.statediagram-cluster.statediagram-cluster .inner {\r\n  fill: ${options.compositeBackground || options.background};\r\n}\r\n.statediagram-cluster.statediagram-cluster-alt .inner {\r\n  fill: ${options.altBackground ? options.altBackground : \"#efefef\"};\r\n}\r\n\r\n.statediagram-cluster .inner {\r\n  rx:0;\r\n  ry:0;\r\n}\r\n\r\n.statediagram-state rect.basic {\r\n  rx: 5px;\r\n  ry: 5px;\r\n}\r\n.statediagram-state rect.divider {\r\n  stroke-dasharray: 10,10;\r\n  fill: ${options.altBackground ? options.altBackground : \"#efefef\"};\r\n}\r\n\r\n.note-edge {\r\n  stroke-dasharray: 5;\r\n}\r\n\r\n.statediagram-note rect {\r\n  fill: ${options.noteBkgColor};\r\n  stroke: ${options.noteBorderColor};\r\n  stroke-width: 1px;\r\n  rx: 0;\r\n  ry: 0;\r\n}\r\n.statediagram-note rect {\r\n  fill: ${options.noteBkgColor};\r\n  stroke: ${options.noteBorderColor};\r\n  stroke-width: 1px;\r\n  rx: 0;\r\n  ry: 0;\r\n}\r\n\r\n.statediagram-note text {\r\n  fill: ${options.noteTextColor};\r\n}\r\n\r\n.statediagram-note .nodeLabel {\r\n  color: ${options.noteTextColor};\r\n}\r\n.statediagram .edgeLabel {\r\n  color: red; // ${options.noteTextColor};\r\n}\r\n\r\n#dependencyStart, #dependencyEnd {\r\n  fill: ${options.lineColor};\r\n  stroke: ${options.lineColor};\r\n  stroke-width: 1;\r\n}\r\n\r\n.statediagramTitleText {\r\n  text-anchor: middle;\r\n  font-size: 18px;\r\n  fill: ${options.textColor};\r\n}\r\n`, \"getStyles\");\r\nvar styles_default = getStyles;\r\n\r\nexport {\r\n  stateDiagram_default,\r\n  stateRenderer_v3_unified_default,\r\n  stateDb_default,\r\n  styles_default\r\n};\r\n"],
  "mappings": "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IAAI,GAAG,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,KAAK,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,KAAK,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,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",
  "names": []
}
