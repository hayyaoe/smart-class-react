{
  "version": 3,
  "sources": ["../../mermaid/dist/chunks/mermaid.core/classDiagram-v2-C6QPLPW4.mjs"],
  "sourcesContent": ["import {\n  clear,\n  clear2,\n  createLabel_default,\n  insertEdge,\n  insertEdgeLabel,\n  insertNode,\n  intersect_rect_default,\n  markers_default,\n  positionEdgeLabel,\n  positionNode,\n  setNodeElem,\n  updateNodeBounds\n} from \"./chunk-REEJFE46.mjs\";\nimport {\n  classDb_default,\n  classDiagram_default,\n  styles_default\n} from \"./chunk-NGC4727B.mjs\";\nimport {\n  getSubGraphTitleMargins\n} from \"./chunk-I3FGKTZ5.mjs\";\nimport {\n  createText\n} from \"./chunk-U7L4IQIU.mjs\";\nimport {\n  getEdgeId,\n  getStylesFromArray,\n  interpolateToCurve,\n  utils_default\n} from \"./chunk-TLUHKHBO.mjs\";\nimport {\n  __name,\n  common_default,\n  evaluate,\n  getConfig2 as getConfig,\n  log,\n  setupGraphViewbox\n} from \"./chunk-S24QXQKS.mjs\";\n\n// src/diagrams/class/classRenderer-v2.ts\nimport { select as select2, curveLinear } from \"d3\";\nimport * as graphlib2 from \"dagre-d3-es/src/graphlib/index.js\";\n\n// src/dagre-wrapper/index.js\nimport { layout as dagreLayout } from \"dagre-d3-es/src/dagre/index.js\";\nimport * as graphlibJson2 from \"dagre-d3-es/src/graphlib/json.js\";\n\n// src/dagre-wrapper/mermaid-graphlib.js\nimport * as graphlibJson from \"dagre-d3-es/src/graphlib/json.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nvar clusterDb = {};\nvar descendants = {};\nvar parents = {};\nvar clear3 = /* @__PURE__ */ __name(() => {\n  descendants = {};\n  parents = {};\n  clusterDb = {};\n}, \"clear\");\nvar isDescendant = /* @__PURE__ */ __name((id, ancestorId) => {\n  log.trace(\"In isDescendant\", ancestorId, \" \", id, \" = \", descendants[ancestorId].includes(id));\n  if (descendants[ancestorId].includes(id)) {\n    return true;\n  }\n  return false;\n}, \"isDescendant\");\nvar edgeInCluster = /* @__PURE__ */ __name((edge, clusterId) => {\n  log.info(\"Descendants of \", clusterId, \" is \", descendants[clusterId]);\n  log.info(\"Edge is \", edge);\n  if (edge.v === clusterId) {\n    return false;\n  }\n  if (edge.w === clusterId) {\n    return false;\n  }\n  if (!descendants[clusterId]) {\n    log.debug(\"Tilt, \", clusterId, \",not in descendants\");\n    return false;\n  }\n  return descendants[clusterId].includes(edge.v) || isDescendant(edge.v, clusterId) || isDescendant(edge.w, clusterId) || descendants[clusterId].includes(edge.w);\n}, \"edgeInCluster\");\nvar copy = /* @__PURE__ */ __name((clusterId, graph, newGraph, rootId) => {\n  log.warn(\n    \"Copying children of \",\n    clusterId,\n    \"root\",\n    rootId,\n    \"data\",\n    graph.node(clusterId),\n    rootId\n  );\n  const nodes = graph.children(clusterId) || [];\n  if (clusterId !== rootId) {\n    nodes.push(clusterId);\n  }\n  log.warn(\"Copying (nodes) clusterId\", clusterId, \"nodes\", nodes);\n  nodes.forEach((node) => {\n    if (graph.children(node).length > 0) {\n      copy(node, graph, newGraph, rootId);\n    } else {\n      const data = graph.node(node);\n      log.info(\"cp \", node, \" to \", rootId, \" with parent \", clusterId);\n      newGraph.setNode(node, data);\n      if (rootId !== graph.parent(node)) {\n        log.warn(\"Setting parent\", node, graph.parent(node));\n        newGraph.setParent(node, graph.parent(node));\n      }\n      if (clusterId !== rootId && node !== clusterId) {\n        log.debug(\"Setting parent\", node, clusterId);\n        newGraph.setParent(node, clusterId);\n      } else {\n        log.info(\"In copy \", clusterId, \"root\", rootId, \"data\", graph.node(clusterId), rootId);\n        log.debug(\n          \"Not Setting parent for node=\",\n          node,\n          \"cluster!==rootId\",\n          clusterId !== rootId,\n          \"node!==clusterId\",\n          node !== clusterId\n        );\n      }\n      const edges = graph.edges(node);\n      log.debug(\"Copying Edges\", edges);\n      edges.forEach((edge) => {\n        log.info(\"Edge\", edge);\n        const data2 = graph.edge(edge.v, edge.w, edge.name);\n        log.info(\"Edge data\", data2, rootId);\n        try {\n          if (edgeInCluster(edge, rootId)) {\n            log.info(\"Copying as \", edge.v, edge.w, data2, edge.name);\n            newGraph.setEdge(edge.v, edge.w, data2, edge.name);\n            log.info(\"newGraph edges \", newGraph.edges(), newGraph.edge(newGraph.edges()[0]));\n          } else {\n            log.info(\n              \"Skipping copy of edge \",\n              edge.v,\n              \"-->\",\n              edge.w,\n              \" rootId: \",\n              rootId,\n              \" clusterId:\",\n              clusterId\n            );\n          }\n        } catch (e) {\n          log.error(e);\n        }\n      });\n    }\n    log.debug(\"Removing node\", node);\n    graph.removeNode(node);\n  });\n}, \"copy\");\nvar extractDescendants = /* @__PURE__ */ __name((id, graph) => {\n  const children = graph.children(id);\n  let res = [...children];\n  for (const child of children) {\n    parents[child] = id;\n    res = [...res, ...extractDescendants(child, graph)];\n  }\n  return res;\n}, \"extractDescendants\");\nvar findNonClusterChild = /* @__PURE__ */ __name((id, graph) => {\n  log.trace(\"Searching\", id);\n  const children = graph.children(id);\n  log.trace(\"Searching children of id \", id, children);\n  if (children.length < 1) {\n    log.trace(\"This is a valid node\", id);\n    return id;\n  }\n  for (const child of children) {\n    const _id = findNonClusterChild(child, graph);\n    if (_id) {\n      log.trace(\"Found replacement for\", id, \" => \", _id);\n      return _id;\n    }\n  }\n}, \"findNonClusterChild\");\nvar getAnchorId = /* @__PURE__ */ __name((id) => {\n  if (!clusterDb[id]) {\n    return id;\n  }\n  if (!clusterDb[id].externalConnections) {\n    return id;\n  }\n  if (clusterDb[id]) {\n    return clusterDb[id].id;\n  }\n  return id;\n}, \"getAnchorId\");\nvar adjustClustersAndEdges = /* @__PURE__ */ __name((graph, depth) => {\n  if (!graph || depth > 10) {\n    log.debug(\"Opting out, no graph \");\n    return;\n  } else {\n    log.debug(\"Opting in, graph \");\n  }\n  graph.nodes().forEach(function(id) {\n    const children = graph.children(id);\n    if (children.length > 0) {\n      log.warn(\n        \"Cluster identified\",\n        id,\n        \" Replacement id in edges: \",\n        findNonClusterChild(id, graph)\n      );\n      descendants[id] = extractDescendants(id, graph);\n      clusterDb[id] = { id: findNonClusterChild(id, graph), clusterData: graph.node(id) };\n    }\n  });\n  graph.nodes().forEach(function(id) {\n    const children = graph.children(id);\n    const edges = graph.edges();\n    if (children.length > 0) {\n      log.debug(\"Cluster identified\", id, descendants);\n      edges.forEach((edge) => {\n        if (edge.v !== id && edge.w !== id) {\n          const d1 = isDescendant(edge.v, id);\n          const d2 = isDescendant(edge.w, id);\n          if (d1 ^ d2) {\n            log.warn(\"Edge: \", edge, \" leaves cluster \", id);\n            log.warn(\"Descendants of XXX \", id, \": \", descendants[id]);\n            clusterDb[id].externalConnections = true;\n          }\n        }\n      });\n    } else {\n      log.debug(\"Not a cluster \", id, descendants);\n    }\n  });\n  for (let id of Object.keys(clusterDb)) {\n    const nonClusterChild = clusterDb[id].id;\n    const parent = graph.parent(nonClusterChild);\n    if (parent !== id && clusterDb[parent] && !clusterDb[parent].externalConnections) {\n      clusterDb[id].id = parent;\n    }\n  }\n  graph.edges().forEach(function(e) {\n    const edge = graph.edge(e);\n    log.warn(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n    log.warn(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n    let v = e.v;\n    let w = e.w;\n    log.warn(\n      \"Fix XXX\",\n      clusterDb,\n      \"ids:\",\n      e.v,\n      e.w,\n      \"Translating: \",\n      clusterDb[e.v],\n      \" --- \",\n      clusterDb[e.w]\n    );\n    if (clusterDb[e.v] && clusterDb[e.w] && clusterDb[e.v] === clusterDb[e.w]) {\n      log.warn(\"Fixing and trixing link to self - removing XXX\", e.v, e.w, e.name);\n      log.warn(\"Fixing and trixing - removing XXX\", e.v, e.w, e.name);\n      v = getAnchorId(e.v);\n      w = getAnchorId(e.w);\n      graph.removeEdge(e.v, e.w, e.name);\n      const specialId = e.w + \"---\" + e.v;\n      graph.setNode(specialId, {\n        domId: specialId,\n        id: specialId,\n        labelStyle: \"\",\n        labelText: edge.label,\n        padding: 0,\n        shape: \"labelRect\",\n        style: \"\"\n      });\n      const edge1 = structuredClone(edge);\n      const edge2 = structuredClone(edge);\n      edge1.label = \"\";\n      edge1.arrowTypeEnd = \"none\";\n      edge2.label = \"\";\n      edge1.fromCluster = e.v;\n      edge2.toCluster = e.v;\n      graph.setEdge(v, specialId, edge1, e.name + \"-cyclic-special\");\n      graph.setEdge(specialId, w, edge2, e.name + \"-cyclic-special\");\n    } else if (clusterDb[e.v] || clusterDb[e.w]) {\n      log.warn(\"Fixing and trixing - removing XXX\", e.v, e.w, e.name);\n      v = getAnchorId(e.v);\n      w = getAnchorId(e.w);\n      graph.removeEdge(e.v, e.w, e.name);\n      if (v !== e.v) {\n        const parent = graph.parent(v);\n        clusterDb[parent].externalConnections = true;\n        edge.fromCluster = e.v;\n      }\n      if (w !== e.w) {\n        const parent = graph.parent(w);\n        clusterDb[parent].externalConnections = true;\n        edge.toCluster = e.w;\n      }\n      log.warn(\"Fix Replacing with XXX\", v, w, e.name);\n      graph.setEdge(v, w, edge, e.name);\n    }\n  });\n  log.warn(\"Adjusted Graph\", graphlibJson.write(graph));\n  extractor(graph, 0);\n  log.trace(clusterDb);\n}, \"adjustClustersAndEdges\");\nvar extractor = /* @__PURE__ */ __name((graph, depth) => {\n  log.warn(\"extractor - \", depth, graphlibJson.write(graph), graph.children(\"D\"));\n  if (depth > 10) {\n    log.error(\"Bailing out\");\n    return;\n  }\n  let nodes = graph.nodes();\n  let hasChildren = false;\n  for (const node of nodes) {\n    const children = graph.children(node);\n    hasChildren = hasChildren || children.length > 0;\n  }\n  if (!hasChildren) {\n    log.debug(\"Done, no node has children\", graph.nodes());\n    return;\n  }\n  log.debug(\"Nodes = \", nodes, depth);\n  for (const node of nodes) {\n    log.debug(\n      \"Extracting node\",\n      node,\n      clusterDb,\n      clusterDb[node] && !clusterDb[node].externalConnections,\n      !graph.parent(node),\n      graph.node(node),\n      graph.children(\"D\"),\n      \" Depth \",\n      depth\n    );\n    if (!clusterDb[node]) {\n      log.debug(\"Not a cluster\", node, depth);\n    } else if (!clusterDb[node].externalConnections && // !graph.parent(node) &&\n    graph.children(node) && graph.children(node).length > 0) {\n      log.warn(\n        \"Cluster without external connections, without a parent and with children\",\n        node,\n        depth\n      );\n      const graphSettings = graph.graph();\n      let dir = graphSettings.rankdir === \"TB\" ? \"LR\" : \"TB\";\n      if (clusterDb[node]?.clusterData?.dir) {\n        dir = clusterDb[node].clusterData.dir;\n        log.warn(\"Fixing dir\", clusterDb[node].clusterData.dir, dir);\n      }\n      const clusterGraph = new graphlib.Graph({\n        multigraph: true,\n        compound: true\n      }).setGraph({\n        rankdir: dir,\n        // Todo: set proper spacing\n        nodesep: 50,\n        ranksep: 50,\n        marginx: 8,\n        marginy: 8\n      }).setDefaultEdgeLabel(function() {\n        return {};\n      });\n      log.warn(\"Old graph before copy\", graphlibJson.write(graph));\n      copy(node, graph, clusterGraph, node);\n      graph.setNode(node, {\n        clusterNode: true,\n        id: node,\n        clusterData: clusterDb[node].clusterData,\n        labelText: clusterDb[node].labelText,\n        graph: clusterGraph\n      });\n      log.warn(\"New graph after copy node: (\", node, \")\", graphlibJson.write(clusterGraph));\n      log.debug(\"Old graph after copy\", graphlibJson.write(graph));\n    } else {\n      log.warn(\n        \"Cluster ** \",\n        node,\n        \" **not meeting the criteria !externalConnections:\",\n        !clusterDb[node].externalConnections,\n        \" no parent: \",\n        !graph.parent(node),\n        \" children \",\n        graph.children(node) && graph.children(node).length > 0,\n        graph.children(\"D\"),\n        depth\n      );\n      log.debug(clusterDb);\n    }\n  }\n  nodes = graph.nodes();\n  log.warn(\"New list of nodes\", nodes);\n  for (const node of nodes) {\n    const data = graph.node(node);\n    log.warn(\" Now next level\", node, data);\n    if (data.clusterNode) {\n      extractor(data.graph, depth + 1);\n    }\n  }\n}, \"extractor\");\nvar sorter = /* @__PURE__ */ __name((graph, nodes) => {\n  if (nodes.length === 0) {\n    return [];\n  }\n  let result = Object.assign(nodes);\n  nodes.forEach((node) => {\n    const children = graph.children(node);\n    const sorted = sorter(graph, children);\n    result = [...result, ...sorted];\n  });\n  return result;\n}, \"sorter\");\nvar sortNodesByHierarchy = /* @__PURE__ */ __name((graph) => sorter(graph, graph.children()), \"sortNodesByHierarchy\");\n\n// src/dagre-wrapper/clusters.js\nimport { select } from \"d3\";\nvar rect = /* @__PURE__ */ __name((parent, node) => {\n  log.info(\"Creating subgraph rect for \", node.id, node);\n  const siteConfig = getConfig();\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"cluster\" + (node.class ? \" \" + node.class : \"\")).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const useHtmlLabels = evaluate(siteConfig.flowchart.htmlLabels);\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"cluster-label\");\n  const text = node.labelType === \"markdown\" ? createText(label, node.labelText, { style: node.labelStyle, useHtmlLabels }, siteConfig) : label.node().appendChild(createLabel_default(node.labelText, node.labelStyle, void 0, true));\n  let bbox = text.getBBox();\n  if (evaluate(siteConfig.flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  const width = node.width <= bbox.width + padding ? bbox.width + padding : node.width;\n  if (node.width <= bbox.width + padding) {\n    node.diff = (bbox.width - node.width) / 2 - node.padding / 2;\n  } else {\n    node.diff = -node.padding / 2;\n  }\n  log.trace(\"Data \", node, JSON.stringify(node));\n  rect2.attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", node.x - width / 2).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", width).attr(\"height\", node.height + padding);\n  const { subGraphTitleTopMargin } = getSubGraphTitleMargins(siteConfig);\n  if (useHtmlLabels) {\n    label.attr(\n      \"transform\",\n      // This puts the label on top of the box instead of inside it\n      `translate(${node.x - bbox.width / 2}, ${node.y - node.height / 2 + subGraphTitleTopMargin})`\n    );\n  } else {\n    label.attr(\n      \"transform\",\n      // This puts the label on top of the box instead of inside it\n      `translate(${node.x}, ${node.y - node.height / 2 + subGraphTitleTopMargin})`\n    );\n  }\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return intersect_rect_default(node, point);\n  };\n  return shapeSvg;\n}, \"rect\");\nvar noteGroup = /* @__PURE__ */ __name((parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"note-cluster\").attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  rect2.attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", node.x - node.width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", node.width + padding).attr(\"height\", node.height + padding).attr(\"fill\", \"none\");\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return intersect_rect_default(node, point);\n  };\n  return shapeSvg;\n}, \"noteGroup\");\nvar roundedWithTitle = /* @__PURE__ */ __name((parent, node) => {\n  const siteConfig = getConfig();\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", node.classes).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"cluster-label\");\n  const innerRect = shapeSvg.append(\"rect\");\n  const text = label.node().appendChild(createLabel_default(node.labelText, node.labelStyle, void 0, true));\n  let bbox = text.getBBox();\n  if (evaluate(siteConfig.flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  bbox = text.getBBox();\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  const width = node.width <= bbox.width + node.padding ? bbox.width + node.padding : node.width;\n  if (node.width <= bbox.width + node.padding) {\n    node.diff = (bbox.width + node.padding * 0 - node.width) / 2;\n  } else {\n    node.diff = -node.padding / 2;\n  }\n  rect2.attr(\"class\", \"outer\").attr(\"x\", node.x - width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", width + padding).attr(\"height\", node.height + padding);\n  innerRect.attr(\"class\", \"inner\").attr(\"x\", node.x - width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding + bbox.height - 1).attr(\"width\", width + padding).attr(\"height\", node.height + padding - bbox.height - 3);\n  const { subGraphTitleTopMargin } = getSubGraphTitleMargins(siteConfig);\n  label.attr(\n    \"transform\",\n    `translate(${node.x - bbox.width / 2}, ${node.y - node.height / 2 - node.padding / 3 + (evaluate(siteConfig.flowchart.htmlLabels) ? 5 : 3) + subGraphTitleTopMargin})`\n  );\n  const rectBox = rect2.node().getBBox();\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return intersect_rect_default(node, point);\n  };\n  return shapeSvg;\n}, \"roundedWithTitle\");\nvar divider = /* @__PURE__ */ __name((parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", node.classes).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  rect2.attr(\"class\", \"divider\").attr(\"x\", node.x - node.width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2).attr(\"width\", node.width + padding).attr(\"height\", node.height + padding);\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.diff = -node.padding / 2;\n  node.intersect = function(point) {\n    return intersect_rect_default(node, point);\n  };\n  return shapeSvg;\n}, \"divider\");\nvar shapes = { rect, roundedWithTitle, noteGroup, divider };\nvar clusterElems = {};\nvar insertCluster = /* @__PURE__ */ __name((elem, node) => {\n  log.trace(\"Inserting cluster\");\n  const shape = node.shape || \"rect\";\n  clusterElems[node.id] = shapes[shape](elem, node);\n}, \"insertCluster\");\nvar clear4 = /* @__PURE__ */ __name(() => {\n  clusterElems = {};\n}, \"clear\");\n\n// src/dagre-wrapper/index.js\nvar recursiveRender = /* @__PURE__ */ __name(async (_elem, graph, diagramType, id, parentCluster, siteConfig) => {\n  log.info(\"Graph in recursive render: XXX\", graphlibJson2.write(graph), parentCluster);\n  const dir = graph.graph().rankdir;\n  log.trace(\"Dir in recursive render - dir:\", dir);\n  const elem = _elem.insert(\"g\").attr(\"class\", \"root\");\n  if (!graph.nodes()) {\n    log.info(\"No nodes found for\", graph);\n  } else {\n    log.info(\"Recursive render XXX\", graph.nodes());\n  }\n  if (graph.edges().length > 0) {\n    log.trace(\"Recursive edges\", graph.edge(graph.edges()[0]));\n  }\n  const clusters = elem.insert(\"g\").attr(\"class\", \"clusters\");\n  const edgePaths = elem.insert(\"g\").attr(\"class\", \"edgePaths\");\n  const edgeLabels = elem.insert(\"g\").attr(\"class\", \"edgeLabels\");\n  const nodes = elem.insert(\"g\").attr(\"class\", \"nodes\");\n  await Promise.all(\n    graph.nodes().map(async function(v) {\n      const node = graph.node(v);\n      if (parentCluster !== void 0) {\n        const data = JSON.parse(JSON.stringify(parentCluster.clusterData));\n        log.info(\"Setting data for cluster XXX (\", v, \") \", data, parentCluster);\n        graph.setNode(parentCluster.id, data);\n        if (!graph.parent(v)) {\n          log.trace(\"Setting parent\", v, parentCluster.id);\n          graph.setParent(v, parentCluster.id, data);\n        }\n      }\n      log.info(\"(Insert) Node XXX\" + v + \": \" + JSON.stringify(graph.node(v)));\n      if (node?.clusterNode) {\n        log.info(\"Cluster identified\", v, node.width, graph.node(v));\n        const { ranksep, nodesep } = graph.graph();\n        node.graph.setGraph({\n          ...node.graph.graph(),\n          ranksep,\n          nodesep\n        });\n        const o = await recursiveRender(\n          nodes,\n          node.graph,\n          diagramType,\n          id,\n          graph.node(v),\n          siteConfig\n        );\n        const newEl = o.elem;\n        updateNodeBounds(node, newEl);\n        node.diff = o.diff || 0;\n        log.info(\"Node bounds (abc123)\", v, node, node.width, node.x, node.y);\n        setNodeElem(newEl, node);\n        log.warn(\"Recursive render complete \", newEl, node);\n      } else {\n        if (graph.children(v).length > 0) {\n          log.info(\"Cluster - the non recursive path XXX\", v, node.id, node, graph);\n          log.info(findNonClusterChild(node.id, graph));\n          clusterDb[node.id] = { id: findNonClusterChild(node.id, graph), node };\n        } else {\n          log.info(\"Node - the non recursive path\", v, node.id, node);\n          await insertNode(nodes, graph.node(v), { config: siteConfig, dir });\n        }\n      }\n    })\n  );\n  graph.edges().forEach(async function(e) {\n    const edge = graph.edge(e.v, e.w, e.name);\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \", e, \" \", JSON.stringify(graph.edge(e)));\n    log.info(\"Fix\", clusterDb, \"ids:\", e.v, e.w, \"Translating: \", clusterDb[e.v], clusterDb[e.w]);\n    await insertEdgeLabel(edgeLabels, edge);\n  });\n  graph.edges().forEach(function(e) {\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n  });\n  log.info(\"Graph before layout:\", JSON.stringify(graphlibJson2.write(graph)));\n  log.info(\"#############################################\");\n  log.info(\"###                Layout                 ###\");\n  log.info(\"#############################################\");\n  log.info(graph);\n  dagreLayout(graph);\n  log.info(\"Graph after layout:\", JSON.stringify(graphlibJson2.write(graph)));\n  let diff = 0;\n  const { subGraphTitleTotalMargin } = getSubGraphTitleMargins(siteConfig);\n  sortNodesByHierarchy(graph).forEach(function(v) {\n    const node = graph.node(v);\n    log.info(\"Position \" + v + \": \" + JSON.stringify(graph.node(v)));\n    log.info(\n      \"Position \" + v + \": (\" + node.x,\n      \",\" + node.y,\n      \") width: \",\n      node.width,\n      \" height: \",\n      node.height\n    );\n    if (node?.clusterNode) {\n      node.y += subGraphTitleTotalMargin;\n      positionNode(node);\n    } else {\n      if (graph.children(v).length > 0) {\n        node.height += subGraphTitleTotalMargin;\n        insertCluster(clusters, node);\n        clusterDb[node.id].node = node;\n      } else {\n        node.y += subGraphTitleTotalMargin / 2;\n        positionNode(node);\n      }\n    }\n  });\n  graph.edges().forEach(function(e) {\n    const edge = graph.edge(e);\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(edge), edge);\n    edge.points.forEach((point) => point.y += subGraphTitleTotalMargin / 2);\n    const paths = insertEdge(edgePaths, e, edge, clusterDb, diagramType, graph, id);\n    positionEdgeLabel(edge, paths);\n  });\n  graph.nodes().forEach(function(v) {\n    const n = graph.node(v);\n    log.info(v, n.type, n.diff);\n    if (n.type === \"group\") {\n      diff = n.diff;\n    }\n  });\n  return { elem, diff };\n}, \"recursiveRender\");\nvar render = /* @__PURE__ */ __name(async (elem, graph, markers, diagramType, id) => {\n  markers_default(elem, markers, diagramType, id);\n  clear();\n  clear2();\n  clear4();\n  clear3();\n  log.warn(\"Graph at first:\", JSON.stringify(graphlibJson2.write(graph)));\n  adjustClustersAndEdges(graph);\n  log.warn(\"Graph after:\", JSON.stringify(graphlibJson2.write(graph)));\n  const siteConfig = getConfig();\n  await recursiveRender(elem, graph, diagramType, id, void 0, siteConfig);\n}, \"render\");\n\n// src/diagrams/class/classRenderer-v2.ts\nvar sanitizeText = /* @__PURE__ */ __name((txt) => common_default.sanitizeText(txt, getConfig()), \"sanitizeText\");\nvar conf = {\n  dividerMargin: 10,\n  padding: 5,\n  textHeight: 10,\n  curve: void 0\n};\nvar addNamespaces = /* @__PURE__ */ __name(function(namespaces, g, _id, diagObj) {\n  log.info(\"keys:\", [...namespaces.keys()]);\n  log.info(namespaces);\n  namespaces.forEach(function(vertex) {\n    const shape = \"rect\";\n    const node = {\n      shape,\n      id: vertex.id,\n      domId: vertex.domId,\n      labelText: sanitizeText(vertex.id),\n      labelStyle: \"\",\n      style: \"fill: none; stroke: black\",\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: getConfig().flowchart?.padding ?? getConfig().class?.padding\n    };\n    g.setNode(vertex.id, node);\n    addClasses(vertex.classes, g, _id, diagObj, vertex.id);\n    log.info(\"setNode\", node);\n  });\n}, \"addNamespaces\");\nvar addClasses = /* @__PURE__ */ __name(function(classes, g, _id, diagObj, parent) {\n  log.info(\"keys:\", [...classes.keys()]);\n  log.info(classes);\n  [...classes.values()].filter((vertex) => vertex.parent === parent).forEach(function(vertex) {\n    const cssClassStr = vertex.cssClasses.join(\" \");\n    const styles = getStylesFromArray(vertex.styles);\n    const vertexText = vertex.label ?? vertex.id;\n    const radius = 0;\n    const shape = \"class_box\";\n    const node = {\n      labelStyle: styles.labelStyle,\n      shape,\n      labelText: sanitizeText(vertexText),\n      classData: vertex,\n      rx: radius,\n      ry: radius,\n      class: cssClassStr,\n      style: styles.style,\n      id: vertex.id,\n      domId: vertex.domId,\n      tooltip: diagObj.db.getTooltip(vertex.id, parent) || \"\",\n      haveCallback: vertex.haveCallback,\n      link: vertex.link,\n      width: vertex.type === \"group\" ? 500 : void 0,\n      type: vertex.type,\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: getConfig().flowchart?.padding ?? getConfig().class?.padding\n    };\n    g.setNode(vertex.id, node);\n    if (parent) {\n      g.setParent(vertex.id, parent);\n    }\n    log.info(\"setNode\", node);\n  });\n}, \"addClasses\");\nvar addNotes = /* @__PURE__ */ __name(function(notes, g, startEdgeId, classes) {\n  log.info(notes);\n  notes.forEach(function(note, i) {\n    const vertex = note;\n    const cssNoteStr = \"\";\n    const styles = { labelStyle: \"\", style: \"\" };\n    const vertexText = vertex.text;\n    const radius = 0;\n    const shape = \"note\";\n    const node = {\n      labelStyle: styles.labelStyle,\n      shape,\n      labelText: sanitizeText(vertexText),\n      noteData: vertex,\n      rx: radius,\n      ry: radius,\n      class: cssNoteStr,\n      style: styles.style,\n      id: vertex.id,\n      domId: vertex.id,\n      tooltip: \"\",\n      type: \"note\",\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: getConfig().flowchart?.padding ?? getConfig().class?.padding\n    };\n    g.setNode(vertex.id, node);\n    log.info(\"setNode\", node);\n    if (!vertex.class || !classes.has(vertex.class)) {\n      return;\n    }\n    const edgeId = startEdgeId + i;\n    const edgeData = {\n      id: `edgeNote${edgeId}`,\n      //Set relationship style and line type\n      classes: \"relation\",\n      pattern: \"dotted\",\n      // Set link type for rendering\n      arrowhead: \"none\",\n      //Set edge extra labels\n      startLabelRight: \"\",\n      endLabelLeft: \"\",\n      //Set relation arrow types\n      arrowTypeStart: \"none\",\n      arrowTypeEnd: \"none\",\n      style: \"fill:none\",\n      labelStyle: \"\",\n      curve: interpolateToCurve(conf.curve, curveLinear)\n    };\n    g.setEdge(vertex.id, vertex.class, edgeData, edgeId);\n  });\n}, \"addNotes\");\nvar addRelations = /* @__PURE__ */ __name(function(relations, g) {\n  const conf2 = getConfig().flowchart;\n  let cnt = 0;\n  relations.forEach(function(edge) {\n    cnt++;\n    const edgeData = {\n      //Set relationship style and line type\n      classes: \"relation\",\n      pattern: edge.relation.lineType == 1 ? \"dashed\" : \"solid\",\n      id: getEdgeId(edge.id1, edge.id2, {\n        prefix: \"id\",\n        counter: cnt\n      }),\n      // Set link type for rendering\n      arrowhead: edge.type === \"arrow_open\" ? \"none\" : \"normal\",\n      //Set edge extra labels\n      startLabelRight: edge.relationTitle1 === \"none\" ? \"\" : edge.relationTitle1,\n      endLabelLeft: edge.relationTitle2 === \"none\" ? \"\" : edge.relationTitle2,\n      //Set relation arrow types\n      arrowTypeStart: getArrowMarker(edge.relation.type1),\n      arrowTypeEnd: getArrowMarker(edge.relation.type2),\n      style: \"fill:none\",\n      labelStyle: \"\",\n      curve: interpolateToCurve(conf2?.curve, curveLinear)\n    };\n    log.info(edgeData, edge);\n    if (edge.style !== void 0) {\n      const styles = getStylesFromArray(edge.style);\n      edgeData.style = styles.style;\n      edgeData.labelStyle = styles.labelStyle;\n    }\n    edge.text = edge.title;\n    if (edge.text === void 0) {\n      if (edge.style !== void 0) {\n        edgeData.arrowheadStyle = \"fill: #333\";\n      }\n    } else {\n      edgeData.arrowheadStyle = \"fill: #333\";\n      edgeData.labelpos = \"c\";\n      if (getConfig().flowchart?.htmlLabels ?? getConfig().htmlLabels) {\n        edgeData.labelType = \"html\";\n        edgeData.label = '<span class=\"edgeLabel\">' + edge.text + \"</span>\";\n      } else {\n        edgeData.labelType = \"text\";\n        edgeData.label = edge.text.replace(common_default.lineBreakRegex, \"\\n\");\n        if (edge.style === void 0) {\n          edgeData.style = edgeData.style || \"stroke: #333; stroke-width: 1.5px;fill:none\";\n        }\n        edgeData.labelStyle = edgeData.labelStyle.replace(\"color:\", \"fill:\");\n      }\n    }\n    g.setEdge(edge.id1, edge.id2, edgeData, cnt);\n  });\n}, \"addRelations\");\nvar setConf = /* @__PURE__ */ __name(function(cnf) {\n  conf = {\n    ...conf,\n    ...cnf\n  };\n}, \"setConf\");\nvar draw = /* @__PURE__ */ __name(async function(text, id, _version, diagObj) {\n  log.info(\"Drawing class - \", id);\n  const conf2 = getConfig().flowchart ?? getConfig().class;\n  const securityLevel = getConfig().securityLevel;\n  log.info(\"config:\", conf2);\n  const nodeSpacing = conf2?.nodeSpacing ?? 50;\n  const rankSpacing = conf2?.rankSpacing ?? 50;\n  const g = new graphlib2.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: diagObj.db.getDirection(),\n    nodesep: nodeSpacing,\n    ranksep: rankSpacing,\n    marginx: 8,\n    marginy: 8\n  }).setDefaultEdgeLabel(function() {\n    return {};\n  });\n  const namespaces = diagObj.db.getNamespaces();\n  const classes = diagObj.db.getClasses();\n  const relations = diagObj.db.getRelations();\n  const notes = diagObj.db.getNotes();\n  log.info(relations);\n  addNamespaces(namespaces, g, id, diagObj);\n  addClasses(classes, g, id, diagObj);\n  addRelations(relations, g);\n  addNotes(notes, g, relations.length + 1, classes);\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select2(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select2(sandboxElement.nodes()[0].contentDocument.body) : select2(\"body\");\n  const svg = root.select(`[id=\"${id}\"]`);\n  const element = root.select(\"#\" + id + \" g\");\n  await render(\n    element,\n    g,\n    [\"aggregation\", \"extension\", \"composition\", \"dependency\", \"lollipop\"],\n    \"classDiagram\",\n    id\n  );\n  utils_default.insertTitle(svg, \"classTitleText\", conf2?.titleTopMargin ?? 5, diagObj.db.getDiagramTitle());\n  setupGraphViewbox(g, svg, conf2?.diagramPadding, conf2?.useMaxWidth);\n  if (!conf2?.htmlLabels) {\n    const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      const dim = label.getBBox();\n      const rect2 = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n      rect2.setAttribute(\"rx\", 0);\n      rect2.setAttribute(\"ry\", 0);\n      rect2.setAttribute(\"width\", dim.width);\n      rect2.setAttribute(\"height\", dim.height);\n      label.insertBefore(rect2, label.firstChild);\n    }\n  }\n}, \"draw\");\nfunction getArrowMarker(type) {\n  let marker;\n  switch (type) {\n    case 0:\n      marker = \"aggregation\";\n      break;\n    case 1:\n      marker = \"extension\";\n      break;\n    case 2:\n      marker = \"composition\";\n      break;\n    case 3:\n      marker = \"dependency\";\n      break;\n    case 4:\n      marker = \"lollipop\";\n      break;\n    default:\n      marker = \"none\";\n  }\n  return marker;\n}\n__name(getArrowMarker, \"getArrowMarker\");\nvar classRenderer_v2_default = {\n  setConf,\n  draw\n};\n\n// src/diagrams/class/classDiagram-v2.ts\nvar diagram = {\n  parser: classDiagram_default,\n  db: classDb_default,\n  renderer: classRenderer_v2_default,\n  styles: styles_default,\n  init: /* @__PURE__ */ __name((cnf) => {\n    if (!cnf.class) {\n      cnf.class = {};\n    }\n    cnf.class.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    classDb_default.clear();\n  }, \"init\")\n};\nexport {\n  diagram\n};\n"],
  "mappings": "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",
  "names": []
}
