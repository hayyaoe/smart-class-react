{
  "version": 3,
  "sources": ["../../mermaid/dist/chunks/mermaid.core/chunk-U2OMI7UW.mjs"],
  "sourcesContent": ["import {\r\n  insertCluster,\r\n  insertEdge,\r\n  insertEdgeLabel,\r\n  insertNode,\r\n  labelHelper,\r\n  markers_default,\r\n  positionEdgeLabel\r\n} from \"./chunk-O5FTX4FK.mjs\";\r\nimport {\r\n  interpolateToCurve\r\n} from \"./chunk-TLUHKHBO.mjs\";\r\nimport {\r\n  __name,\r\n  common_default,\r\n  getConfig,\r\n  log\r\n} from \"./chunk-S24QXQKS.mjs\";\r\n\r\n// src/internals.ts\r\nvar internalHelpers = {\r\n  common: common_default,\r\n  getConfig,\r\n  insertCluster,\r\n  insertEdge,\r\n  insertEdgeLabel,\r\n  insertMarkers: markers_default,\r\n  insertNode,\r\n  interpolateToCurve,\r\n  labelHelper,\r\n  log,\r\n  positionEdgeLabel\r\n};\r\n\r\n// src/rendering-util/render.ts\r\nvar layoutAlgorithms = {};\r\nvar registerLayoutLoaders = /* @__PURE__ */ __name((loaders) => {\r\n  for (const loader of loaders) {\r\n    layoutAlgorithms[loader.name] = loader;\r\n  }\r\n}, \"registerLayoutLoaders\");\r\nvar registerDefaultLayoutLoaders = /* @__PURE__ */ __name(() => {\r\n  registerLayoutLoaders([\r\n    {\r\n      name: \"dagre\",\r\n      loader: /* @__PURE__ */ __name(async () => await import(\"./dagre-7KT5K2WU.mjs\"), \"loader\")\r\n    }\r\n  ]);\r\n}, \"registerDefaultLayoutLoaders\");\r\nregisterDefaultLayoutLoaders();\r\nvar render = /* @__PURE__ */ __name(async (data4Layout, svg) => {\r\n  if (!(data4Layout.layoutAlgorithm in layoutAlgorithms)) {\r\n    throw new Error(`Unknown layout algorithm: ${data4Layout.layoutAlgorithm}`);\r\n  }\r\n  const layoutDefinition = layoutAlgorithms[data4Layout.layoutAlgorithm];\r\n  const layoutRenderer = await layoutDefinition.loader();\r\n  return layoutRenderer.render(data4Layout, svg, internalHelpers, {\r\n    algorithm: layoutDefinition.algorithm\r\n  });\r\n}, \"render\");\r\nvar getRegisteredLayoutAlgorithm = /* @__PURE__ */ __name((algorithm = \"\", { fallback = \"dagre\" } = {}) => {\r\n  if (algorithm in layoutAlgorithms) {\r\n    return algorithm;\r\n  }\r\n  if (fallback in layoutAlgorithms) {\r\n    log.warn(`Layout algorithm ${algorithm} is not registered. Using ${fallback} as fallback.`);\r\n    return fallback;\r\n  }\r\n  throw new Error(`Both layout algorithms ${algorithm} and ${fallback} are not registered.`);\r\n}, \"getRegisteredLayoutAlgorithm\");\r\n\r\nexport {\r\n  registerLayoutLoaders,\r\n  render,\r\n  getRegisteredLayoutAlgorithm\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAoBA,IAAI,kBAAkB;AAAA,EACpB,QAAQ;AAAA,EACR;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,eAAe;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAGA,IAAI,mBAAmB,CAAC;AACxB,IAAI,wBAAwC,OAAO,CAAC,YAAY;AAC9D,aAAW,UAAU,SAAS;AAC5B,qBAAiB,OAAO,IAAI,IAAI;AAAA,EAClC;AACF,GAAG,uBAAuB;AAC1B,IAAI,+BAA+C,OAAO,MAAM;AAC9D,wBAAsB;AAAA,IACpB;AAAA,MACE,MAAM;AAAA,MACN,QAAwB,OAAO,YAAY,MAAM,OAAO,8BAAsB,GAAG,QAAQ;AAAA,IAC3F;AAAA,EACF,CAAC;AACH,GAAG,8BAA8B;AACjC,6BAA6B;AAC7B,IAAI,SAAyB,OAAO,OAAO,aAAa,QAAQ;AAC9D,MAAI,EAAE,YAAY,mBAAmB,mBAAmB;AACtD,UAAM,IAAI,MAAM,6BAA6B,YAAY,eAAe,EAAE;AAAA,EAC5E;AACA,QAAM,mBAAmB,iBAAiB,YAAY,eAAe;AACrE,QAAM,iBAAiB,MAAM,iBAAiB,OAAO;AACrD,SAAO,eAAe,OAAO,aAAa,KAAK,iBAAiB;AAAA,IAC9D,WAAW,iBAAiB;AAAA,EAC9B,CAAC;AACH,GAAG,QAAQ;AACX,IAAI,+BAA+C,OAAO,CAAC,YAAY,IAAI,EAAE,WAAW,QAAQ,IAAI,CAAC,MAAM;AACzG,MAAI,aAAa,kBAAkB;AACjC,WAAO;AAAA,EACT;AACA,MAAI,YAAY,kBAAkB;AAChC,QAAI,KAAK,oBAAoB,SAAS,6BAA6B,QAAQ,eAAe;AAC1F,WAAO;AAAA,EACT;AACA,QAAM,IAAI,MAAM,0BAA0B,SAAS,QAAQ,QAAQ,sBAAsB;AAC3F,GAAG,8BAA8B;",
  "names": []
}
